:CREATE_AND_POPULATE

        SELECT distinct protocol_app_node_id as pan_id, external_database_release_id, name as dataset_name,
                       ':PROJECT_ID' as project_id, ':ORG_ABBREV' as org_abbrev, current_timestamp as modification_date
        FROM (
          SELECT
            sl.protocol_app_node_id
          , s.external_database_release_id
          , d.name
          FROM
            study.nodeSet s
          , study.nodeNodeSet sl
          , sres.externaldatabaserelease r
          , sres.externaldatabase d
          , apidb.datasource ds
          WHERE
            s.external_database_release_id = r.external_database_release_id
            and r.external_database_id = d.external_database_id
            and s.node_set_id = sl.node_set_id
            and s.external_database_release_id is not null
            and d.name = ds.external_database_name
            and r.version = ds.version
            and ds.taxon_id = :TAXON_ID
          UNION
          SELECT pan.protocol_app_node_id
          , pan.external_database_release_id
          , d.name
          FROM study.protocolappnode pan
          , sres.externaldatabaserelease r
          , sres.externaldatabase d
          , apidb.datasource ds
          WHERE
            pan.external_database_release_id = r.external_database_release_id
            and r.external_database_id = d.external_database_id
            and pan.external_database_release_id is not null
            and d.name = ds.external_database_name
            and r.version = ds.version
            and ds.taxon_id = :TAXON_ID
        ) t
        ORDER BY external_database_release_id, protocol_app_node_id;
      
:DECLARE_PARTITION;
