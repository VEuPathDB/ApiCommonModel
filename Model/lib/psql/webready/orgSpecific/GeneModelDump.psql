:CREATE_AND_POPULATE
        SELECT source_id, project_id, sequence_id, gm_start,gm_end, type, is_reversed,
               string_agg(transcript_id, ',' ORDER BY transcript_id) AS transcript_ids,
               ':ORG_ABBREV' as org_abbrev, current_timestamp as modification_date
        FROM (
          SELECT distinct ta.source_id as transcript_id, ta.gene_source_id as source_id, ta.project_id,
              ta.sequence_id,gm.start_min as gm_start, gm.end_max as gm_end,
              gm.type, gl.is_reversed
          FROM
            apidb.FeatureLocation gl, dots.NaSequence s,
            :SCHEMA.TranscriptAttributes ta,
            (
              SELECT CASE el.feature_type WHEN 'ExonFeature' THEN 'Exon' ELSE el.feature_type END as type,
                  el.parent_id as na_feature_id, el.start_min as start_min, el.end_max as end_max
              FROM apidb.FeatureLocation el, dots.nasequence nas
              WHERE el.feature_type in  ('ExonFeature','five_prime_UTR', 'three_prime_UTR','CDS','Intron')
                AND el.is_top_level = 1
                AND nas.na_sequence_id = el.na_sequence_id
                and nas.taxon_id = :TAXON_ID
            ) gm
          WHERE gm.na_feature_id = ta.na_feature_id
            AND s.na_sequence_id = gl.na_sequence_id
            AND ta.na_feature_id = gl.na_feature_id
            AND gl.is_top_level = 1
            AND ta.org_abbrev = ':ORG_ABBREV'
        ) t
        GROUP BY source_id, project_id, sequence_id,
                 gm_start,  gm_end, type, is_reversed
        ORDER BY CASE WHEN is_reversed = 1 THEN -1 * gm_start ELSE gm_start END;
       
    
:DECLARE_PARTITION;

