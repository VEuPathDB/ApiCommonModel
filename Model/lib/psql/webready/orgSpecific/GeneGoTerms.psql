:CREATE_AND_POPULATE
        with root_term
             as (select ontology_term_id,
                        cast(initcap(replace(name, '_', ' ')) as varchar(20)) as ontology
                 from sres.OntologyTerm
                 where source_id in ('GO_0008150','GO_0003674','GO_0005575'))
        select ':PROJECT_ID' as project_id, :ORG_ABBREV as org_abbrev, current_timestamp as modification_date,
               gf.source_id as gene_source_id, t.source_id as transcript_source_id, taf.aa_sequence_id,
               cast (CASE ga.is_not WHEN 0 THEN '' WHEN 1 THEN 'not' ELSE ga.is_not::varchar END as varchar(3)) as is_not, ns.taxon_id,
               cast (gt.source_id as varchar(20)) as go_id,
               gt.ontology_term_id as go_term_id, rt.ontology,
               cast(gt.name as varchar(250)) as go_term_name,
               cast(gail.name as varchar(24)) as source,
               cast(gec.name as varchar(12)) as evidence_code,
               cast(gaiec.reference as varchar(250)) as reference,
               cast(gaiec.evidence_code_parameter as varchar(80))as evidence_code_parameter
        from dots.GeneFeature gf, dots.Transcript t, dots.TranslatedAaFeature taf, dots.GoAssociation ga,
             dots.GoAssociationInstance gai, dots.GoAssociationInstanceLoe gail,
             dots.GoAssocInstEvidCode gaiec, sres.OntologyTerm gec, dots.NaSequence ns,
             sres.OntologyTerm gt LEFT JOIN root_term rt ON gt.ancestor_term_id = rt.ontology_term_id
        where t.parent_id = gf.na_feature_id
          and gf.na_sequence_id = ns.na_sequence_id
          and ns.taxon_id = :TAXON_ID
          and t.na_feature_id = taf.na_feature_id
          and taf.aa_sequence_id = ga.row_id
          and ga.table_id = (select table_id
                             from core.TableInfo
                             where name = 'TranslatedAASequence')
          and ga.go_term_id = gt.ontology_term_id
          and ga.go_association_id = gai.go_association_id
          and gai.go_assoc_inst_loe_id = gail.go_assoc_inst_loe_id
          and gai.go_association_instance_id = gaiec.go_association_instance_id
          and gaiec.go_evidence_code_id = gec.ontology_term_id
      
    
:DECLARE_PARTITION;

