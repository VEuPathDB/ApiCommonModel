:CREATE_AND_POPULATE

      
       CREATE TABLE Profile  (
         DATASET_NAME	    VARCHAR(200),
         DATASET_TYPE	    VARCHAR(50),
         DATASET_SUBTYPE    VARCHAR(50),
         PROFILE_TYPE	    VARCHAR(30),
         NODE_TYPE	    VARCHAR(100),
         SOURCE_ID	        VARCHAR(500),
         PROFILE_STUDY_ID	NUMERIC(7),
         PROFILE_SET_NAME	VARCHAR(400),
         PROFILE_SET_SUFFIX	VARCHAR(50),
         PROFILE_AS_STRING	VARCHAR(4000),
         MAX_VALUE	        NUMERIC,
         MIN_VALUE	        NUMERIC,
         MAX_TIMEPOINT	    VARCHAR(200),
         MIN_TIMEPOINT	    VARCHAR(200)
       )
      
    
:DECLARE_PARTITION;


      
        DO $$
        DECLARE
          ctrows NUMERIC := 0;
          commit_after NUMERIC := 10000;
          pf_rows record;
        BEGIN
          FOR pf_rows IN (
            SELECT
               ds.name as dataset_name, ds.type as dataset_type,
               ds.subtype as dataset_subtype, profile.profile_type, profile.node_type,
               profile.source_id, profile.node_set_id as profile_study_id,
               ps.name as profile_set_name,
               cast(case
                      when regexp_replace(ps.name, '\[.+\]', '') like '% - %'
                        then regexp_replace(regexp_replace(ps.name, ' *\[.+\]', ''), '.+ - ', '')
                      -- special cases for legacy datasets
                      when regexp_replace(ps.name, '\[.+\]', '') like 'DeRisi%'
                        then regexp_replace(regexp_replace(ps.name, '\[.+\]', ''), 'DeRisi ', '')
                      when regexp_replace(ps.name, '\[.+\]', '') like 'winzeler_cc_%'
                        then regexp_replace(regexp_replace(ps.name, '\[.+\]', ''), 'winzeler_cc_', '')
                      when regexp_replace(ps.name, '\[.+\]', '') like 'Llinas RT transcription and decay %'
                        then regexp_replace(regexp_replace(ps.name, '\[.+\]', ''), 'Llinas RT transcription and decay ', '')
                      when regexp_replace(ps.name, '\[.+\]', '') like 'T.brucei paired end RNA-Seqdata from Horn%'
                        then regexp_replace(
                                 regexp_replace(
                                     regexp_replace(
                                         regexp_replace(
                                             regexp_replace(ps.name, '\[.+ nonunique\]', ''),
                                                        '\[.+ unique\]', ' - unique'),
                                                    '\[.+\]', ''),
                                                'aligned with cds coordinates ', 'cds coordinates'),
                                            'T.brucei paired end RNA-Seqdata from Horn ', '')
                      else null
                    end as varchar(50)
                   ) as profile_set_suffix,
               CASE WHEN replace(profile.profile_as_string, 'NA' || CHR(9), '') = 'NA' THEN null ELSE profile.profile_as_string END as profile_as_string,
               profile.max_value, profile.min_value,
               profile.max_timepoint, profile.min_timepoint
            FROM apidb.DataSource ds, sres.ExternalDatabase d,
              sres.ExternalDatabaseRelease r, study.NodeSet ps,
              (
                  -- gene profiles
                  SELECT gene_profile.node_set_id, ga.source_id, gene_profile.profile_type, gene_profile.node_type,
                         gene_profile.profile_as_string, gene_profile.max_value, gene_profile.min_value,
                         gene_profile.max_timepoint, gene_profile.min_timepoint
                  FROM GeneAttributes ga,
                    (
                        SELECT * FROM (
                          WITH result AS (
                            SELECT na_feature_id, protocol_app_node_id, max(value) as value
                            FROM results.NAFEATUREHOSTRESPONSE
                            GROUP BY na_feature_id, protocol_app_node_id
                          ), min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                                last_value(result.value) over w1 as max_value,
                                first_value(result.value) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            from study.protocolappnode pan, study.NodeNodeSet sl, study.NodeSet s, result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.value ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'values' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.value::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.PROTOCOLAPPNODE pan, study.NodeNodeSet sl, study.NodeSet s, min_max, result
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t1
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                              last_value(result.mean_phenotype) over w1 as max_value,
                              first_value(result.mean_phenotype) over w1 as min_value,
                              last_value(pan.name) over w1 as max_timepoint,
                              first_value(pan.name) over w1 as min_timepoint
                            FROM study.PROTOCOLAPPNODE pan, study.NodeNodeSet sl, study.NodeSet s, apidb.CrisprPhenotype result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                                PARTITION BY sl.node_set_id, result.na_feature_id
                                ORDER BY result.mean_phenotype ASC
                                ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'values' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.mean_phenotype::numeric, 2)::varchar,'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.CrisprPhenotype result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND result.na_feature_id = min_max.na_feature_id
                            AND sl.node_set_id = min_max.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t2
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                              last_value(result.score) over w1 as max_value,
                              first_value(result.score) over w1 as min_value,
                              last_value(pan.name) over w1 as max_timepoint,
                              first_value(pan.name) over w1 as min_timepoint
                            FROM study.PROTOCOLAPPNODE pan, study.NodeNodeSet sl, study.NodeSet s, apidb.PhenotypeScore result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.score ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'values' as profile_type, s.node_type,
                            string_agg(coalesce(round(result.score::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                            min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.PhenotypeScore result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t3
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                              last_value(result.relative_growth_rate) over w1 as max_value,
                              first_value(result.relative_growth_rate) over w1 as min_value,
                              last_value(pan.name) over w1 as max_timepoint,
                              first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.PhenotypeGrowthRate result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.relative_growth_rate ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'values' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.relative_growth_rate::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.PhenotypeGrowthRate result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t4
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                              last_value(result.value) over w1 as max_value,
                              first_value(result.value) over w1 as min_value,
                              last_value(pan.name) over w1 as max_timepoint,
                              first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, results.NaFeatureExpression result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.value ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'values' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.value::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, results.NaFeatureExpression result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t5
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                              last_value(result.percentile_channel1) over w1 as max_value,
                              first_value(result.percentile_channel1) over w1 as min_value,
                              last_value(pan.name) over w1 as max_timepoint,
                              first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, results.NaFeatureExpression result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.percentile_channel1 ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'channel1_percentiles' as profile_type, s.node_type,
                                string_agg(coalesce(round(result.percentile_channel1::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                                min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, results.NaFeatureExpression result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t6
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                              last_value(result.percentile_channel2) over w1 as max_value,
                              first_value(result.percentile_channel2) over w1 as min_value,
                              last_value(pan.name) over w1 as max_timepoint,
                              first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, results.NaFeatureExpression result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.percentile_channel2 ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'channel2_percentiles' as profile_type, s.node_type,
                                string_agg(coalesce(round(result.percentile_channel2::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                                min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, results.NaFeatureExpression result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t7
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                                last_value(result.standard_error) over w1 as max_value,
                                first_value(result.standard_error) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, results.NaFeatureExpression result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.standard_error ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'standard_error' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.standard_error::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, results.NaFeatureExpression result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t8
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                                last_value(result.pvalue) over w1 as max_value,
                                first_value(result.pvalue) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.NaFeatureMetacycle result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.pvalue ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'pvalue' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.pvalue::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.NaFeatureMetacycle result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t9
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                                last_value(result.amplitude) over w1 as max_value,
                                first_value(result.amplitude) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            FROM study.PROTOCOLAPPNODE pan, study.NodeNodeSet sl, study.NodeSet s, apidb.NaFeatureMetacycle result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.amplitude ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'amplitude' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.amplitude::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.NaFeatureMetacycle result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t10
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                                last_value(result.period) over w1 as max_value,
                                first_value(result.period) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.NaFeatureMetacycle result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.period ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'period' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.period::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.NaFeatureMetacycle result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t11
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                                last_value(result.probability_mean) over w1 as max_value,
                                first_value(result.probability_mean) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.LopitResults result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.probability_mean ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'probability_mean' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.probability_mean::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.LopitResults result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t12
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                                last_value(result.sd) over w1 as max_value,
                                first_value(result.sd) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.LopitResults result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.sd ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'sd' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.sd::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.LopitResults result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t13
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                                last_value(result.lower_CI) over w1 as max_value,
                                first_value(result.lower_CI) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.LopitResults result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.lower_CI ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'lower_CI' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.lower_CI::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.LopitResults result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t14
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.na_feature_id,
                                last_value(result.upper_CI) over w1 as max_value,
                                first_value(result.upper_CI) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.LopitResults result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.na_feature_id
                              ORDER BY result.upper_CI ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.na_feature_id, 'upper_CI' as profile_type, s.node_type,
                              string_agg(coalesce(round(result.upper_CI::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.LopitResults result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.na_feature_id = result.na_feature_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t15
-- TO FIX
--                      UNION ALL
--                        SELECT * FROM (
--                          WITH min_max AS (
--                              SELECT DISTINCT sl.node_set_id, result.na_feature_id,
--                                  null as max_value,
--                                  null as min_value,
--                                  last_value(pan.name) over w1 as max_timepoint,
--                                  first_value(pan.name) over w1 as min_timepoint
--                              FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.HaplotypeResult result
--                              WHERE result.protocol_app_node_id = sl.protocol_app_node_id
--                                AND result.protocol_app_node_id = pan.protocol_app_node_id
--                                AND sl.node_set_id = s.node_set_id
--                              WINDOW w1 AS (
--                                PARTITION BY sl.node_set_id, result.na_feature_id
--                                ORDER BY result.value ASC
--                                ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
--                              )
--                          )
--                          SELECT sl.node_set_id, result.na_feature_id, 'values' as profile_type, s.node_type,
--                              string_agg(coalesce(result.value, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
--                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
--                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.HaplotypeResult result, min_max
--                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
--                            AND result.protocol_app_node_id = pan.protocol_app_node_id
--                            AND sl.node_set_id = s.node_set_id
--                            AND min_max.na_feature_id = result.na_feature_id
--                            AND min_max.node_set_id = sl.node_set_id
--                          GROUP BY sl.node_set_id, result.na_feature_id, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
--                        ) t16
                    ) gene_profile
                  WHERE ga.na_feature_id = gene_profile.na_feature_id
                UNION ALL
                  -- compound profiles
                  SELECT compound_profile.node_set_id,
                     case
                       WHEN compound_profile.isotopomer IS NOT NULL
                          THEN ca.source_id || '|' || compound_profile.isotopomer
                       WHEN compound_profile.mass IS NOT NULL
                          THEN ca.source_id || '|' || compound_profile.mass || '|' || compound_profile.retention_time
                       ELSE ca.source_id
                     END as source_id,
                     compound_profile.profile_type, compound_profile.node_type,
                     compound_profile.profile_as_string, compound_profile.max_value, compound_profile.min_value,
                     compound_profile.max_timepoint, compound_profile.min_timepoint
                  FROM CompoundAttributes ca,
                    (
                        SELECT * FROM (
                          WITH result AS (
                            SELECT max(value) as value, compound_id, protocol_app_node_id, isotopomer
                            FROM results.CompoundMassSpec
                            GROUP BY compound_id, protocol_app_node_id, isotopomer
                          ) , min_max AS (
                            SELECT DISTINCT sl.node_set_id, result.compound_id, result.isotopomer,
                                last_value(result.value) over w1 as max_value,
                                first_value(result.value) over w1 as min_value,
                                last_value(pan.name) over w1 as max_timepoint,
                                first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, result
                            WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                              AND result.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, result.compound_id, result.isotopomer
                              ORDER BY result.value ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, result.compound_id, result.isotopomer, 'values' as profile_type, s.node_type,
                              NULL::numeric as compound_peaks_id, NULL::numeric as mass, NULL::numeric as retention_time,
                              string_agg(coalesce(round(result.value::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                              min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, result, min_max
                          WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                            AND result.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND min_max.compound_id = result.compound_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, result.compound_id, result.isotopomer, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t1
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, cpc.compound_id,
                              last_value(cmsr.value) over w1 as max_value,
                              first_value(cmsr.value) over w1 as min_value,
                              last_value(pan.name) over w1 as max_timepoint,
                              first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s,
                              apidb.CompoundMassSpecResult cmsr, apidb.Compoundpeaks cp,
                              apidb.CompoundPeaksChebi cpc
                            WHERE cmsr.protocol_app_node_id = sl.protocol_app_node_id
                              AND cmsr.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                              AND cp.compound_peaks_id = cmsr.compound_peaks_id
                              AND cpc.compound_peaks_id = cp.compound_peaks_id
                              AND pan.name like '%mean%'
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, cpc.compound_id, cpc.isotopomer, cpc.compound_peaks_id, cp.mass, cp.retention_time
                              ORDER BY cmsr.value ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, cpc.compound_id, cpc.isotopomer, 'values' as profile_type, s.node_type,
                            cpc.compound_peaks_id, cp.mass, cp.retention_time,
                            string_agg(coalesce(round(cmsr.value::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                            min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s,
                            apidb.CompoundMassSpecResult cmsr, apidb.Compoundpeaks cp,
                            apidb.CompoundPeaksChebi cpc, min_max
                          WHERE cmsr.protocol_app_node_id = sl.protocol_app_node_id
                            AND cmsr.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND cp.compound_peaks_id = cmsr.compound_peaks_id
                            AND cpc.compound_peaks_id = cp.compound_peaks_id
                            AND pan.name like '%mean%'
                            AND min_max.compound_id = cpc.compound_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, cpc.compound_id, cpc.isotopomer, cpc.compound_peaks_id, cp.mass, cp.retention_time, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t2
                      UNION ALL
                        SELECT * FROM (
                          WITH min_max AS (
                            SELECT DISTINCT sl.node_set_id, cpc.compound_id,
                              last_value(cmsr.percentile) over w1 as max_value,
                              first_value(cmsr.percentile) over w1 as min_value,
                              last_value(pan.name) over w1 as max_timepoint,
                              first_value(pan.name) over w1 as min_timepoint
                            FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s,
                              apidb.CompoundMassSpecResult cmsr, apidb.Compoundpeaks cp,
                              apidb.CompoundPeaksChebi cpc
                            WHERE cmsr.protocol_app_node_id = sl.protocol_app_node_id
                              AND cmsr.protocol_app_node_id = pan.protocol_app_node_id
                              AND sl.node_set_id = s.node_set_id
                              AND cp.compound_peaks_id = cmsr.compound_peaks_id
                              AND cpc.compound_peaks_id = cp.compound_peaks_id
                              AND pan.name like '%mean%'
                            WINDOW w1 AS (
                              PARTITION BY sl.node_set_id, cpc.compound_id, cpc.isotopomer, cpc.compound_peaks_id, cp.mass, cp.retention_time
                              ORDER BY cmsr.percentile ASC
                              ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                            )
                          )
                          SELECT sl.node_set_id, cpc.compound_id, cpc.isotopomer, 'percentiles' as profile_type, s.node_type,
                            cpc.compound_peaks_id, cp.mass, cp.retention_time,
                            string_agg(coalesce(round(cmsr.percentile::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                            min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                          FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s,
                            apidb.CompoundMassSpecResult cmsr, apidb.Compoundpeaks cp,
                            apidb.CompoundPeaksChebi cpc, min_max
                          WHERE cmsr.protocol_app_node_id = sl.protocol_app_node_id
                            AND cmsr.protocol_app_node_id = pan.protocol_app_node_id
                            AND sl.node_set_id = s.node_set_id
                            AND cp.compound_peaks_id = cmsr.compound_peaks_id
                            AND cpc.compound_peaks_id = cp.compound_peaks_id
                            AND pan.name like '%mean%'
                            AND min_max.compound_id = cpc.compound_id
                            AND min_max.node_set_id = sl.node_set_id
                          GROUP BY sl.node_set_id, cpc.compound_id, cpc.isotopomer, cpc.compound_peaks_id, cp.mass, cp.retention_time, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                        ) t3
                    ) compound_profile
                  WHERE ca.id = compound_profile.compound_id
                UNION ALL
                  -- OntologyTermResult
                  SELECT * FROM (
                    WITH min_max AS (
                      SELECT DISTINCT sl.node_set_id, ot.name,
                        last_value(otr.value) over w1 as max_value,
                        first_value(otr.value) over w1 as min_value,
                        last_value(pan.name) over w1 as max_timepoint,
                        first_value(pan.name) over w1 as min_timepoint
                      FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s,
                        apidb.OntologyTermResult otr, sres.OntologyTerm ot
                      WHERE ot.ontology_term_id = otr.ontology_term_id
                        AND otr.protocol_app_node_id = sl.protocol_app_node_id
                        AND otr.protocol_app_node_id = pan.protocol_app_node_id
                        AND sl.node_set_id = s.node_set_id
                      WINDOW w1 AS (
                        PARTITION BY sl.node_set_id, ot.name
                        ORDER BY otr.value ASC
                        ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                      )
                    )
                    SELECT sl.node_set_id, ot.name as source_id, 'value' as profile_type, s.node_type,
                      string_agg(coalesce(round(otr.value::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                      min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                    FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s,
                      apidb.OntologyTermResult otr, sres.OntologyTerm ot, min_max
                    WHERE ot.ontology_term_id = otr.ontology_term_id
                      AND otr.protocol_app_node_id = sl.protocol_app_node_id
                      AND otr.protocol_app_node_id = pan.protocol_app_node_id
                      AND sl.node_set_id = s.node_set_id
                      AND min_max.name = ot.name
                      AND min_max.node_set_id = sl.node_set_id
                    GROUP BY sl.node_set_id, ot.name, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                  ) t1
                UNION ALL
                  -- SubjectResult
                  SELECT * FROM (
                    WITH min_max AS (
                      SELECT DISTINCT sl.node_set_id, result.subject,
                        last_value(result.value) over w1 as max_value,
                        first_value(result.value) over w1 as min_value,
                        last_value(pan.name) over w1 as max_timepoint,
                        first_value(pan.name) over w1 as min_timepoint
                      FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.SubjectResult result
                      WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                        AND result.protocol_app_node_id = pan.protocol_app_node_id
                        AND sl.node_set_id = s.node_set_id
                      WINDOW w1 AS (
                        PARTITION BY sl.node_set_id, result.subject
                        ORDER BY result.value ASC
                        ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                      )
                    )
                    SELECT sl.node_set_id, result.subject as source_id, 'values' as profile_type, s.node_type,
                      string_agg(coalesce(round(result.value::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                      min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                    FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, min_max, apidb.SubjectResult result
                    WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                      AND result.protocol_app_node_id = pan.protocol_app_node_id
                      AND sl.node_set_id = s.node_set_id
                      AND min_max.subject = result.subject
                      AND min_max.node_set_id = sl.node_set_id
                    GROUP BY sl.node_set_id, result.subject, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                  ) t2
                UNION ALL
                  -- wgcna eigengene results
                  SELECT * FROM (
                    WITH min_max AS (
                      SELECT DISTINCT sl.node_set_id, result.module_name,
                        last_value(result.value) over w1 as max_value,
                        first_value(result.value) over w1 as min_value,
                        last_value(pan.name) over w1 as max_timepoint,
                        first_value(pan.name) over w1 as min_timepoint
                      FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, apidb.EigenGeneWgcnaResults result
                      WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                        AND result.protocol_app_node_id = pan.protocol_app_node_id
                        AND sl.node_set_id = s.node_set_id
                      WINDOW w1 AS (
                        PARTITION BY sl.node_set_id, result.module_name
                        ORDER BY result.value ASC
                        ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
                      )
                    )
                    SELECT sl.node_set_id, result.module_name as source_id, 'values' as profile_type, s.node_type,
                      string_agg(coalesce(round(result.value::numeric, 2)::varchar, 'NA'), chr(9) order by pan.node_order_num) as profile_as_string,
                      min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint
                    FROM study.ProtocolAppNode pan, study.NodeNodeSet sl, study.NodeSet s, min_max, apidb.EigenGeneWgcnaResults result
                    WHERE result.protocol_app_node_id = sl.protocol_app_node_id
                      AND result.protocol_app_node_id = pan.protocol_app_node_id
                      AND sl.node_set_id = s.node_set_id
                      AND min_max.module_name = result.module_name
                      AND min_max.node_set_id = sl.node_set_id
                    GROUP BY sl.node_set_id, result.module_name, min_max.max_value, min_max.min_value, min_max.max_timepoint, min_max.min_timepoint, s.node_type
                  ) t3
              ) profile
            WHERE ds.name = d.name
              AND ds.version = r.version
              AND d.external_database_id = r.external_database_id
              AND profile.node_set_id = ps.node_set_id
              AND ps.external_database_release_id = r.external_database_release_id
          )
          LOOP
            ctrows := ctrows + 1;
            INSERT INTO Profile 
                (DATASET_NAME, DATASET_TYPE, DATASET_SUBTYPE, PROFILE_TYPE, NODE_TYPE, SOURCE_ID, PROFILE_STUDY_ID, PROFILE_SET_NAME,
                PROFILE_SET_SUFFIX, PROFILE_AS_STRING, MAX_VALUE, MIN_VALUE, MAX_TIMEPOINT, MIN_TIMEPOINT)
                VALUES
                (pf_rows.DATASET_NAME, pf_rows.DATASET_TYPE, pf_rows.DATASET_SUBTYPE, pf_rows.PROFILE_TYPE, pf_rows.NODE_TYPE, pf_rows.SOURCE_ID, pf_rows.PROFILE_STUDY_ID, pf_rows.PROFILE_SET_NAME,
                pf_rows.PROFILE_SET_SUFFIX, pf_rows.PROFILE_AS_STRING, pf_rows.MAX_VALUE, pf_rows.MIN_VALUE, pf_rows.MAX_TIMEPOINT, pf_rows.MIN_TIMEPOINT);
            IF ctrows >= commit_after THEN
              COMMIT;
              ctrows := 0;
            END IF;
          END LOOP;
        commit;
        END;
        $$ LANGUAGE PLPGSQL;
      
    ;


      
        UPDATE Profile 
        SET dataset_name = 'tbruTREU927_Rijo_Circadian_Regulation_rnaSeq_RSRC'
        WHERE dataset_name= 'tbruTREU927_RNASeq_Rijo_Circadian_Regulation_RSRC'
      
    ;

