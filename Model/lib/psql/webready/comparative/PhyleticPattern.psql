
      
CREATE TABLE :SCHEMA.PhyleticPattern  AS
    (SELECT actual.group_name,
            actual.alveolata as alveolata_actual,
	    total.alveolata as alveolata_total,
	    round(100*actual.alveolata/total.alveolata,0) AS alveolata_percent,
            actual.archaea as archaea_actual,
	    total.archaea as archaea_total,
	    round(100*actual.archaea/total.archaea,0) AS archaea_percent,
            actual.amoeba as amoeba_actual,
	    total.amoeba as amoeba_total,
	    round(100*actual.amoeba/total.amoeba,0) AS amoeba_percent,
            actual.bacteria as bacteria_actual,
	    total.bacteria as bacteria_total,
	    round(100*actual.bacteria/total.bacteria,0) AS bacteria_percent,
            actual.fungi as fungi_actual,
	    total.fungi as fungi_total,
	    round(100*actual.fungi/total.fungi,0) AS fungi_percent,
            actual.euglenozoa as euglenozoa_actual,
	    total.euglenozoa as euglenozoa_total,
	    round(100*actual.euglenozoa/total.euglenozoa,0) AS euglenozoa_percent,
            actual.metazoa as metazoa_actual,
	    total.metazoa as metazoa_total,
	    round(100*actual.metazoa/total.metazoa,0) AS metazoa_percent,
            actual.viridiplantae as viridiplantae_actual,
	    total.viridiplantae as viridiplantae_total,
	    round(100*actual.viridiplantae/total.viridiplantae,0) AS viridiplantae_percent,
            actual.other_eukaryotes as other_eukaryotes_actual,
	    total.other_eukaryotes as other_eukaryotes_total,
	    round(100*actual.other_eukaryotes/total.other_eukaryotes,0) AS other_eukaryotes_percent,
            actual.bacteria_firm as bacteria_firm_actual,
	    total.bacteria_firm as bacteria_firm_total,
            actual.bacteria_proa as bacteria_proa_actual,
	    total.bacteria_proa as bacteria_proa_total,
            actual.bacteria_prob as bacteria_prob_actual,
	    total.bacteria_prob as bacteria_prob_total,
            actual.bacteria_prod as bacteria_prod_actual,
	    total.bacteria_prod as bacteria_prod_total,
            actual.bacteria_proe as bacteria_proe_actual,
	    total.bacteria_proe as bacteria_proe_total,
            actual.bacteria_prog as bacteria_prog_actual,
	    total.bacteria_prog as bacteria_prog_total,
            actual.bacteria_obac as bacteria_obac_actual,
	    total.bacteria_obac as bacteria_obac_total,
            actual.archaea_arch as archaea_arch_actual,
	    total.archaea_arch as archaea_arch_total,
            actual.archaea_eury as archaea_eury_actual,
	    total.archaea_eury as archaea_eury_total,
            actual.archaea_cren as archaea_cren_actual,
	    total.archaea_cren as archaea_cren_total,
            actual.archaea_nano as archaea_nano_actual,
	    total.archaea_nano as archaea_nano_total,
            actual.archaea_kora as archaea_kora_actual,
	    total.archaea_kora as archaea_kora_total,
            --oeuk_genera.html as oeuk_genera_html,
            --eugl_genera.html as eugl_genera_html,
            --amoe_genera.html as amoe_genera_html,
            actual.alveolata_alve as alveolata_alve_actual,
	    total.alveolata_alve as alveolata_alve_total,
            actual.alveolata_cili as alveolata_cili_actual,
	    total.alveolata_cili as alveolata_cili_total,
            actual.alveolata_apic as alveolata_apic_actual,
	    total.alveolata_apic as alveolata_apic_total,
            actual.alveolata_cocc as alveolata_cocc_actual,
	    total.alveolata_cocc as alveolata_cocc_total,
            actual.alveolata_haem as alveolata_haem_actual,
	    total.alveolata_haem as alveolata_haem_total,
            actual.alveolata_piro as alveolata_piro_actual,
	    total.alveolata_piro as alveolata_piro_total,
            actual.viridiplantae_stre as viridiplantae_stre_actual,
	    total.viridiplantae_stre as viridiplantae_stre_total,
            actual.viridiplantae_chlo as viridiplantae_chlo_actual,
	    total.viridiplantae_chlo as viridiplantae_chlo_total,
            actual.viridiplantae_rhod as viridiplantae_rhod_actual,
	    total.viridiplantae_rhod as viridiplantae_rhod_total,
            actual.viridiplantae_cryp as viridiplantae_cryp_actual,
	    total.viridiplantae_cryp as viridiplantae_cryp_total,
            actual.fungi_fung as fungi_fung_actual,
	    total.fungi_fung as fungi_fung_total,
            actual.fungi_micr as fungi_micr_actual,
	    total.fungi_micr as fungi_micr_total,
            actual.fungi_basi as fungi_basi_actual,
	    total.fungi_basi as fungi_basi_total,
            actual.fungi_asco as fungi_asco_actual,
	    total.fungi_asco as fungi_asco_total,
            actual.fungi_muco as fungi_muco_actual,
	    total.fungi_muco as fungi_muco_total,
            actual.fungi_chyt as fungi_chyt_actual,
	    total.fungi_chyt as fungi_chyt_total,
            actual.metazoa_omet as metazoa_omet_actual,
	    total.metazoa_omet as metazoa_omet_total,
            actual.metazoa_nema as metazoa_nema_actual,
	    total.metazoa_nema as metazoa_nema_total,
            actual.metazoa_arth as metazoa_arth_actual,
	    total.metazoa_arth as metazoa_arth_total,
            actual.metazoa_chor as metazoa_chor_actual,
	    total.metazoa_chor as metazoa_chor_total,
            actual.metazoa_acti as metazoa_acti_actual,
	    total.metazoa_acti as metazoa_acti_total,
            actual.metazoa_aves as metazoa_aves_actual,
	    total.metazoa_aves as metazoa_aves_total,
            actual.metazoa_mamm as metazoa_mamm_actual,
	    total.metazoa_mamm as metazoa_mamm_total,
            actual.metazoa_tuni as metazoa_tuni_actual,
	    total.metazoa_tuni as metazoa_tuni_total
    FROM
        (SELECT SUM(CASE clade WHEN 'alveolata' THEN num ELSE 0 END) as alveolata,
                SUM(CASE clade WHEN 'archaea' THEN num ELSE 0 END) as archaea,
                SUM(CASE clade WHEN 'amoeba' THEN num ELSE 0 END) as amoeba,
                SUM(CASE clade WHEN 'bacteria' THEN num ELSE 0 END) as bacteria,
                SUM(CASE clade WHEN 'fungi' THEN num ELSE 0 END) as fungi,
                SUM(CASE clade WHEN 'euglenozoa' THEN num ELSE 0 END) as euglenozoa,
                SUM(CASE clade WHEN 'metazoa' THEN num ELSE 0 END) as metazoa,
                SUM(CASE clade WHEN 'viridiplantae' THEN num ELSE 0 END) as viridiplantae,
                SUM(CASE clade WHEN 'other_eukaryotes' THEN num ELSE 0 END) as other_eukaryotes,
		SUM(CASE clade WHEN 'FIRM' THEN num ELSE 0 END) as bacteria_firm,
		SUM(CASE clade WHEN 'PROA' THEN num ELSE 0 END) as bacteria_proa,
		SUM(CASE clade WHEN 'PROB' THEN num ELSE 0 END) as bacteria_prob,
		SUM(CASE clade WHEN 'PROD' THEN num ELSE 0 END) as bacteria_prod,
		SUM(CASE clade WHEN 'PROE' THEN num ELSE 0 END) as bacteria_proe,
		SUM(CASE clade WHEN 'PROG' THEN num ELSE 0 END) as bacteria_prog,
		SUM(CASE clade WHEN 'OBAC' THEN num ELSE 0 END) as bacteria_obac,
		SUM(CASE clade WHEN 'ARCH' THEN num ELSE 0 END) as archaea_arch,
		SUM(CASE clade WHEN 'EURY' THEN num ELSE 0 END) as archaea_eury,
		SUM(CASE clade WHEN 'CREN' THEN num ELSE 0 END) as archaea_cren,
		SUM(CASE clade WHEN 'NANO' THEN num ELSE 0 END) as archaea_nano,
		SUM(CASE clade WHEN 'KORA' THEN num ELSE 0 END) as archaea_kora,
		SUM(CASE clade WHEN 'ALVE' THEN num ELSE 0 END) as alveolata_alve,
		SUM(CASE clade WHEN 'CILI' THEN num ELSE 0 END) as alveolata_cili,
		SUM(CASE clade WHEN 'APIC' THEN num ELSE 0 END) as alveolata_apic,
		SUM(CASE clade WHEN 'COCC' THEN num ELSE 0 END) as alveolata_cocc,
		SUM(CASE clade WHEN 'HAEM' THEN num ELSE 0 END) as alveolata_haem,
		SUM(CASE clade WHEN 'PIRO' THEN num ELSE 0 END) as alveolata_piro,
		SUM(CASE clade WHEN 'STRE' THEN num ELSE 0 END) as viridiplantae_stre,
		SUM(CASE clade WHEN 'CHLO' THEN num ELSE 0 END) as viridiplantae_chlo,
		SUM(CASE clade WHEN 'RHOD' THEN num ELSE 0 END) as viridiplantae_rhod,
		SUM(CASE clade WHEN 'CRYP' THEN num ELSE 0 END) as viridiplantae_cryp,
		SUM(CASE clade WHEN 'FUNG' THEN num ELSE 0 END) as fungi_fung,
		SUM(CASE clade WHEN 'MICR' THEN num ELSE 0 END) as fungi_micr,
		SUM(CASE clade WHEN 'BASI' THEN num ELSE 0 END) as fungi_basi,
		SUM(CASE clade WHEN 'ASCO' THEN num ELSE 0 END) as fungi_asco,
		SUM(CASE clade WHEN 'MUCO' THEN num ELSE 0 END) as fungi_muco,
		SUM(CASE clade WHEN 'CHYT' THEN num ELSE 0 END) as fungi_chyt,
		SUM(CASE clade WHEN 'OMET' THEN num ELSE 0 END) as metazoa_omet,
		SUM(CASE clade WHEN 'NEMA' THEN num ELSE 0 END) as metazoa_nema,
		SUM(CASE clade WHEN 'ARTH' THEN num ELSE 0 END) as metazoa_arth,
		SUM(CASE clade WHEN 'CHOR' THEN num ELSE 0 END) as metazoa_chor,
		SUM(CASE clade WHEN 'ACTI' THEN num ELSE 0 END) as metazoa_acti,
		SUM(CASE clade WHEN 'AVES' THEN num ELSE 0 END) as metazoa_aves,
		SUM(CASE clade WHEN 'MAMM' THEN num ELSE 0 END) as metazoa_mamm,
		SUM(CASE clade WHEN 'TUNI' THEN num ELSE 0 END) as metazoa_tuni
         FROM ( 
               (WITH RECURSIVE TaxonHierarchy AS (
                   SELECT orthomcl_clade_id, parent_id
                   FROM apidb.OrthomclClade
                   WHERE orthomcl_clade_id IN (
                       SELECT orthomcl_clade_id 
                       FROM apidb.OrthomclClade
                       WHERE three_letter_abbrev = 'BACT'
                   ) UNION ALL
                   SELECT  child.orthomcl_clade_id,child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
               ) 
               SELECT 'bacteria' AS clade, COUNT(*) AS num
               FROM TaxonHierarchy th
               JOIN apidb.OrthomclClade c ON th.orthomcl_clade_id = c.orthomcl_clade_id
               WHERE c.core_peripheral IN ('C', 'P')

               ) UNION (
               WITH RECURSIVE TaxonHierarchy AS (
                   SELECT orthomcl_clade_id, parent_id
                   FROM apidb.OrthomclClade
                   WHERE orthomcl_clade_id IN (
                       SELECT orthomcl_clade_id 
                       FROM apidb.OrthomclClade
                       WHERE three_letter_abbrev = 'ARCH'
                   ) UNION ALL
                   SELECT  child.orthomcl_clade_id,child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
               ) 
               SELECT 'archaea' AS clade, COUNT(*) AS num
               FROM TaxonHierarchy th
               JOIN apidb.OrthomclClade c ON th.orthomcl_clade_id = c.orthomcl_clade_id
               WHERE c.core_peripheral IN ('C', 'P')

               ) UNION (
               WITH RECURSIVE TaxonHierarchy AS (
                   SELECT orthomcl_clade_id, parent_id
                   FROM apidb.OrthomclClade
                   WHERE orthomcl_clade_id IN (
                       SELECT orthomcl_clade_id 
                       FROM apidb.OrthomclClade
                       WHERE three_letter_abbrev = 'ALVE'
                   ) UNION ALL
                   SELECT  child.orthomcl_clade_id,child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
               ) 
               SELECT 'alveolata' AS clade, COUNT(*) AS num
               FROM TaxonHierarchy th
               JOIN apidb.OrthomclClade c ON th.orthomcl_clade_id = c.orthomcl_clade_id
               WHERE c.core_peripheral IN ('C', 'P')
               ) UNION (
               WITH RECURSIVE TaxonHierarchy AS (
                   SELECT orthomcl_clade_id, parent_id
                   FROM apidb.OrthomclClade
                   WHERE orthomcl_clade_id IN (
                       SELECT orthomcl_clade_id 
                       FROM apidb.OrthomclClade
                       WHERE three_letter_abbrev = 'AMOE'
                   ) UNION ALL
                   SELECT  child.orthomcl_clade_id,child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
               ) 
               SELECT 'amoeba' AS clade, COUNT(*) AS num
               FROM TaxonHierarchy th
               JOIN apidb.OrthomclClade c ON th.orthomcl_clade_id = c.orthomcl_clade_id
               WHERE c.core_peripheral IN ('C', 'P')

               ) UNION (
               WITH RECURSIVE TaxonHierarchy AS (
                   SELECT orthomcl_clade_id, parent_id
                   FROM apidb.OrthomclClade
                   WHERE orthomcl_clade_id IN (
                       SELECT orthomcl_clade_id 
                       FROM apidb.OrthomclClade
                       WHERE three_letter_abbrev = 'EUGL'
                   ) UNION ALL
                   SELECT  child.orthomcl_clade_id,child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
               ) 
               SELECT 'euglenozoa' AS clade, COUNT(*) AS num
               FROM TaxonHierarchy th
               JOIN apidb.OrthomclClade c ON th.orthomcl_clade_id = c.orthomcl_clade_id
               WHERE c.core_peripheral IN ('C', 'P')

               ) UNION (
               WITH RECURSIVE TaxonHierarchy AS (
                   SELECT orthomcl_clade_id, parent_id
                   FROM apidb.OrthomclClade
                   WHERE orthomcl_clade_id IN (
                       SELECT orthomcl_clade_id 
                       FROM apidb.OrthomclClade
                       WHERE three_letter_abbrev = 'VIRI'
                   ) UNION ALL
                   SELECT  child.orthomcl_clade_id,child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
               ) 
               SELECT 'viridiplantae' AS clade, COUNT(*) AS num
               FROM TaxonHierarchy th
               JOIN apidb.OrthomclClade c ON th.orthomcl_clade_id = c.orthomcl_clade_id
               WHERE c.core_peripheral IN ('C', 'P')

               ) UNION (
               WITH RECURSIVE TaxonHierarchy AS (
                   SELECT orthomcl_clade_id, parent_id
                   FROM apidb.OrthomclClade
                   WHERE orthomcl_clade_id IN (
                       SELECT orthomcl_clade_id 
                       FROM apidb.OrthomclClade
                       WHERE three_letter_abbrev = 'FUNG'
                   ) UNION ALL
                   SELECT  child.orthomcl_clade_id,child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
               ) 
               SELECT 'fungi' AS clade, COUNT(*) AS num
               FROM TaxonHierarchy th
               JOIN apidb.OrthomclClade c ON th.orthomcl_clade_id = c.orthomcl_clade_id
               WHERE c.core_peripheral IN ('C', 'P')

               ) UNION (
               WITH RECURSIVE TaxonHierarchy AS (
                   SELECT orthomcl_clade_id, parent_id
                   FROM apidb.OrthomclClade
                   WHERE orthomcl_clade_id IN (
                       SELECT orthomcl_clade_id 
                       FROM apidb.OrthomclClade
                       WHERE three_letter_abbrev = 'META'
                   ) UNION ALL
                   SELECT  child.orthomcl_clade_id,child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
               ) 
               SELECT 'metazoa' AS clade, COUNT(*) AS num
               FROM TaxonHierarchy th
               JOIN apidb.OrthomclClade c ON th.orthomcl_clade_id = c.orthomcl_clade_id
               WHERE c.core_peripheral IN ('C', 'P')

               ) UNION (
               WITH RECURSIVE TaxonHierarchy AS (
                   SELECT orthomcl_clade_id, parent_id
                   FROM apidb.OrthomclClade
                   WHERE orthomcl_clade_id IN (
                       SELECT orthomcl_clade_id 
                       FROM apidb.OrthomclClade
                       WHERE three_letter_abbrev = 'OEUK'
                   ) UNION ALL
                   SELECT  child.orthomcl_clade_id,child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
               ) 
               SELECT 'other_eukaryotes' AS clade, COUNT(*) AS num
               FROM TaxonHierarchy th
               JOIN apidb.OrthomclClade c ON th.orthomcl_clade_id = c.orthomcl_clade_id
               WHERE c.core_peripheral IN ('C', 'P')

	       ) UNION (
	       SELECT b.three_letter_abbrev AS clade,a.num
              FROM (SELECT parent_id, COUNT(orthomcl_clade_id) AS num
                     FROM apidb.OrthomclClade
                     WHERE core_peripheral in ('C','P')
                     GROUP BY parent_id) a,
                     apidb.OrthomclClade b
               WHERE a.parent_id = b.orthomcl_clade_id
               )
        )) total,
        (SELECT name as group_name,
                SUM(CASE three_letter_abbrev WHEN 'ALVE' THEN number_of_taxa ELSE 0 END) as alveolata,
                SUM(CASE three_letter_abbrev WHEN 'ARCH' THEN number_of_taxa ELSE 0 END) as archaea,
                SUM(CASE three_letter_abbrev WHEN 'AMOE' THEN number_of_taxa ELSE 0 END) as amoeba,
                SUM(CASE three_letter_abbrev WHEN 'BACT' THEN number_of_taxa ELSE 0 END) as bacteria,
                SUM(CASE three_letter_abbrev WHEN 'FUNG' THEN number_of_taxa ELSE 0 END) as fungi,
                SUM(CASE three_letter_abbrev WHEN 'EUGL' THEN number_of_taxa ELSE 0 END) as euglenozoa,
                SUM(CASE three_letter_abbrev WHEN 'META' THEN number_of_taxa ELSE 0 END) as metazoa,
                SUM(CASE three_letter_abbrev WHEN 'VIRI' THEN number_of_taxa ELSE 0 END) as viridiplantae,
                SUM(CASE three_letter_abbrev WHEN 'OEUK' THEN number_of_taxa ELSE 0 END) as other_eukaryotes,
                SUM(CASE three_letter_abbrev WHEN 'FIRM' THEN number_of_taxa ELSE 0 END) as bacteria_firm,
                SUM(CASE three_letter_abbrev WHEN 'PROA' THEN number_of_taxa ELSE 0 END) as bacteria_proa,
                SUM(CASE three_letter_abbrev WHEN 'PROB' THEN number_of_taxa ELSE 0 END) as bacteria_prob,
                SUM(CASE three_letter_abbrev WHEN 'PROD' THEN number_of_taxa ELSE 0 END) as bacteria_prod,
                SUM(CASE three_letter_abbrev WHEN 'PROE' THEN number_of_taxa ELSE 0 END) as bacteria_proe,
                SUM(CASE three_letter_abbrev WHEN 'PROG' THEN number_of_taxa ELSE 0 END) as bacteria_prog,
                SUM(CASE three_letter_abbrev WHEN 'OBAC' THEN number_of_taxa ELSE 0 END) as bacteria_obac,
                SUM(CASE three_letter_abbrev WHEN 'ARCH' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'EURY' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'CREN' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'NANO' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'KORA' THEN number_of_taxa ELSE 0 END) as archaea_arch,
                SUM(CASE three_letter_abbrev WHEN 'EURY' THEN number_of_taxa ELSE 0 END) as archaea_eury,
                SUM(CASE three_letter_abbrev WHEN 'CREN' THEN number_of_taxa ELSE 0 END) as archaea_cren,
                SUM(CASE three_letter_abbrev WHEN 'NANO' THEN number_of_taxa ELSE 0 END) as archaea_nano,
                SUM(CASE three_letter_abbrev WHEN 'KORA' THEN number_of_taxa ELSE 0 END) as archaea_kora,
                SUM(CASE three_letter_abbrev WHEN 'ALVE' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'CILI' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'APIC' THEN number_of_taxa ELSE 0 END) as alveolata_alve,
                SUM(CASE three_letter_abbrev WHEN 'CILI' THEN number_of_taxa ELSE 0 END) as alveolata_cili,
                SUM(CASE three_letter_abbrev WHEN 'APIC' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'COCC' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'ACON' THEN number_of_taxa ELSE 0 END) as alveolata_apic,
                SUM(CASE three_letter_abbrev WHEN 'COCC' THEN number_of_taxa ELSE 0 END) as alveolata_cocc,
                SUM(CASE three_letter_abbrev WHEN 'HAEM' THEN number_of_taxa ELSE 0 END) as alveolata_haem,
                SUM(CASE three_letter_abbrev WHEN 'PIRO' THEN number_of_taxa ELSE 0 END) as alveolata_piro,
                SUM(CASE three_letter_abbrev WHEN 'STRE' THEN number_of_taxa ELSE 0 END) as viridiplantae_stre,
                SUM(CASE three_letter_abbrev WHEN 'CHLO' THEN number_of_taxa ELSE 0 END) as viridiplantae_chlo,
                SUM(CASE three_letter_abbrev WHEN 'RHOD' THEN number_of_taxa ELSE 0 END) as viridiplantae_rhod,
                SUM(CASE three_letter_abbrev WHEN 'CRYP' THEN number_of_taxa ELSE 0 END) as viridiplantae_cryp,
                SUM(CASE three_letter_abbrev WHEN 'FUNG' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'MICR' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'BASI' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'ASCO' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'MUCO' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'CHYT' THEN number_of_taxa ELSE 0 END) as fungi_fung,
                SUM(CASE three_letter_abbrev WHEN 'MICR' THEN number_of_taxa ELSE 0 END) as fungi_micr,
		SUM(CASE three_letter_abbrev WHEN 'BASI' THEN number_of_taxa ELSE 0 END) as fungi_basi,
                SUM(CASE three_letter_abbrev WHEN 'ASCO' THEN number_of_taxa ELSE 0 END) as fungi_asco,
                SUM(CASE three_letter_abbrev WHEN 'MUCO' THEN number_of_taxa ELSE 0 END) as fungi_muco,
                SUM(CASE three_letter_abbrev WHEN 'CHYT' THEN number_of_taxa ELSE 0 END) as fungi_chyt,
                SUM(CASE three_letter_abbrev WHEN 'OMET' THEN number_of_taxa ELSE 0 END) as metazoa_omet,
                SUM(CASE three_letter_abbrev WHEN 'NEMA' THEN number_of_taxa ELSE 0 END) as metazoa_nema,
                SUM(CASE three_letter_abbrev WHEN 'ARTH' THEN number_of_taxa ELSE 0 END) as metazoa_arth,
                SUM(CASE three_letter_abbrev WHEN 'CHOR' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'ACTI' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'AVES' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'MAMM' THEN number_of_taxa ELSE 0 END) -
		SUM(CASE three_letter_abbrev WHEN 'TUNI' THEN number_of_taxa ELSE 0 END) as metazoa_chor,
                SUM(CASE three_letter_abbrev WHEN 'ACTI' THEN number_of_taxa ELSE 0 END) as metazoa_acti,
                SUM(CASE three_letter_abbrev WHEN 'AVES' THEN number_of_taxa ELSE 0 END) as metazoa_aves,
                SUM(CASE three_letter_abbrev WHEN 'MAMM' THEN number_of_taxa ELSE 0 END) as metazoa_mamm,
                SUM(CASE three_letter_abbrev WHEN 'TUNI' THEN number_of_taxa ELSE 0 END) as metazoa_tuni
         FROM (SELECT og.group_id AS name,agt.three_letter_abbrev,agt.number_of_taxa::numeric
               FROM ApiDB.OrthologGroupTaxon agt, apidb.orthologgroup og
               WHERE agt.group_id = og.group_id
	             AND agt.three_letter_abbrev = UPPER(agt.three_letter_abbrev))
         GROUP BY name) actual
)
      
    ;

