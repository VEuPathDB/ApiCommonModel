CREATE TABLE :SCHEMA.:CLEAN_ORG_ABBREVAlphaFoldGenes_p (
    gene_source_id   VARCHAR(80),
    uniprot_id   VARCHAR(80),
    alphafold_id   VARCHAR(80),
    alphafold_version   VARCHAR(80),
    project_id  varchar(20),
    first_residue_index integer,
    last_residue_index integer,
    hit_length integer,
    org_abbrev  varchar(30),
    modification_date   timestamp
) partition by list (org_abbrev);


DO $$
    DECLARE orgrecord record:PLPGSQL_DELIM
    BEGIN
        FOR orgrecord IN (
	   SELECT DISTINCT oa.org_abbrev, oa.sanitized_org_abbrev, o.taxon_id
	   FROM apidb.organism o, :SCHEMA.OrganismAbbreviation_p oa
	   where o.abbrev = oa.org_abbrev)
        LOOP

          partition_name := lower('alphafoldgenes_p_' || orgrecord.sanitized_org_abbrev);
          EXECUTE format('CREATE TABLE %I PARTITION OF SyntenicGene_p_ FOR VALUES IN (%L)', partition_name, orgrecord.org_abbrev);

          EXECUTE format('DROP TABLE IF EXISTS :SCHEMA.MinRanks_%s', orgrecord.sanitized_org_abbrev):PLPGSQL_DELIM
		      

          EXECUTE format('CREATE UNLOGGED TABLE :SCHEMA.MinRank_%s  AS
            SELECT gene_source_id
              , MIN(rank) as min_rank
            FROM :SCHEMA.uniprotGenes_p  upg, apidb.alphafold af
            WHERE upg.primary_identifier = af.uniprot_id
	    and upg.org_abbrev = %L
            GROUP BY gene_source_id', orgrecord.sanitized_org_abbrev, orgrecord.org_abbrev):PLPGSQL_DELIM

          EXECUTE format('DROP TABLE IF EXISTS :SCHEMA.AlphaFoldHits_%s', orgrecord.sanitized_org_abbrev):PLPGSQL_DELIM
		      

          EXECUTE format('CREATE UNLOGGED TABLE :SCHEMA.AlphaFoldHits_%s  AS
          SELECT DISTINCT gene_source_id
            , last_value(primary_identifier) over (PARTITION BY gene_source_id ORDER BY hit_length ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS uniprot_id
          FROM (
            SELECT upg.gene_source_id, upg.primary_identifier, (af.last_residue_index - af.first_residue_index + 1) as hit_length
            FROM :SCHEMA.uniprotGenes_p  upg
              , :SCHEMA.minRank_%s minRank
	      , apidb.alphafold af
            WHERE upg.gene_source_id = minRank.gene_source_id
            AND upg.rank = minRank.min_rank
            and af.uniprot_id = upg.primary_identifier
	    and upg.org_abbrev = %L 
          ) t', orgrecord.sanitized_org_abbrev, orgrecord.sanitized_org_abbrev, orgrecord.org_abbrev):PLPGSQL_DELIM

          EXECUTE format('
          INSERT INTO :SCHEMA.AlphaFoldGenes_p (gene_source_id, uniprot_id, alphafold_id, alphafold_version, first_residue_index,
	    last_residue_index, hit_length, org_abbrev, project_id, modification_date) 
          SELECT afh.gene_source_id
            , af.uniprot_id
            , af.source_id as alphafold_id
            , af.alphafold_version
            , af.first_residue_index
            , af.last_residue_index
	    , (af.last_residue_index - af.first_residue_index + 1) as hit_length
	    , %L
	    , %L 
	    , current_timestamp
          FROM apidb.alphafold af
            , :SCHEMA.alphaFoldHits_%s afh
          WHERE afh.uniprot_id = af.uniprot_id', orgrecord.org_abbrev, ':PROJECT_ID', orgrecord.sanitized_org_abbrev):PLPGSQL_DELIM


      EXECUTE format('DROP TABLE IF EXISTS :SCHEMA.MinRank_%s', orgrecord.sanitized_org_abbrev):PLPGSQL_DELIM
      EXECUTE format('DROP TABLE IF EXISTS :SCHEMA.AlphaFoldHits_%s', orgrecord.sanitized_org_abbrev):PLPGSQL_DELIM

  END LOOP:PLPGSQL_DELIM
END $$;


