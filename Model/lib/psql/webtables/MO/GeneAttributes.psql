:CREATE_AND_POPULATE

      
	    CREATE TABLE :ORG_ABBREVGeneAttributes  AS
	    SELECT DISTINCT project_id
        , ta.gene_source_id AS source_id
		, gene_na_feature_id AS na_feature_id
		, na_sequence_id
		, is_reversed
		, gene_start_min AS start_min
		, gene_end_max AS end_max
        , CASE strand WHEN 'forward' THEN '+' WHEN 'reverse' THEN '-' ELSE null END as strand_plus_minus
		, sequence_id
		, gene_name AS name
		, COALESCE(aggregates.product, aggregates.transcript_product) as  old_product
		, COALESCE(gp.product, 'unspecified product') as product
		, gene_type
        , gene_ebi_biotype
		, gene_id
		, aggregates.is_pseudo
		, organism
		, species
		, taxon_id
		, species as genus_species
        , strain
		, ncbi_tax_id
		, so_id
		, so_term_name
		, so_term_definition
		, so_version
		, anticodon
		, external_db_name
		, external_db_version
		, external_db_rls_id
		, chromosome
		, chromosome_order_num
		, sequence_type
		, gene_transcript_count AS transcript_count
		, gene_exon_count as exon_count
		, gene_previous_ids as previous_ids
		, is_deprecated
		, gene_paralog_number as paralog_number
		, gene_ortholog_number as ortholog_number
		, gene_context_start as context_start
		, gene_context_end as context_end
		, orthomcl_name
		, gene_total_hts_snps as total_hts_snps
		, gene_hts_nonsynonymous_snps as hts_nonsynonymous_snps
		, gene_hts_stop_codon_snps as hts_stop_codon_snps
		, gene_hts_noncoding_snps as hts_noncoding_snps
		, gene_hts_synonymous_snps as hts_synonymous_snps
		, gene_hts_nonsyn_syn_ratio as hts_nonsyn_syn_ratio
		, comment_string
		, uniprot.uniprot_id
		, uniprot.uniprot_id_internal
		, gene_entrez_id as entrez_id
		, representative_transcript
        , gene_zoom_context_start as zoom_context_start
        , gene_zoom_context_end as zoom_context_end
        , cast (null as numeric) as strain_count
        , ta.gene_locations as locations
        FROM :ORG_ABBREVTranscriptAttributes ta
          INNER JOIN (
            SELECT gene_source_id, MIN(is_pseudo) AS is_pseudo, MIN(gene_product) AS product,
              substr(STRING_AGG(transcript_product, ',' order by transcript_product), 1, 240) as transcript_product
            FROM :ORG_ABBREVTranscriptAttributes
            GROUP BY gene_source_id
          ) aggregates ON ta.gene_source_id = aggregates.gene_source_id
          LEFT JOIN (
            SELECT na_feature_id,
              substr(string_agg(uniprot_id, ',' order by uniprot_id), 1, 240) as uniprot_id,
              substr(string_agg(uniprot_id, '+or+' order by uniprot_id), 1, 240) as uniprot_id_internal
            FROM (
              SELECT distinct t.parent_id as na_feature_id, dr.primary_identifier as uniprot_id
              FROM sres.DbRef dr, dots.DbRefNaFeature x, dots.Transcript t,
                   sres.ExternalDatabase d, sres.ExternalDatabaseRelease r
              WHERE dr.db_ref_id = x.DB_REF_ID
                AND (x.na_feature_id = t.na_feature_id OR x.na_feature_id = t.parent_id)
                AND dr.external_database_release_id = r.external_database_release_id
                AND r.external_database_id = d.external_database_id
                AND (d.name like '%uniprot_dbxref_RSRC'
                     OR d.name like '%dbxref_gene2Uniprot_RSRC'
                     OR d.name = 'Links to Uniprot Genes'
                     OR d.name like '%_dbxref_uniprot_from_annotation_RSRC')
               ) t
            GROUP BY na_feature_id
          ) uniprot ON ta.gene_na_feature_id = uniprot.na_feature_id
          LEFT JOIN :ORG_ABBREVGeneProduct gp ON ta.gene_source_id = gp.source_id
        ORDER BY ta.gene_source_id
      
    
:DECLARE_PARTITION;


      
        CREATE TABLE :ORG_ABBREVSpeciesInfo  as
        SELECT genus_species, count(distinct organism) as strain_count
        FROM :ORG_ABBREVGeneAttributes 
        GROUP BY genus_species
      
    ;


      
        UPDATE :ORG_ABBREVGeneAttributes  ga
        SET strain_count = (
          SELECT strain_count
          FROM :ORG_ABBREVSpeciesInfo  si
          WHERE si.genus_species = ga.genus_species
        )
      
    ;

