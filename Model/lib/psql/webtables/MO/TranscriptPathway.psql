:CREATE_AND_POPULATE

        
         CREATE TABLE TranscriptPathway  (
            SOURCE_ID	                  VARCHAR(80),
            GENE_SOURCE_ID	              VARCHAR(80),
            PROJECT_ID	                  VARCHAR(20),
            PATHWAY_SOURCE_ID	          VARCHAR(50),
            PATHWAY_NAME	              VARCHAR(150),
            EC_NUMBER_GENE	              VARCHAR(16),
            WILDCARD_COUNT_GENE	          NUMERIC,
            EC_NUMBER_PATHWAY	          VARCHAR(16),
            WILDCARD_COUNT_PATHWAY	      NUMERIC,
            EXACT_MATCH	                  NUMERIC,
            COMPLETE_EC	                  NUMERIC,
            PATHWAY_ID	                  NUMERIC(12,0),
            PATHWAY_SOURCE	              VARCHAR(200),
            EXTERNAL_DATABASE_RELEASE_ID  NUMERIC(10,0)
         )
      
    
:DECLARE_PARTITION;


      
        DO $$
        DECLARE
          idlist RECORD;
        BEGIN
        FOR idlist IN ( SELECT DISTINCT organism FROM GeneAttributes )
        LOOP
          INSERT INTO TranscriptPathway 
            WITH transcript_ec AS (
              SELECT ec.enzyme_class_id, ec.ec_number, ec.ec_number_1, ec.ec_number_2, ec.ec_number_3, ec.ec_number_4,
                -- CHECK AND FIX
                -- regexp_count( ec.ec_number, '-') as wildcard_count
                count( ec.ec_number) as wildcard_count
              FROM sres.EnzymeClass ec
              WHERE enzyme_class_id IN (SELECT enzyme_class_id FROM dots.AaSequenceEnzymeClass)
              GROUP BY ec.enzyme_class_id
            ),
            pathway_node_ec AS (
              SELECT distinct pn.pathway_id, pn.row_id as enzyme_class_id
              FROM sres.PathwayNode pn, sres.ontologyterm ot
              WHERE pn.pathway_node_type_id = ot.ontology_term_id
                AND ot.name = 'enzyme'
                AND pn.display_label != '-.-.-.-'
            ),
            pathway_ec AS (
              SELECT ec.enzyme_class_id, ec.ec_number, ec.ec_number_1, ec.ec_number_2, ec.ec_number_3, ec.ec_number_4,
                -- CHECK AND FIX
                --   regexp_count( ec.ec_number, '-') as wildcard_count
                     count( ec.ec_number) as wildcard_count
              FROM sres.EnzymeClass ec
              WHERE enzyme_class_id IN (SELECT enzyme_class_id FROM pathway_node_ec)
              GROUP BY ec.enzyme_class_id
            ),
            ec_match AS (
              SELECT tec.enzyme_class_id as transcript_enzyme_class_id,
                     pec.enzyme_class_id as pathway_enzyme_class_id,
                     tec.wildcard_count as wildcard_count_transcript,
                     pec.wildcard_count as wildcard_count_pathway,
                     tec.ec_number as ec_number_transcript,
                     pec.ec_number as ec_number_pathway
              FROM transcript_ec tec, pathway_ec pec
              WHERE (tec.ec_number_1 = pec.ec_number_1 or tec.ec_number_1 is null or pec.ec_number_1 is null)
                AND (tec.ec_number_2 = pec.ec_number_2 or tec.ec_number_2 is null or pec.ec_number_2 is null)
                AND (tec.ec_number_3 = pec.ec_number_3 or tec.ec_number_3 is null or pec.ec_number_3 is null)
                AND (tec.ec_number_4 = pec.ec_number_4 or tec.ec_number_4 is null or pec.ec_number_4 is null)
            )
            SELECT DISTINCT ga.source_id
              , ga.gene_source_id
              , ga.project_id
              , pa.source_id as pathway_source_id
              , pa.name as pathway_name
              , ec_match.ec_number_transcript as ec_number_gene
              , ec_match.wildcard_count_transcript as wildcard_count_gene
              , ec_match.ec_number_pathway
              , ec_match.wildcard_count_pathway
              , CASE WHEN ec_match.ec_number_pathway = ec_match.ec_number_transcript
                  THEN 1
                  ELSE 0 END as exact_match
              , CASE WHEN ec_match.wildcard_count_pathway + ec_match.wildcard_count_transcript = 0
                  THEN 1
                  ELSE 0  END as complete_ec
              , pa.pathway_id
              , pa.pathway_source
              , p.external_database_release_id
            FROM PathwayAttributes pa
              , sres.pathway p
              , pathway_node_ec pec
              , ec_match
              , dots.AaSequenceEnzymeClass asec
              , TranscriptAttributes ga
            WHERE ga.organism = idlist.organism
              AND pa.pathway_id = pec.pathway_id
              AND p.pathway_id = pa.pathway_id
              AND pec.enzyme_class_id = ec_match.pathway_enzyme_class_id
              AND asec.enzyme_class_id = ec_match.transcript_enzyme_class_id
              AND ga.aa_sequence_id  = asec.aa_sequence_id
              AND (
                (ga.orthomcl_name IS NULL AND asec.evidence_code != 'OrthoMCLDerived')
                OR ga.orthomcl_name IS NOT NULL
              )
          ;
          commit;
         END LOOP;
        END;
        $$ LANGUAGE PLPGSQL;
      
    ;

