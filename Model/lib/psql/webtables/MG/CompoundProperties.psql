        CREATE TABLE :SCHEMA.CompoundProperties  AS
        SELECT c.ID, c.chebi_accession AS source_id, c.parent_id,
            c.name AS compound_name,
            substr(string_agg(cn.name, ';'), 1, 1000) AS other_names,
            substr(string_agg(ciup.iupac_name, ';'), 1, 1000) AS iupac_name,
            substr(string_agg(csyn.syn, ';'), 1, 1000) AS syn,
            c.definition, m.mass,
            string_agg(formu.formula, ';' order by formu.formula) AS formula,
            string_agg(sec.chebi_accession, ';' order by sec.chebi_accession) AS secondary_ids
        FROM  chebi.compounds c
          LEFT JOIN ( SELECT compound_id,  NAME FROM chebi.names WHERE TYPE='NAME')
            cn ON  c.ID = cn.compound_id
          LEFT JOIN ( SELECT compound_id,  MIN(NAME) AS iupac_name FROM chebi.names WHERE TYPE='IUPAC NAME' GROUP BY compound_id)
            ciup ON c.ID = ciup.compound_id
          LEFT JOIN ( SELECT compound_id,  MIN(NAME) AS syn FROM chebi.names WHERE type='SYNONYM' GROUP BY compound_id)
            csyn ON c.ID = csyn.compound_id
          LEFT JOIN ( SELECT compound_id, chemical_data AS formula FROM chebi.chemical_data WHERE TYPE='FORMULA')
            formu ON  c.ID = formu.compound_id
          LEFT JOIN ( SELECT compound_id, chemical_data AS mass FROM chebi.chemical_data WHERE TYPE='MASS' and chemical_data != 'NaN')
            m ON c.ID = m.compound_id
          LEFT JOIN ( SELECT parent_id, chebi_accession FROM chebi.compounds)
            sec ON c.ID = sec.parent_id
        WHERE NOT c.status in ('D', 'F')
        GROUP BY c.ID, c.chebi_accession, c.parent_id, c.name, c.definition, m.mass    
    ;

