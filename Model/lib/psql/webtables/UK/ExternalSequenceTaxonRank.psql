
      
        CREATE TABLE ExternalSequenceTaxonRank  AS
        WITH organism_rank AS (
          SELECT tn1.taxon_id as organism, tn2.name as parent_organism,
                 tn2.taxon_id as parent_organism_id, r.rank
          FROM sres.TaxonName tn1, sres.TaxonName tn2,
                (
                  WITH RECURSIVE cte AS (
                    SELECT taxon_id as input, taxon_id, rank, parent_id
                    FROM sres.taxon
                    WHERE taxon_id IN (
                        SELECT taxon_id FROM dots.externalaasequence
                        UNION
                        SELECT taxon_id FROM apidb.taxonstring
                    )
                    UNION
                    SELECT cte.input, t.taxon_id, t.rank, t.parent_id
                    FROM sres.taxon t, cte
                    WHERE cte.parent_id = t.taxon_id
                  )
                  SELECT input, taxon_id, rank
                  FROM cte
                ) r
          WHERE r.input = tn1.taxon_id
           and r.taxon_id = tn2.taxon_id
           and tn1.name_class = 'scientific name'
           and tn2.name_class = 'scientific name'
           and r.rank in ('phylum', 'family','genus', 'species', 'superkingdom','kingdom', 'class', 'order')
        )
        SELECT organisms.organism,
               coalesce(superkingdom.parent_organism, 'N/A') as superkingdom,
               superkingdom.parent_organism_id as superkingdom_id,
               coalesce(kingdom.parent_organism, 'N/A') as kingdom,
               kingdom.parent_organism_id as kingdom_id,
               coalesce (phylum.parent_organism, 'N/A') as phylum,
               phylum.parent_organism_id as phylum_id,
               coalesce (class.parent_organism, 'N/A') as class,
               class.parent_organism_id as class_id,
               coalesce (family.parent_organism, 'N/A') as family,
               family.parent_organism_id as family_id,
               coalesce (rank_order.parent_organism, 'N/A') as rank_order,
               rank_order.parent_organism_id as rank_order_id,
               coalesce ( genus.parent_organism, 'N/A') as genus,
               genus.parent_organism_id as genus_id,
               coalesce(species.parent_organism, 'N/A') as species,
               species.parent_organism_id as species_id
        FROM (SELECT DISTINCT organism FROM organism_rank) organisms
             LEFT JOIN (SELECT * FROM organism_rank WHERE rank= 'phylum') phylum ON  organisms.organism = phylum.organism
             LEFT JOIN (SELECT * FROM organism_rank WHERE rank= 'genus') genus ON  organisms.organism = genus.organism
             LEFT JOIN (SELECT * FROM organism_rank WHERE rank= 'species') species ON  organisms.organism = species.organism
             LEFT JOIN (SELECT * FROM organism_rank WHERE rank= 'kingdom') kingdom ON  organisms.organism = kingdom.organism
             LEFT JOIN (SELECT * FROM organism_rank WHERE rank= 'superkingdom') superkingdom ON  organisms.organism = superkingdom.organism
             LEFT JOIN (SELECT * FROM organism_rank WHERE rank= 'class') class ON  organisms.organism = class.organism
             LEFT JOIN (SELECT * FROM organism_rank WHERE rank= 'family') family ON  organisms.organism = family.organism
             LEFT JOIN (SELECT * FROM organism_rank WHERE rank= 'order') rank_order ON organisms.organism = rank_order.organism
        ORDER BY organism, species, genus
       
    ;

