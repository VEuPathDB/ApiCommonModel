
      
      
        create table SequenceAttributes  as
        SELECT
            aas.source_id AS full_id,
            aas.source_id,
            aas.aa_sequence_id,
            length(aas.sequence) as length,
            aas.description AS product,
            aas.taxon_id,

            taxon.orthomcl_taxon_id,
            taxon.taxon_group,
            taxon.orthomcl_abbrev AS taxon_abbreviation,
            taxon.name AS organism_name,
            taxon.core_peripheral,

            o.group_id AS group_name,
            o.ortholog_group_id,
            o.number_of_members AS group_size,
            o.number_of_core_members,
            o.number_of_peripheral_members,
            CASE is_residual WHEN 1 THEN 'Residual'
                             ELSE 'Core' END AS group_type,
            urls.source_url,
            urls.source_text
        FROM
            dots.AASequence aas,
            apidb.orthologGroup o,
            apidb.orthologGroupAASequence ogseq,
            (
            SELECT o.orthomcl_abbrev,
                   o.taxon_id as orthomcl_taxon_id,
                   t.name,
                   t.core_peripheral,
                   t.taxon_group
            FROM apidb.organism o,
                 (WITH RECURSIVE TaxonHierarchy AS (
                    SELECT
                      three_letter_abbrev,
                      orthomcl_clade_id,
                      name,
                      core_peripheral,
                      name AS taxon_group,
                      parent_id
                    FROM apidb.OrthomclClade
                    WHERE name IN ('Archaea', 'Bacteria', 'Alveolates', 'Amoebozoa', 'Euglenozoa',
                                   'Fungi', 'Metazoa', 'Other Eukaryota', 'Viridiplantae')
                   UNION ALL
                   SELECT
                      child.three_letter_abbrev,
                      child.orthomcl_clade_id,
                      child.name,
                      child.core_peripheral,
                      parent.taxon_group,
                      child.parent_id
                   FROM apidb.OrthomclClade child
                   JOIN TaxonHierarchy parent ON child.parent_id = parent.orthomcl_clade_id
                   )
                   SELECT three_letter_abbrev, taxon_group, name, core_peripheral
                   FROM TaxonHierarchy
                   WHERE core_peripheral IN ('C', 'P')
                   ) t
            WHERE t.three_letter_abbrev = o.orthomcl_abbrev
            ) taxon,

            (
            SELECT aas.aa_sequence_id,
                  CASE
                    WHEN ores.resource_name IN ('AmoebaDB','CryptoDB','FungiDB','GiardiaDB','HostDB','MicrosporidiaDB',
                                                'PlasmoDB','PiroplasmaDB','ToxoDB','TrichDB','TriTrypDB','VectorBase')
                     THEN SUBSTR(ores.resource_url, 0, strpos(ores.resource_url, '/downloads')) || 'record/gene/'
                                  || aas.source_id
                    WHEN ores.resource_name = 'Uniprot'
                     THEN SUBSTR(ores.resource_url, 0, strpos(ores.resource_url, '/proteomes') ) || 'uniprot/'
                          || aas.source_id
                    ELSE '' END AS source_url,
                  CASE WHEN ores.resource_name IS NULL THEN ''
                          ELSE aas.source_id || ' (' || ores.resource_name || ')' END AS source_text
            FROM dots.AaSequence aas,
                 apidb.organism ot,
                 apidb.orthomclresource ores
            WHERE ot.taxon_id = ores.orthomcl_taxon_id
            AND ot.taxon_id = aas.taxon_id) urls
           WHERE aas.aa_sequence_id = ogseq.aa_sequence_id
           AND ogseq.group_id = o.group_id
           AND aas.aa_sequence_id = urls.aa_sequence_id
           AND taxon.orthomcl_taxon_id = aas.taxon_id
           AND aas.taxon_id in (select distinct(eas.taxon_id) from apidb.organism og, dots.aasequence eas where eas.taxon_id = og.taxon_id)
      
    ;


      
        alter table SequenceAttributes 
          add constraint SeqAttrs_pk  primary key (full_id)
      
    ;


      
        create unique index SeqAttrs_idx  ON SequenceAttributes  (full_id, group_name, taxon_id, source_id)
      
    ;


      
        create unique index SeqAttrs_gusIdx  ON SequenceAttributes  (ortholog_group_id, aa_sequence_id)
      
    ;


      
        create unique index SeqAttrs_idx2  ON SequenceAttributes  (group_name, length desc, full_id, taxon_id)
      
    ;


      
        create unique index SeqAttrs_idx3 
          on SequenceAttributes  (aa_sequence_id, group_name, ortholog_group_id, orthomcl_taxon_id, taxon_id)
      
    ;


      
        create unique index SeqAttrs_idx4  ON SequenceAttributes  (source_id, full_id, group_name, taxon_id)
      
    ;

