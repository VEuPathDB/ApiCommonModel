<wdkModel>
  <paramSet name="compoundParams" excludeProjects="EuPathDB,UniDB">
        
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Compound IDs -->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <datasetParam name="ds_compound_id"
		  recordClassRef="CompoundRecordClasses.CompoundRecordClass"
		  prompt="Compound ID">

      <help>
	Enter chEBI compound IDs and/or KEGG compound IDs.
      </help>
      <suggest
	  default="CHEBI:15608, C00074"/>
    </datasetParam>


    <flatVocabParam name="chebi_compound_id"
		    queryRef="CompoundVQ.CompoundID"
		    prompt="Compound ID"
                    multiPick="true"
		    displayType="typeAhead">
      <help> Enter a chEBI compound ID or name.</help>
      <suggest selectMode="none"/>
    </flatVocabParam>

    <stringParam name="min_molecular_weight"
		 prompt="Min Molecular Weight (Daltons)"
		 number="true">
      <help>Lower bound for the molecular weight of compound</help>
      <suggest default="800"/>
    </stringParam>

    <stringParam name="max_molecular_weight"
		 prompt="Max Molecular Weight (Daltons)"
		 number="true">
      <help>Upper bound for the molecular weight of compound</help>
      <suggest default="900"/>
    </stringParam>

    <stringParam name="input_formula"
		 prompt="Molecular Formula"
		 number="false">
      <help>Molecular formula of compound. Use '*' for wildcard.</help>
      <suggest default="C6H12*"/>
    </stringParam>

    <enumParam name="text_fields" 
	       prompt="Fields"
	       multiPick="true">
      <noTranslation value="true" includeProjects="EuPathDB" />
      <noTranslation value="false" excludeProjects="EuPathDB" />
      <help>
	Choose which text fields to search.
      </help>
      <enumList>
        <enumValue default="true">
            <term>Compound Name</term>
            <internal>CompoundName</internal>
        </enumValue>
        <enumValue default="true">
          <term>Synonyms</term>
          <internal>Synonyms</internal>
        </enumValue>
        <enumValue>
            <term>Metabolic Pathways</term>
            <internal>MetabolicPathways</internal>
        </enumValue>
        <enumValue>
          <term>Reactions and Enzymes</term>
          <internal>CompoundsMetabolicPathways</internal>
        </enumValue>
        <enumValue>
          <term>Definition</term>
          <internal>Definition</internal>
        </enumValue>
        <enumValue>
          <term>Secondary Identifiers</term>
          <internal>SecondaryIds</internal>
        </enumValue>
        <enumValue>
          <term>IUPAC Names</term>
          <internal>IupacNames</internal>
        </enumValue>
        <enumValue>
          <term><![CDATA[Properties (InChI, InChIKey, IUPAC Name, SMILES, Molecular Weight)]]></term>
          <internal>Properties</internal>
        </enumValue>
      </enumList>
    </enumParam>


    <enumParam name="compound_type" 
	       prompt="Compound is a ..."
	       multiPick="false"
	       quote="true">
      <noTranslation value="true" includeProjects="EuPathDB" />
      <help>
	Choose whether the compound should be a substrate, or a product, or both, or either in a reaction.
      </help>
      <enumList>
          <enumValue>
	    <display>substrate</display>
            <term>substrate</term>
            <internal>substrate</internal>
          </enumValue>
          <enumValue>
	    <display>product</display>
            <term>product</term>
            <internal>product</internal>
          </enumValue>
          <enumValue>
            <display>substrate/product (reversible reaction)</display>
            <term>substrate/product</term>
            <internal>substrate/product</internal>
          </enumValue>
          <enumValue default="true">
            <display>either substrate or product</display>
            <term>either</term>
            <internal>either</internal>
          </enumValue>
        </enumList>
    </enumParam>


    <enumParam name="any_or_all_pathway"
                     prompt="Pathways must contain: "
                     multiPick="false"
                     quote="false">
      <noTranslation value="true" includeProjects="EuPathDB" />
      <help>Return pathways associated with ANY of the record entered or return only pathways associated to ALL the records</help>
      <enumList>
        <enumValue default="true">
          <term>any</term>
          <internal>any</internal>
	  <display>any of the specified compounds</display>
        </enumValue>
        <enumValue>
          <term>all</term>
          <internal>all</internal>
	  <display>all of the specified compounds</display>
        </enumValue>  
      </enumList>
    </enumParam>

    <stringParam name="enzyme"
		 prompt="EC Number"
		 number="false">
      <help>Enter EC Number.</help>
      <suggest default="4.1.1.49"/>
    </stringParam>


    <stringParam name="fold_change_compound"
		 prompt="Fold change >="
		 number="true">
      <help>Enter a non-negative number.</help> 
      <suggest default="2"/>
    </stringParam>
    
	<!--RossNew -->
    <flatVocabParam name="profileset" includeProjects="TriTrypDB"
            queryRef="CompoundVQ.CompoundMassSpec"
            prompt="Experiment"
            quote="false"
            multiPick="false">
      <help>Choose an Experiment</help>
    </flatVocabParam>

    <flatVocabParam name="samples_fc_ref_generic" includeProjects="TriTrypDB"
            queryRef="CompoundVQ.CompoundMassSpecSamples"
            prompt="Reference Samples"
            quote="false"
            displayType="checkBox"
            multiPick="true"
            dependedParamRef="compoundParams.profileset">
      <help>Choose reference samples</help>
      <suggest selectMode="none" />
    </flatVocabParam>

    <flatVocabParam name="samples_fc_comp_generic" includeProjects="TriTrypDB"
            queryRef="CompoundVQ.CompoundMassSpecSamples"
            prompt="Comparison Samples"
            quote="false"
            displayType="checkBox"
            multiPick="true"
            dependedParamRef="compoundParams.profileset">
      <help>Choose comparison samples</help>
      <suggest selectMode="none" />
    </flatVocabParam>

    <flatVocabParam name="profileset" includeProjects="PlasmoDB,UniDB"
            queryRef="CompoundVQ.LlinasMetabolitesProfiles"
            prompt="Experiment"
            quote="false"
            multiPick="false">
      <help>Choose an Experiment</help>
    </flatVocabParam>

	
	<flatVocabParam name="samples_fc_ref_generic" includeProjects="PlasmoDB,UniDB"
            queryRef="CompoundVQ.LlinasMetabolitesSamples"
            prompt="Reference Samples"
            quote="false"
            displayType="checkBox"
            multiPick="true"
            dependedParamRef="compoundParams.profileset">
      <help>Choose reference samples</help>
      <suggest selectMode="none" />
    </flatVocabParam>

    <flatVocabParam name="samples_fc_comp_generic" includeProjects="PlasmoDB,UniDB"
            queryRef="CompoundVQ.LlinasMetabolitesSamples"
            prompt="Comparison Samples"
            quote="false"
            displayType="checkBox"
            multiPick="true"
            dependedParamRef="compoundParams.profileset">
      <help>Choose comparison samples</help>
      <suggest selectMode="none" />
    </flatVocabParam>

    <flatVocabParam name="regulated_dir"
                    prompt="Direction"
                    multiPick="false"
                    quote="false"
                    queryRef="CompoundVQ.regulatedDirection">
    <noTranslation value="true" includeProjects="EuPathDB" />
      <help><![CDATA[
            <ul>
<li>- Select 'up-regulated' to find compounds that have higher expression
in the comparator as compared to the reference.</li><br>
<li>- Select 'down-regulated' to find compounds that have lower expression
in the comparator as compared to the reference.</li><br>
<li>- Select 'up or down regulated' to find compounds that have higher or
lower expression in the comparator as compared to the reference.</li>
</ul>
      ]]></help>
      <suggest default="up or down regulated"/>
    </flatVocabParam>

    <flatVocabParam name="min_max_avg_comp" includeProjects="PlasmoDB,UniDB, TriTrypDB"
                     queryRef="CompoundVQ.MinMaxAvgComp"
                     prompt="Operation Applied to Comparison Samples"
                     quote="false"
                     dependedParamRef="compoundParams.regulated_dir">
      <help>
          <![CDATA[
            Choose the operation (min/max/mean/median) to be applied to the chosen sample(s).  This parameter only makes a difference if more than one sample/time point is chosen.
          ]]>
      </help>
    </flatVocabParam>

    <flatVocabParam name="min_max_avg_ref" includeProjects="PlasmoDB,UniDB, TriTrypDB"
                     queryRef="CompoundVQ.MinMaxAvgRef"
                     prompt="Operation Applied to Comparison Samples"
                     quote="false"
                     dependedParamRef="compoundParams.regulated_dir">
      <help>
          <![CDATA[
            Choose the operation (min/max/mean/median) to be applied to the chosen sample(s).  This parameter only makes a difference if more than one sample/time point is chosen.
          ]]>
      </help>
    </flatVocabParam>


    <stringParam name="pathway_wildcard"
		     prompt="Pathway wildcard search" number="false">
	  <suggest default="N/A"/>
	  <help>Asterisks can be used as wildcard characters in a Pathway (e.g. "ec001*")</help>
        </stringParam>



    <answerParam name="compound_result"
                  prompt="Input Result Set"
                  readonly="true"
                  visible="false">
       <recordClass ref="CompoundRecordClasses.CompoundRecordClass" />
    </answerParam>

  </paramSet>



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Vocab queries  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    
  <querySet name="CompoundVQ" queryType="vocab"  isCacheable="true" excludeProjects="EuPathDB,UniDB">

         <sqlQuery name="CompoundID">
            <column name="internal" />
            <column name="term" />
            <column name="display"/>

            <sql>
	      SELECT compound_id AS internal, display AS term, display
               FROM  ApidbTuning.CompoundTypeAheads
             UNION
               SELECT 'N/A' AS internal, 'N/A' AS term, 'N/A' AS display
            </sql>
        </sqlQuery>

      <sqlQuery name="LlinasMetabolitesProfiles" includeProjects="PlasmoDB,UniDB">
             <column name="display"/>
             <column name="internal"/>
			 <column name="term"/>
          <sql>
          SELECT name as term, study_id as internal, 
	                  'Effect of pH on metabolite levels (Lewis, Baska and Llinas)' as display 
           FROM study.study
           WHERE name = 'Profiles of Metabolites from Llinas'
          </sql>
	  </sqlQuery>

		<!--RossNew -->
      <sqlQuery name="CompoundMassSpec" includeProjects="TriTrypDB">
             <column name="display"/>
             <column name="internal"/>
            <column name="term"/>
         <sql>
            select s.name as term
            , s.study_id as internal
            , replace(s.name, '[metaboliteProfiles]', '') as display --use display name in injector
            from study.study i
            , study.study s
            where i.name = 'compoundMassSpec_Barrett_PurineStarvation_RSRC'
            and s.investigation_id = i.study_id
		 </sql>
 </sqlQuery>

       <processQuery name="LlinasMetabolitesProfiles" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
            <wsColumn name="internal" width="300" wsName="internal"/>
            <wsColumn name="term" width="300" wsName="term"/>
            <wsColumn name="display" width="300" wsName="display"/>
        </processQuery>

      <processQuery name="LlinasMetabolitesSamples" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
            <paramRef ref="compoundParams.profileset"/>
            <wsColumn name="internal" width="100" wsName="internal"/>
            <wsColumn name="term" width="100" wsName="term"/>
            <wsColumn name="display" width="100" wsName="display"/>
        </processQuery>

        <sqlQuery name="regulatedDirection"  excludeProjects="EuPathDB">
            <column name="internal" />
            <column name="term" />
            <sql>
            SELECT 'up or down regulated' as term, 'abs' as internal
            UNION
            SELECT 'down-regulated' as term, '-' as internal
            UNION
            SELECT 'up-regulated' as term, '+' as internal
            </sql>
        </sqlQuery>

      <sqlQuery name="LlinasMetabolitesSamples" includeProjects="PlasmoDB,UniDB">
			  <paramRef ref="compoundParams.profileset"/> 
             <column name="internal"/>
             <column name="term"/>
             <column name="display"/>
          <sql>
          SELECT protocol_app_node_name AS term
          , replace(replace(replace(protocol_app_node_name, 'RBC', 'uninfected RBC'), 'Percoll', 'infected RBC (Percoll)'), 'Saponin', 'isolated parasites (saponin)') as display
          , protocol_app_node_id AS internal
          FROM apidbtuning.profileSamples
          WHERE study_id = '$$profileset$$'
          AND protocol_app_node_name not like '%blank%'
          ORDER BY node_order_num
          </sql>
        </sqlQuery>
		<!--RossNew -->
      <sqlQuery name="CompoundMassSpecSamples" includeProjects="TriTrypDB">
             <paramRef ref="compoundParams.profileset"/>
             <column name="internal"/>
             <column name="term"/>
             <column name="display"/>
          <sql>
            select protocol_app_node_name as term
            , protocol_app_node_name as display
            , protocol_app_node_id as internal
            from apidbtuning.profilesamples
            where study_id = $$profileset$$
            order by node_order_num
		  </sql>
        </sqlQuery>

        <processQuery name="CompoundMassSpec" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
            <wsColumn name="internal" width="300" wsName="internal"/>
            <wsColumn name="term" width="300" wsName="term"/>
            <wsColumn name="display" width="300" wsName="display"/>
        </processQuery>
     

        <processQuery name="CompoundMassSpecSamples" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
            <paramRef ref="compoundParams.profileset"/>
            <wsColumn name="internal" width="100" wsName="internal"/>
            <wsColumn name="term" width="100" wsName="term"/>
            <wsColumn name="display" width="100" wsName="display"/>
        </processQuery>

	
       <processQuery name="regulatedDirection" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB" doNotTest="1">
            <wsColumn name="internal" width="100" wsName="internal"/>
            <wsColumn name="term" width="200" wsName="term"/>
        </processQuery>

         <sqlQuery name="MinMaxAvgComp" includeProjects="PlasmoDB,UniDB, TriTrypDB">
             <paramRef ref="compoundParams.regulated_dir"/>
             <column name="internal"/>
             <column name="term"/>
             <column name="display"/>
          <sql>
         <![CDATA[
            select * from (
              select term || p.so as term, internal,display, p.so
              from ( select 'mean' as term, 
                            'avg' as internal, 
                            'mean' as display, 
                            CASE 
                              WHEN  '$$regulated_dir$$' = 'abs' 
                              THEN 1 
                            ELSE 3 END as so 
                     union
                     select 'minimum' as term, 
                            'min' as internal, 
                            'minimum' as display, 
                            CASE 
                              WHEN  '$$regulated_dir$$' = '+' 
                              THEN 1 
                              WHEN '$$regulated_dir$$' = '-'
                              THEN 2
                            ELSE 3 END as so 
                     union
                     select 'maximum' as term, 
                            'max' as internal, 
                            'maximum' as display, 
                            CASE 
                              WHEN  '$$regulated_dir$$' = '-' 
                              THEN 1 
                              WHEN '$$regulated_dir$$' = '+'
                              THEN 2
                            ELSE 3 END as so 
                     union
                     select 'median' as term, 
                            'median' as internal, 
                            'median' as display, 
                            CASE 
                              WHEN  '$$regulated_dir$$' = 'abs' 
                              THEN 1 
                            ELSE 3 END as so 
                   ) p,
                   ( select 'abs' as type
                     union
                     select '+' as type
                     union
                     select '-' as type
                   ) t, 
                   ( select 1 as so
                     union 
                     select 2 as so
                     union 
                     select 3 as so
                   ) o
               where p.so = o.so and type = '$$regulated_dir$$'
               order by p.so, p.display
            ) where '$$regulated_dir$$' != 'abs' OR ('$$regulated_dir$$' = 'abs' AND term like 'me%')
          ]]>
          </sql>
        </sqlQuery>

       <processQuery name="MinMaxAvgComp" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
            <paramRef ref="compoundParams.regulated_dir"/>
            <wsColumn name="internal" width="100" wsName="internal"/>
            <wsColumn name="term" width="100" wsName="term"/>
            <wsColumn name="display" width="100" wsName="display"/>
        </processQuery>

        <sqlQuery name="MinMaxAvgRef" includeProjects="PlasmoDB,UniDB, TriTrypDB">
             <paramRef ref="compoundParams.regulated_dir"/>
             <column name="internal"/>
             <column name="term"/>
             <column name="display"/>
          <sql>
         <![CDATA[
            select * from (
              select term || p.so as term, internal,display, p.so
              from ( select 'mean' as term, 
                            'avg' as internal, 
                            'mean' as display, 
                            CASE 
                              WHEN  '$$regulated_dir$$' = 'abs' 
                              THEN 1 
                            ELSE 3 END as so 
                     union
                     select 'minimum' as term, 
                            'min' as internal, 
                            'minimum' as display, 
                            CASE 
                              WHEN  '$$regulated_dir$$' = '-' 
                              THEN 1 
                              WHEN '$$regulated_dir$$' = '+'
                              THEN 2
                            ELSE 3 END as so 
                     union
                     select 'maximum' as term, 
                            'max' as internal, 
                            'maximum' as display, 
                            CASE 
                              WHEN  '$$regulated_dir$$' = '+' 
                              THEN 1 
                              WHEN '$$regulated_dir$$' = '-'
                              THEN 2
                            ELSE 3 END as so 
                     union
                     select 'median' as term, 
                            'median' as internal, 
                            'median' as display, 
                            CASE 
                              WHEN  '$$regulated_dir$$' = 'abs' 
                              THEN 1 
                            ELSE 3 END as so 
                   ) p,
                   ( select 'abs' as type
                     union
                     select '+' as type
                     union
                     select '-' as type
                   ) t, 
                   ( select 1 as so
                     union 
                     select 2 as so
                     union 
                     select 3 as so
                   ) o
               where p.so = o.so and type = '$$regulated_dir$$'
               order by p.so, p.display
            ) where '$$regulated_dir$$' != 'abs' OR ('$$regulated_dir$$' = 'abs' AND term like 'me%')
          ]]>
          </sql>
        </sqlQuery>

          <processQuery name="MinMaxAvgRef" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
            <paramRef ref="compoundParams.regulated_dir"/>
            <wsColumn name="internal" width="100" wsName="internal"/>
            <wsColumn name="term" width="100" wsName="term"/>
            <wsColumn name="display" width="100" wsName="display"/>
        </processQuery>


    </querySet>

</wdkModel>
