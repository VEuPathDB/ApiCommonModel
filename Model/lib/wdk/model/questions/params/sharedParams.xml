<wdkModel>

  <!-- notes

     - need to review mass spec params (for possible redundancy)

  -->

  <paramSet name="sharedParams">

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Text search params -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <stringParam name="text_expression"
                 prompt="Text term (use * as wildcard)" number="false" length="1000">
      <help>Enter the word or phrase that you wish to query. Genes returned by the search will contain
        this word or phrase in their annotations. Use an asterisk as a wildcard to match partial words.
        Use quotation marks around multiple words to match the exact phrase.</help>
      <suggest default="*reductase"/>
    </stringParam>

    <stringParam name="document_type" visible="false" number="false" readonly="true">
      <noTranslation value="true"/>
    </stringParam>

    <flatVocabParam name="text_fields"
                    queryRef="SharedVQ.SolrTextFieldsVocab"
                    prompt="Fields"
                    multiPick="true"
                    dependedParamRef="sharedParams.document_type">
      <help>Choose which text fields to search.</help>
      <suggest selectMode="all"/>
      <noTranslation value="true"/>
    </flatVocabParam>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Gene IDs -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <datasetParam name="ds_gene_ids"
                  recordClassRef="TranscriptRecordClasses.TranscriptRecordClass"
                  prompt="Gene ID input set">
      <help><![CDATA[Input a set of gene IDs, or upload a file. <br><br>
            
            IDs can be delimited by a comma, semicolon, space, or new-line.<br><br>
            
            It is possible that some IDs in your list will not be found in the database 
            due to annotation changes or unavailable ID mapping. At present, we do not 
            have a mechanism to inform you which IDs from your input list fail to  match 
            IDs in the database.]]></help>

      <suggest includeProjects="INIT"
               default="FILL"/>

      <suggest default="%%defaultGene%%"/>

    </datasetParam>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


    <stringParam name="stoxopforganism"
                 prompt="Organism"
                 visible="false"
                 default="Plasmo falciparum"
                 number="false">
      <help>You can select one or more organisms by checking the box next to the one(s) that you wish to use.</help>
      <suggest default="100"/>
      <regex>\d+</regex>
    </stringParam>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Universal, genomic and ORF BLAST -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <!--
     <flatVocabParam name="BlastAlgorithm2"
                     prompt="BLAST Program"
                     displayType="checkBox"
                     multiPick="false"
                     default="blastn"
                     queryRef="SharedVQ.BlastAlgorithm"
                     dependedParamRef="sharedParams.BlastDatabaseType">
                 <help>
                    <![CDATA[
                The Blast Program that will be executed: &#60;b&#62; blastp &#60;/b&#62;  compares an aminoacid query sequence against a protein sequence database;  &#60;b&#62; blastn  &#60;/b&#62; compares a nucleotide query sequence against a nucleotide sequence database; &#60;b&#62; blastx  &#60;/b&#62; compares the six-frame conceptual translation products of a nucleotide query sequence (both strands) against a protein sequence database;  &#60;b&#62;tblastn  &#60;/b&#62; compares a protein query sequence against a nucleotide sequence database dynamically translated in all six reading frames (both strands);  &#60;b&#62;tblastx  &#60;/b&#62;  compares the six-frame translations of a nucleotide query sequence against the six-frame translations of a nucleotide sequence database.
                    ]]>
                  </help>
         </flatVocabParam>

    -->
    <!--
           <flatVocabParam name="BlastDatabaseOrganism" excludeProjects="EuPathDB"
                         queryRef="SharedVQ.BlastOrganismFiles"
                         prompt="Target Organism"
                         displayType="treeBox"
                         multiPick="true"
                         suppressNode="true"
                         dependedParamRef="sharedParams.BlastDatabaseType"
                         >
              <noTranslation value="false" excludeProjects="EuPathDB" />
              <help>
                   Organism(s) from which the sequences in the BLAST database originated
              </help>
              <suggest includeProjects="ToxoDB"
                       default="Toxoplasma gondii ME49"/>
            </flatVocabParam>

           <flatVocabParam name="BlastDatabaseOrganism" includeProjects="EuPathDB"
                         queryRef="SharedVQ.BlastOrganismFiles"
                         prompt="Target Organism"
                         displayType="treeBox"
                         multiPick="true"
                         suppressNode="false"
                         dependedParamRef="sharedParams.BlastDatabaseType"
                         >
              <help>
                   Organism(s) from which the sequences in the BLAST database originated
              </help>
            </flatVocabParam>
    -->

    <flatVocabParam name="BlastDatabaseOrganism"
                    queryRef="SharedVQ.BlastOrganismFiles"
                    prompt="Target Organism"
                    displayType="treeBox"
                    multiPick="true"
                    suppressNode="true"
                    dependedParamRef="sharedParams.BlastDatabaseType"
    >
      <help>
        Select the Organism(s) (genomes) that you wish to query your Input Sequence against.
      </help>
      <propertyList name="organismProperties">
        <value>pruneNodesWithSingleExtendingChild</value>
        <value>highlightReferenceOrganisms</value>
        <value>showOnlyPreferredOrganisms</value>
      </propertyList>
    </flatVocabParam>





    <enumParam name="BlastAlgorithm"
               prompt="BLAST Program"
               displayType="checkBox"
               multiPick="false">

      <help><![CDATA[
            Indicate the BLAST Program that will be executed:<br>
            <b>blastp</b> compares an amino acid Input Sequence against a protein sequence database;<br>
		  <b>blastn</b> compares a nucleotide Input Sequence against a nucleotide sequence database;<br>
		  <b>blastx</b> compares the six-frame conceptual translation products of a nucleotide Input Sequence (both strands) against a protein sequence database;<br> 
		  <b>tblastn</b> compares a protein Input Sequence against a nucleotide sequence database dynamically translated in all six reading frames (both strands);<br> 
		  <b>tblastx</b> compares the six-frame translations of a nucleotide Input Sequence against the six-frame translations of a nucleotide sequence database.<br>]]>
      </help>
      <enumList>
        <enumValue>
          <term>blastn</term>
          <internal>blastn</internal>
        </enumValue>
        <enumValue>
          <term>blastp</term>
          <internal>blastp</internal>
        </enumValue>
        <enumValue>
          <term>blastx</term>
          <internal>blastx</internal>
        </enumValue>
        <enumValue>
          <term>tblastn</term>
          <internal>tblastn</internal>
        </enumValue>
        <enumValue>
          <term>tblastx</term>
          <internal>tblastx</internal>
        </enumValue>
      </enumList>
    </enumParam>

    <stringParam name="BlastJobDescription"
                 prompt="Job Description" number="false">
      <help>
        Give your job a short description.
      </help>
      <suggest default="My New Job" allowEmpty="true" />
    </stringParam>

    <flatVocabParam name="WordSize"
                    prompt="Word Size"
                    queryRef="SharedVQ.WordSize"
                    multiPick="false"
                    dependedParamRef="sharedParams.BlastAlgorithm">
      <help>
        <![CDATA[
BLAST is a heuristic that works by finding word-matches between the query and database sequences. One may think of this process as finding "hot-spots" that BLAST can then use to initiate extensions that might eventually lead to full-blown alignments. For nucleotide-nucleotide searches (i.e., "blastn") an exact match of the entire word is required before an extension is initiated, so that one normally regulates the sensitivity and speed of the search by increasing or decreasing the word-size. For other BLAST searches non-exact word matches are taken into account based upon the similarity between words. The amount of similarity can be varied.
                ]]>
      </help>
    </flatVocabParam>


    <flatVocabParam name="ScoringMatrix"
                    prompt="Scoring Matrix"
                    queryRef="SharedVQ.ScoringMatrix"
                    multiPick="false"
                    dependedParamRef="sharedParams.BlastAlgorithm">
      <help>
        <![CDATA[
BLAST uses a substitution matrix for any program that aligns residues. The program may align residues because both the query and database consist of proteins (e.g. BLASTP) or the program may align DNA translated to protein with protein (e.g. BLASTX). A key element in evaluating the quality of a pairwise sequence alignment is the "substitution matrix", which assigns a score for aligning any possible pair of residues. In general, different substitution matrices are tailored to detecting similarities among sequences that are diverged by differing degrees. A single matrix may nevertheless be reasonably efficient over a relatively broad range of evolutionary change. Experimentation has shown that the BLOSUM-62 matrix is among the best for detecting most weak protein similarities. For particularly long and weak alignments, the BLOSUM-45 matrix may prove superior. A detailed statistical theory for gapped alignments has not been developed, and the best gap costs to use with a given substitution matrix are determined empirically. Short alignments need to be relatively strong (i.e. have a higher percentage of matching residues) to rise above background noise. Such short but strong alignments are more easily detected using a matrix with a higher "relative entropy" than that of BLOSUM-62. In particular, short query sequences can only produce short alignments, and therefore database searches with short queries should use an appropriately tailored matrix. The BLOSUM series does not include any matrices with relative entropies suitable for the shortest queries, so the older PAM matrices may be used instead.
                ]]>
      </help>
    </flatVocabParam>

    <flatVocabParam name="MatchMismatchScore"
                    prompt="Match/Mismatch Scores"
                    queryRef="SharedVQ.MatchMismatchScore"
                    multiPick="false"
                    dependedParamRef="sharedParams.BlastAlgorithm">
      <help>
        <![CDATA[
Many nucleotide searches use a simple scoring system that consists of a "reward" for a match and a "penalty" for a mismatch. The (absolute) reward/penalty ratio should be increased as one looks at more divergent sequences. A ratio of 0.33 (1/-3) is appropriate for sequences that are about 99% conserved; a ratio of 0.5 (1/-2) is best for sequences that are 95% conserved; a ratio of about one (1/-1) is best for sequences that are 75% conserved.
                ]]>
      </help>
    </flatVocabParam>


    <flatVocabParam name="GapCosts"
                    prompt="Gap Costs (Open/Extension)"
                    queryRef="SharedVQ.GapCosts"
                    multiPick="false"
                    dependedParamRef="sharedParams.BlastAlgorithm,sharedParams.ScoringMatrix,sharedParams.MatchMismatchScore">
      <help>
        <![CDATA[
For each reward/penalty pair, a number of different gap costs are supported. A gap cost includes a value to open the gap and a value to extend the gap by a base. Following the convention of the command-line applications, these costs are listed as positive numbers here.
                ]]>
      </help>
    </flatVocabParam>

    <flatVocabParam name="CompAdjust"
                    prompt="Compositional adjustments"
                    queryRef="SharedVQ.CompAdjust"
                    multiPick="false"
                    dependedParamRef="sharedParams.BlastAlgorithm">
      <help>
        <![CDATA[
Amino acid substitution matrices may be adjusted in various ways to compensate for the amino acid compositions of the sequences being compared. The simplest adjustment is to scale all substitution scores by an analytically determined constant, while leaving the gap scores fixed; this procedure is called "composition-based statistics" (Schaffer et al., 2001). The resulting scaled scores yield more accurate E-values than standard, unscaled scores. A more sophisticated approach adjusts each score in a standard substitution matrix separately to compensate for the compositions of the two sequences being compared (Yu et al., 2003; Yu and Altschul, 2005; Altschul et al., 2005). Such "compositional score matrix adjustment" may be invoked only under certain specific conditions for which it has been empirically determined to be beneficial (Altschul et al., 2005); under all other conditions, composition-based statistics are used. Alternatively, compositional adjustment may be invoked universally.
                ]]>
      </help>
    </flatVocabParam>

    <flatVocabParam name="FilterLowComplex"
                    prompt="Low complexity regions"
                    queryRef="SharedVQ.FilterLowComplex"
                    multiPick="false"
                    dependedParamRef="sharedParams.BlastAlgorithm,sharedParams.CompAdjust">
      <help>
        <![CDATA[
This function mask off segments of the query sequence that have low compositional complexity, as determined by the SEG program of Wootton and Federhen (Computers and Chemistry, 1993) or, for BLASTN, by the DUST program of Tatusov and Lipman. Filtering can eliminate statistically significant but biologically uninteresting reports from the blast output (e.g., hits against common acidic-, basic- or proline-rich regions), leaving the more biologically interesting regions of the query sequence available for specific matching against database sequences.
Filtering is only applied to the query sequence (or its translation products), not to database sequences. Default filtering is DUST for BLASTN, SEG for other programs.
It is not unusual for nothing at all to be masked by SEG, when applied to sequences in SWISS-PROT or refseq, so filtering should not be expected to always yield an effect. Furthermore, in some cases, sequences are masked in their entirety, indicating that the statistical significance of any matches reported against the unfiltered query sequence should be suspect. This will also lead to search error when default setting is used.
                ]]>
      </help>
    </flatVocabParam>

    <flatVocabParam name="SoftMask"
                    prompt="Mask for lookup table"
                    queryRef="SharedVQ.SoftMask"
                    multiPick="false"
                    dependedParamRef="sharedParams.BlastAlgorithm">
      <help>
        <![CDATA[
BLAST searches consist of two phases, finding hits based upon a lookup table and then extending them. This option masks only for purposes of constructing the lookup table used by BLAST so that no hits are found based upon low-complexity sequence or repeats (if repeat filter is checked). The BLAST extensions are performed without masking and so they can be extended through low-complexity sequence.
                ]]>
      </help>
    </flatVocabParam>

    <flatVocabParam name="LowerCaseMask"
                    prompt="Mask lower case letters"
                    queryRef="SharedVQ.LowerCaseMask"
                    multiPick="false">
      <help>
        <![CDATA[
With this option selected you can cut and paste a FASTA sequence in upper case characters and denote areas you would like filtered with lower case. This allows you to customize what is filtered from the sequence during the comparison to the BLAST databases.
                ]]>
      </help>
    </flatVocabParam>

    <enumParam name="MultiBlastDatabaseType"
               prompt="Target Data Type"
               displayType="checkBox"
               quote="false"
               multiPick="false">
      <help>
        Select the type of sequence that your Input Sequence will be BLASTed against.
      </help>
      <enumList>
        <enumValue>
          <display>Transcripts</display>
          <term>AnnotatedTranscripts</term>
          <internal>AnnotatedTranscripts</internal>
        </enumValue>
        <enumValue>
          <display>Proteins</display>
          <term>AnnotatedProteins</term>
          <internal>AnnotatedProteins</internal>
        </enumValue>
        <enumValue>
          <display>Genome</display>
          <term>Genome</term>
          <internal>Genome</internal>
        </enumValue>
        <enumValue excludeProjects="HostDB">
          <display>ESTs</display>
          <term>ESTs</term>
          <internal>ESTs</internal>
        </enumValue>
        <enumValue excludeProjects="HostDB,VectorBase">
          <display>PopSet</display>
          <term>PopSet</term>
          <internal>PopSet</internal>
        </enumValue>
      </enumList>
    </enumParam>

    <enumParam name="BlastDatabaseType"
               prompt="Target Data Type"
               displayType="checkBox"
               quote="false"
               multiPick="false">
      <help>
        Select the type of sequence that your Input Sequence will be BLASTed against.
      </help>
      <enumList>
        <enumValue>
          <term>Transcripts</term>
          <internal>AnnotatedTranscripts</internal>
        </enumValue>
        <enumValue>
          <term>Proteins</term>
          <internal>AnnotatedProteins</internal>
        </enumValue>
        <enumValue>
          <term>Genome</term>
          <internal>Genome</internal>
        </enumValue>
        <enumValue excludeProjects="HostDB">
          <term>EST</term>
          <internal>ESTs</internal>
        </enumValue>
        <!--enumValue excludeProjects="HostDB">
          <term>ORF</term>
          <internal>ORFs_AA</internal>
        </enumValue-->
        <enumValue excludeProjects="HostDB,VectorBase">
          <term>PopSet</term>
          <internal>PopSet</internal>
        </enumValue>

      </enumList>
    </enumParam>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Jan 2015: we do not know why this limitation 31K. 
         - We suspect is a browser limitation but old. 
         - Could be also a GET limitation though we use POST...
         - we may want to limit the size to limit execution time
         We will wait til users ask for larger size.
         Apache limitation is 2MB, in question description. But will remove so the search page does not show inconsistent messages.
     -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
     <stringParam name="BlastQuerySequence"
                  prompt="Input Sequence"
                  length="31000"
                  number="false"
                  multiLine="true">
       <!--  Dec 2022: ncbi blast allows defline starting with >> but we dont..
             we think with the validation gappening before running a blast this regex is not needed.
       <regex>
         <![CDATA[^(?!(.*>.*>.*)$).*$]]>
       </regex>
       -->
       <noTranslation value="true"/>
       <help>
         Paste your Input Sequence (up to 31K bps) in the text box.  Only one
         Input Sequence can be entered per search.  If more than one is entered,
         an error message will mention that your input sequence parameter does
         not match a specific regular expression.
       </help>
       <suggest default=""/>
     </stringParam>

    <enumParam name="-filter"
               id="-filter"
               prompt="Low complexity filter">

      <help>
        If this filter is set to yes, you will omit results which contain repetitive and low complexity sequence.
      </help>
      <enumList>
        <enumValue>
          <term>yes</term>
          <internal>yes</internal>
        </enumValue>
        <enumValue default="true">
          <term>no</term>
          <internal>no</internal>
        </enumValue>
      </enumList>
    </enumParam>

    <stringParam name="-e"
                 prompt="Expectation value" number="true">
      <help>Expected number of hits with at least this score. The lower the e- value the more significant the hit.</help>
      <suggest default="10"/>
    </stringParam>

    <stringParam name="ExpectationValue"
                 prompt="Expectation value" number="true">
      <help>Expected number of hits with at least this score. The lower the e- value the more significant the hit.</help>
      <suggest default="10"/>
    </stringParam>

    <!--
             <stringParam name="-v"
                          prompt="Maximum descriptions (V)" number="true">
                 <help>Number of one-line descriptions to show</help>
                 <suggest default="50"/>
               <regex>\d+</regex>
             </stringParam>

             <stringParam name="-b"
                          prompt="Maximum alignments (B)" number="true">
                 <help>Number of alignments to show</help>
                 <suggest default="50"/>
               <regex>\d+</regex>
             </stringParam>
    -->

    <stringParam name="-b"
                 prompt="Maximum descriptions/alignments (V=B)" number="true">
      <help>Number of descriptions/alignments to show</help>
      <suggest default="50"/>
      <regex>\d+</regex>
    </stringParam>
    <!--
             <stringParam name="NumQueryResults"
                          prompt="Maximum descriptions/alignments" number="true" length="4">
                 <help>Maximum number of descriptions/alignments to show</help>
                 <suggest default="50"/>
               <regex>\d+</regex>
             </stringParam>
    -->
    <numberParam name="NumQueryResults"
                 prompt="Max Target Sequences" integer="true" min="1" max="5000">
      <help>Maximum number of Hits returned</help>
      <suggest default="100"/>

    </numberParam>


    <stringParam name="MaxMatchesQueryRange"
                 prompt="Max matches in query range" number="true">
      <help>Maximum number of HSPs (alignments) to keep for any single query-subject pair. The HSPs shown will be the best as judged by expect value. This number should be an integer that is one or greater. If this option is not set, BLAST shows all HSPs meeting the expect value criteria. Setting it to one will show only the best HSP for every query-subject pair</help>
      <suggest default="0"/>
      <regex>\d+</regex>
    </stringParam>


    <stringParam name="BlastRecordClass" visible="false"
                 prompt="Record type" number="false">
      <noTranslation value="true" />
      <help>The record type returned by blast</help>
    </stringParam>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <enumParam name="chromosome_telomere"
               prompt="Chromosome"
               multiPick="true"
               includeProjects="PlasmoDB,EuPathDB,UniDB">
      <noTranslation value="true" includeProjects="EuPathDB" />
      <enumList>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 1</term>
          <internal>Pf3D7_01_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 2</term>
          <internal>Pf3D7_02_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 3</term>
          <internal>Pf3D7_03_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 4</term>
          <internal>Pf3D7_04_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 5</term>
          <internal>Pf3D7_05_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 6</term>
          <internal>Pf3D7_06_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 7</term>
          <internal>Pf3D7_07_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 8</term>
          <internal>Pf3D7_08_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 9</term>
          <internal>Pf3D7_09_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 10</term>
          <internal>Pf3D7_10_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 11</term>
          <internal>Pf3D7_11_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 12</term>
          <internal>Pf3D7_12_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 13</term>
          <internal>Pf3D7_13_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 14</term>
          <internal>Pf3D7_14_v3</internal>
        </enumValue>
      </enumList>
    </enumParam>



    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!--  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <enumParam name="chromosome"
               prompt="Chromosome"
               multiPick="true"
               includeProjects="PlasmoDB,ToxoDB,EuPathDB,UniDB">
      <enumList>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 1</term>
          <internal>Pf3D7_01_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 2</term>
          <internal>Pf3D7_02_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 3</term>
          <internal>Pf3D7_03_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 4</term>
          <internal>Pf3D7_04_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 5</term>
          <internal>Pf3D7_05_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 6</term>
          <internal>Pf3D7_06_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 7</term>
          <internal>Pf3D7_07_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 8</term>
          <internal>Pf3D7_08_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 9</term>
          <internal>Pf3D7_09_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 10</term>
          <internal>Pf3D7_10_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 11</term>
          <internal>Pf3D7_11_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 12</term>
          <internal>Pf3D7_12_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 13</term>
          <internal>Pf3D7_13_v3</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB,UniDB">
          <term>P.f. chromosome 14</term>
          <internal>Pf3D7_14_v3</internal>
        </enumValue>


        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome Ia</term>
          <internal>TGME49_chrIa</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome Ib</term>
          <internal>TGME49_chrIb</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome II</term>
          <internal>TGME49_chrII</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome III</term>
          <internal>TGME49_chrIII</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome IV</term>
          <internal>TGME49_chrIV</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome V</term>
          <internal>TGME49_chrV</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome VI</term>
          <internal>TGME49_chrVI</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome VIIa</term>
          <internal>TGME49_chrVIIa</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome VIIb</term>
          <internal>TGME49_chrVIIb</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome VIII</term>
          <internal>TGME49_chrVIII</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome IX</term>
          <internal>TGME49_chrIX</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome X</term>
          <internal>TGME49_chrX</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome XI</term>
          <internal>TGME49_chrXI</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB,UniDB">
          <term>T. gondii ME49 chromosome XII</term>
          <internal>TGME49_chrXII</internal>
        </enumValue>
      </enumList>
    </enumParam>


    <!-- the only difference between these two is the quote = true on component sites   -->
    <flatVocabParam name="chromosomeOptional" includeProjects="EuPathDB"
                    prompt="Chromosome"
                    queryRef="SharedVQ.ChromosomeOrderNum"
                    multiPick="false"
                    dependedParamRef="organismParams.organismSinglePick">
      <help>
        <![CDATA[
                Select chromosome for a selected organism or enter genomic sequence ID. If you provide both you will get the union of both result sets.
                ]]>
      </help>
    </flatVocabParam>

    <flatVocabParam name="chromosomeOptional" excludeProjects="SchistoDB,EuPathDB"
                    prompt="Chromosome"
                    queryRef="SharedVQ.ChromosomeOrderNum"
                    multiPick="false"
                    quote="true"
                    dependedParamRef="organismParams.organismSinglePick">
      <help>
        <![CDATA[
                Select chromosome(s)
                ]]>
      </help>
    </flatVocabParam>

    <flatVocabParam name="centromere_chromosome" includeProjects="PlasmoDB,ToxoDB,TriTrypDB,EuPathDB,UniDB"
                    queryRef="SharedVQ.CentromereChromosome"
                    prompt="Chromosome"
                    multiPick="true"
                    dependedParamRef="organismParams.org_with_centromere_genes">
      <help>Choose the Chromosome(s) that you wish to query. This list includes chromosomes that have annotated centromeres.
        Centromeres may not be annotated for every chromosome.</help>
    </flatVocabParam>

    <flatVocabParam name="telomere_chromosomes"
                    includeProjects="EuPathDB,CryptoDB,FungiDB,GiardiaDB,HostDB,MicrosporidiaDB,PiroplasmaDB,PlasmoDB,ToxoDB,TriTrypDB,VectorBase,UniDB"
                    queryRef="SharedVQ.TelomereChromosomes"
                    prompt="Chromosome"
                    multiPick="true"
                    dependedParamRef="organismParams.organismSinglePick">
      <help>Choose the Chromosome(s) you wish to query. This search uses the start and end positions of chromosomes as the location of telomeres.</help>
    </flatVocabParam>


    <flatVocabParam name="pf_seqid" includeProjects="PlasmoDB,EuPathDB,UniDB"
                    queryRef="SharedVQ.PfSeqId"
                    prompt="Chromosome"
                    multiPick="false">
      <help>Chromosome</help>
    </flatVocabParam>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Sequence Id -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <enumParam name="sequenceIdList"
               displayType="typeAhead"
               multiPick="true"
               prompt="Genomic sequence ID">

      <help>
        A dummy param to allow searching for genes by multiple sequence identifiers, only used by GeneDumpQuestions.GenesByLocations.
      </help>
      <enumList>
        <enumValue> <!-- only here so the model validates -->
          <term>dummy value</term>
          <internal>dummy value</internal>
        </enumValue>
      </enumList>
    </enumParam>

     <stringParam name="sequenceId"
             prompt="Genomic sequence ID"   number="false"  length = "100">

      <help includeProjects="AmoebaDB,CryptoDB,EuPathDB,GiardiaDB,HostDB,MicrosporidiaDB,PiroplasmaDB,PlasmoDB,ToxoDB,TrichDB,TriTrypDB,UniDB,VectorBase">
        <![CDATA[
            Enter an identifier for a genomic contig. Genomic Sequence IDs correspond to the 
            accession numbers supplied by the sequencing centers.]]>
      </help>
      <!--
               <suggest includeProjects="EuPathDB"
                   allowEmpty="true"/>

              <help includeProjects="PiroplasmaDB">
                 Enter an identifier for a genomic sequence. The IDs correspond to the accession numbers in the GenBank records supplied by the sequencing centers. Wild cards are permitted in most queries, i.e. use AAXT* to ask for all contigs/scaffolds that have identifiers that begin with AAXT. By Location queries do not allow wildcards and only allow a single ID to be used at a time.
               </help>
              <help includeProjects="TriTrypDB">
                 Enter an identifier for a genomic sequence. The IDs correspond to the accession numbers in the GenBank records supplied by the sequencing centers. Wild cards are permitted in most queries, i.e. use LbrM01* to ask for all contigs that have identifiers that begin with LbrM01. By Location queries do not allow wildcards and only allow a single ID to be used at a time.
               </help>
               <help includeProjects="TrichDB">
                 Enter an identifier for a genomic sequence. The IDs correspond to the accession numbers in the GenBank records supplied by the sequencing centers. Wild cards are permitted in most queries, i.e. use DS11* to ask for all contigs that have identifiers that begin with DS11. By Location queries do not allow wildcards and only allow a single ID to be used at a time.
               </help>
               <help includeProjects="GiardiaDB">
                 Enter an identifier for a genomic sequence. The IDs correspond to the accession numbers in the GenBank records supplied by the sequencing centers. Wild cards are permitted in most queries, i.e. use AACB0200* to ask for all contigs/scaffolds that have identifiers that begin with AACB0200. By Location queries do not allow wildcards and only allow a single ID to be used at a time.
               </help>
               <help includeProjects="CryptoDB">
                   Enter an identifier for a genomic contig. The IDs
                   correspond to the accession numbers in the GenBank records
                   supplied by the sequencing centers. Contig ID's from
                   &lt;i&gt; C. parvum &lt;/i&gt; whole genome sequencing
                   project begin with 'AAEE' and contig ID's for &lt;i&gt;
                   C. hominis &lt;/i&gt; begin with 'AAEL'. The &lt;i&gt;
                   C. parvum &lt;/i&gt; Chromosome 6 independently sequenced
                   at MRC-LMB  before the whole genome project was completed
                   is 'BX526834 '. Wild cards are permitted  in most queries,
                   i.e. use AAEE* to ask for all &lt;i&gt; C. parvum
                   &lt;/i&gt; contigs. By Location queries do not allow wildcards and only allow a single ID to be used at a time.
               </help>
               <help includeProjects="PlasmoDB">
                   Sequence IDs for &#60;i&#62; P. falciparum &#60;/i&#62; chromosomes are 'Pf3D7_01' through 'Pf3D7_14.'  Sequence IDs for &#60;i&#62; P. yoelii &#60;/i&#62; sequences begin with 'AABL'.  Sequence IDs for &#60;i&#62; P. vivax &#60;/i&#62; chromosomes begin with 'CM', while the contigs begin with 'AAK' or 'AY'. Sequence IDs of &#60;i&#62; P. chabaudi &#60;/i&#62; chromosomes start with 'chab', while the contigs begin with 'contig'. &#60;i&#62;P.knowlesi &#60;/i&#62; chromosome sequences start with 'PK' or 'chr'. &#60;i&#62;P. berghei &#60;/i&#62; sequences start with 'PB',  &#60;i&#62;P.reichenowi &#60;/i&#62; sequence start with 'Pr', while those of &#60;i&#62;P.gallinaceum &#60;/i&#62; start with 'Pg'. Wild cards are permitted  in most queries, i.e. use 'AABL*' to ask for all &#60;i&#62; P. yoelii &#60;/i&#62; sequences. Genes By Chromosomal Location does not allow wildcards.
               </help>
       -->
      <suggest includeProjects="UniDB"
               default="(Example: Pf3D7_04_v3,AAEL005211)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="PiroplasmaDB"
               default="(Example: AAXT01000005,CR940349)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="CryptoDB,EuPathDB"
               default="(Example: CM000436)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="ToxoDB"
               default="(Example: TGME49_chrIa)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="PlasmoDB"
               default="(Example: Pf3D7_04_v3)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="GiardiaDB"
               default="(Example: GLCHR05)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="TrichDB"
               default="DS113177"/>
      <suggest includeProjects="TriTrypDB"
               default="(Example: Tb927_02_v5.1)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="AmoebaDB"
               default="(Example: DS548370)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="MicrosporidiaDB"
               default="(Example: ECIII_CH04)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="HostDB"
               default="(Example: chr22)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="FungiDB"
               default="(Example: Chr4_A_fumigatus_Af293)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="SchistoDB"
               default="(Example: KL250487,KL252523)"
               allowEmpty="true"
               emptyValue="No Match"/>
      <suggest includeProjects="VectorBase"
               default="(Example: AAEL005211,aepiEpiroticus2_KB671468)"
               allowEmpty="true"
               emptyValue="No Match"/>
    </stringParam>

    <stringParam name="start_point"
                 prompt="Start at"
                 number="true">
      <help>Enter the coordinate of the nucleotide that begins the genomic region you wish to query.</help>
      <suggest default="1"/>
    </stringParam>

    <stringParam name="end_point"
                 prompt="End Location (0 = end)"
                 number="true">
      <help> Enter the coordinate of the last nucleotide in the genomic region that you wish to query. (0 = end)</help>

      <suggest default="0"/>
    </stringParam>

    <stringParam name="end_point_segment"
                 prompt="End Location"
                 number="true">
      <help>Enter the coordinate of the last nucleotide in the genomic region that you wish to query. (0 = end)</help>
      <suggest default="100"/>
    </stringParam>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- SNPs -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


    <flatVocabParam name="chromosomeOptionalForNgsSnps" includeProjects="PiroplasmaDB,GiardiaDB,PlasmoDB,ToxoDB,TriTrypDB,CryptoDB,AmoebaDB,FungiDB,MicrosporidiaDB,UniDB"
                    prompt="Chromosome"
                    queryRef="SharedVQ.ChromosomeForNgsSnps"
                    multiPick="false"
                    quote="true"
                    dependedParamRef="organismParams.organismSinglePick">
      <help>
        <![CDATA[
                Select chromosome.
                ]]>
      </help>
    </flatVocabParam>

    <!-- ======================================================== -->
    <!-- ======================================================== -->
    <!-- ======= All SNP params below here might be obsolete  === -->
    <!-- ======================================================== -->
    <!-- ======================================================== -->

<!--
    <flatVocabParam name="snp_strain_a"
                    queryRef="SharedVQ.SnpChipStrainGene"
                    prompt="Reference"
                    multiPick="false"
                    dependedParamRef="organismParams.organism"
                    includeProjects="PlasmoDB,EuPathDB,UniDB">
      <noTranslation value="true" includeProjects="EuPathDB" />

      <suggest includeProjects="PlasmoDB,UniDB" default="7G8"/>

      <help>
        Choose a reference from the list of strains.
      </help>
    </flatVocabParam>

    <flatVocabParam name="snp_strain_m"
                    queryRef="SharedVQ.SnpChipStrainGene"
                    prompt="Comparator"
                    multiPick="true"
                    dependedParamRef="organismParams.organism"
                    includeProjects="PlasmoDB,EuPathDB,UniDB">
      <noTranslation value="true" includeProjects="EuPathDB" />
      <help>
        Choose comparators from the list of strains.
      </help>
    </flatVocabParam>
-->

    <flatVocabParam name="htsSnp_strain_a"
                    queryRef="SharedVQ.htsSnpStrainAA"
                    prompt="Reference"
                    multiPick="false"
                    dependedParamRef="organismParams.organism"
                    excludeProjects="HostDB,SchistoDB,MicrosporidiaDB">
      <noTranslation value="true" includeProjects="EuPathDB" />

      <suggest includeProjects="PlasmoDB" default="3D7"/>
      <suggest includeProjects="AmoebaDB" default="HK9"/>
      <suggest includeProjects="CryptoDB" default="TU114"/>
      <suggest includeProjects="FungiDB" default="AF293B"/>

      <help>
        Choose a reference from the list of strains.
      </help>
    </flatVocabParam>

    <flatVocabParam name="htsSnp_strains"
                    queryRef="SharedVQ.htsSnpStrainAA"
                    prompt="Strains"
                    multiPick="true"
                    quote="true"
                    displayType="checkBox"
                    dependedParamRef="organismParams.organism"
                    excludeProjects="HostDB,SchistoDB,MicrosporidiaDB">
      <noTranslation value="true" includeProjects="EuPathDB" />

      <suggest includeProjects="PlasmoDB" default="3D7"/>
      <suggest includeProjects="AmoebaDB" default="HK9"/>
      <suggest includeProjects="CryptoDB" default="TU114"/>

      <help>Please select at least two strains to find polymorphisms in</help>

    </flatVocabParam>


    <flatVocabParam name="metadata_for_graph"
                    queryRef="SharedVQ.profileOntologyTerm"
                    prompt="Metadata category to color graph by"
                    multiPick="false"
                    quote="true"
                    dependedParamRef="geneParams.profileset_generic"
                    includeProjects="PlasmoDB,EuPathDB,UniDB">
      <noTranslation value="true" includeProjects="EuPathDB" />
    </flatVocabParam>

    <filterParam name="ngsSnp_strain_meta"
                 metadataQueryRef="SnpVQ.SamplesMetadataByOrganismWiz"
                 backgroundQueryRef="SnpVQ.SamplesMetadataByOrganismWiz"
                 ontologyQueryRef="SnpVQ.OntologyByOrganismWiz"
                 prompt="Isolates"
                 dependedParamRef="organismParams.organism">
      <help>
        Isolates are categorized based on
        metadata.  Define your group by first choosing a metadata
        category on the left and then a characteristic on the right. For example, to
        find SNPs within a group of isolates from a single country, choose the Country category on the left and then
        a choose particular country on the right. For more see Description below the Get Answer button.
      </help>
    </filterParam>

    <!-- disused
           <filterParam name="snpchip_strain_meta" includeProjects="PlasmoDB,EuPathDB"
                          metadataQueryRef="SharedVQ.SnpChipStrainsMetadata"
                          backgroundQueryRef="SharedVQ.SnpChipStrainsMetadata"
                          ontologyQueryRef="SharedVQ.SnpChipStrainsMetadataSpec"
                          prompt="Isolates"
                          dependedParamRef="organismParams.organismSinglePick,sharedParams.snp_assay_type">
             <help>
                  Select isolates to compare using associated meta data.
             </help>
           </filterParam>

           <filterParam name="snpchip_strain_meta_a" includeProjects="PlasmoDB,EuPathDB"
                          metadataQueryRef="SharedVQ.SnpChipStrainsMetadata"
                          backgroundQueryRef="SharedVQ.SnpChipStrainsMetadata"
                          ontologyQueryRef="SharedVQ.SnpChipStrainsMetadataSpec"
                          prompt="Isolates"
                          dependedParamRef="organismParams.organismSinglePick,sharedParams.snp_assay_type">
             <help>
               Select characteristics to filter the isolates you want to include for set A .... for example, choose Country in the left panel and select the country or countries from which you want to choose isolates for SNP detection.
             </help>
           </filterParam>

           <filterParam name="snpchip_strain_meta_b" includeProjects="PlasmoDB,EuPathDB"
                          metadataQueryRef="SharedVQ.SnpChipStrainsMetadata"
                          backgroundQueryRef="SharedVQ.SnpChipStrainsMetadata"
                          ontologyQueryRef="SharedVQ.SnpChipStrainsMetadataSpec"
                          prompt="Isolates"
                          dependedParamRef="organismParams.organismSinglePick,sharedParams.snp_assay_type">
             <help>
               Select characteristics to filter the isolates you want to include for set B .... for example, choose Country in the left panel and select the country or countries from which you want to choose isolates for SNP detection.
             </help>
           </filterParam>
    -->


    <filterParam name="ngsSnp_strain_meta_a" includeProjects="PiroplasmaDB,GiardiaDB,TriTrypDB,AmoebaDB,PlasmoDB,CryptoDB,ToxoDB,FungiDB,MicrosporidiaDB,EuPathDB,UniDB"
                 metadataQueryRef="SnpVQ.SamplesMetadataByOrganism"
                 backgroundQueryRef="SnpVQ.SamplesMetadataByOrganism"
                 ontologyQueryRef="SnpVQ.MetadataSpecByOrganism"
                 prompt="Reference Samples"
                 dependedParamRef="organismParams.organismSinglePick">
      <help>

        Isolates are categorized based on
        metadata.  Define your group of Set A Isolates by first choosing a metadata
        category on the left and then a characteristic on the right. For example, to
        choose Set A Isolates from a single country, first
        choose the Country category on the left and then
        a choose particular country on the right. For more see
        Description below the Get Answer button.

      </help>
    </filterParam>

    <filterParam name="ngsSnp_strain_meta_a_wiz" includeProjects="PlasmoDB,UniDB"
                 metadataQueryRef="SnpVQ.SamplesMetadataByOrganismWiz"
                 backgroundQueryRef="SnpVQ.SamplesMetadataByOrganismWiz"
                 ontologyQueryRef="SnpVQ.OntologyByOrganismWiz"
                 prompt="Reference Samples"
                 trimMetadataTerms="false">
      <help>

        Isolates are categorized based on
        metadata.  Define your group of Set A Isolates by first choosing a metadata
        category on the left and then a characteristic on the right. For example, to
        choose Set A Isolates from a single country, first
        choose the Country category on the left and then
        a choose particular country on the right. For more see
        Description below the Get Answer button.

      </help>
    </filterParam>

    <filterParam name="ngsSnp_strain_meta_m_wiz" includeProjects="PlasmoDB,UniDB"
                 metadataQueryRef="SnpVQ.SamplesMetadataByOrganismWiz"
                 backgroundQueryRef="SnpVQ.SamplesMetadataByOrganismWiz"
                 ontologyQueryRef="SnpVQ.OntologyByOrganismWiz"
                 prompt="Reference Samples"
                 trimMetadataTerms="false">
      <help>

        Isolates are categorized based on
        metadata.  Define your group of Set B Isolates by first choosing a metadata
        category on the left and then a characteristic on the right. For example, to
        choose Set B Isolates from a single country, first
        choose the Country category on the left and then
        a choose particular country on the right. For more see
        Description below the Get Answer button.

      </help>
    </filterParam>

    <filterParam name="ngsSnp_strain_meta_m" includeProjects="PiroplasmaDB,GiardiaDB,TriTrypDB,AmoebaDB,PlasmoDB,CryptoDB,ToxoDB,FungiDB,MicrosporidiaDB,EuPathDB,UniDB"
                 metadataQueryRef="SnpVQ.SamplesMetadataByOrganism"
                 backgroundQueryRef="SnpVQ.SamplesMetadataByOrganism"
                 ontologyQueryRef="SnpVQ.MetadataSpecByOrganism"
                 prompt="Reference Samples"
                 dependedParamRef="organismParams.organismSinglePick">
      <help>

        Isolates are categorized based on
        metadata.  Define your Set B Isolates by first choosing a metadata
        category on the left and then a characteristic on the right. For example, to
        choose the Set B Isolates from a single country, first
        choose the Country category on the left and then
        a choose particular country on the right. For more see
        Description below the Get Answer button.

      </help>
      <!-- <suggest selectMode="all" /> -->
    </filterParam>

    <stringParam name="hts_snps_coverage"
                 prompt="Number of aligned reads >="
                 number="true">
      <help>
        Enter a minimum number of aligned reads at the SNP position before considering
        this a SNP.  Note that 5 reads is the absolute minimum.
      </help>
      <suggest default="5"
               allowEmpty="true" emptyValue="5" />
    </stringParam>

    <stringParam name="hts_snps_allele_freq"
                 prompt="Allele frequency >="
                 number="true">
      <help>
        Enter a minimum percentage of reads that match this allele before considering
        this a SNP.  Note: the minimum for haploid genomes is 50% and for diploid genomes
        the minimum is 34%.
      </help>
      <suggest default="80"
               allowEmpty="true" emptyValue="50" />
    </stringParam>

    <stringParam name="hts_snps_pvalue"
                 prompt="P value &lt;="
                 number="true">
      <help>
        Enter a maximum P value to allow for this allele before considering this a SNP.  P values are generated by VarScan which was used to call SNPs.
      </help>
      <suggest default="0.01"
               allowEmpty="true" emptyValue="0.01" />
    </stringParam>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Motif search -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <stringParam name="motif_expression"
                 prompt="Pattern" number="false">
      <help><![CDATA[Enter a Perl regular expression describing the desired motif.<br><br>
		   Protein example: 'CC6+RK' searches for two consecutive cysteine residues followed by a stretch of hydrophobic amino acids followed by the amino acids arginine and lysine.<br><br>
		     DNA example: 'GG[AT]CC' searches for two consecutive guanines, followed by an adenine or a threonine, followed by 2 consecutive cytosines.]]></help>
      <suggest default="CC6+RK"/>
      <noTranslation value="true" excludeProjects="EuPathDB" />
    </stringParam>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- mass spec -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <stringParam name="min_seq_coverage"
                 prompt="Minimum Percent Sequence Coverage"
                 number="true">
      <help>Use this parameter to set a minimum amount of (amino acid) sequence coverage for the mass spec-predicted peptides. For example, setting this parameter to 10 will return only those genes whose proteins are at least 10% covered by mass spec.-predicted peptides. In the current dataset the average percent coverage is about 9%, and the maximum is about 90%. Note that even if this parameter is set to 0%, only genes with at least some mass spec. predictions for the specified stage will be returned. In other words, it never returns proteins with 0% coverage, only those with strictly > 0%.</help>
      <suggest default="0"/>
      <regex>\d+(\.\d+)?</regex>
      <noTranslation value="true"  excludeProjects="EuPathDB"/>
    </stringParam>

    <stringParam name="min_span_count"
                 prompt="Minimum Number of Spans"
                 number="true">
      <help>Use this parameter to set a minimum for the number of nonoverlapping regions (spans) that must be found in the mass spec. data for a gene (and the specified lifecycle stage). Only genes with at least this many spans are returned</help>
      <suggest default="2"/>
      <regex>\d+</regex>
    </stringParam>

    <stringParam name="min_sequence_count"
                 prompt="Minimum Number of Unique Peptide Sequences"
                 number="false">
      <help><![CDATA[
Use this parameter to set a minimum for the number of unique peptide sequences that must map to a gene before it is returned by the search. One mapped peptide is considered evidence of protein expression. The greater the number of peptides that map to a gene, the greater the confidence that the protein product is present.
           ]]>
      </help>
      <suggest  default="1"/>
      <regex>\d+</regex>
    </stringParam>

    <enumParam name="sample_vs_all"
               prompt="Apply min # peptide sequences / sample OR across samples"
               multiPick="false"
               quote="true">
      <noTranslation value="true" includeProjects="EuPathDB" />
      <help>
        <![CDATA[
This parameter allows you to apply the minimum number of peptides to each selected sample or across all selected samples.  Choose "Per Sample" to require that each selected sample has your minimum number of unique peptides. Choose "Across Selected Samples" to allow the minimum number of unique peptides to be calculated as the sum from all unique peptides across selected samples. Choosing "Per Sample" is more stringent than choosing "Across Selected Samples" and therefore returns fewer genes with protein evidence.
           ]]>
      </help>
      <enumList>
        <enumValue>
          <term>Per Sample</term>
          <internal>sample</internal>
        </enumValue>
        <enumValue>
          <term>Across Selected Samples</term>
          <internal>all</internal>
        </enumValue>
      </enumList>
    </enumParam>

    <stringParam name="min_spectrum_count"
                 prompt="Minimum number of spectra per gene (applied per sample)"
                 number="false">
      <visibleHelp>
        Warning: We did NOT receive spectral counts for many experiments.  For those experiments where spectral counts are not provided, the spectral count is set to the number of peptides mapping to a gene. Thus, increasing this parameter value beyond the number of peptides may remove evidence for samples that simply didn't provide spectral counts.
      </visibleHelp>
      <help>
        Use this parameter to set a minimum for the number of spectra that must support a gene before it is returned by the search. This value reflects the sum of mass spectra for all peptides that map to a gene from a selected sample.  The parameter can be considered a rough measure of protein abundance within a particular sample.
      </help>
      <suggest default="1"/>
      <regex>\d+</regex>
    </stringParam>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- History -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--
    <answerParam name="isolateHistoryIdA" includeProjects="PlasmoDB,EuPathDB,UniDB"
                 prompt="Isolate History ID for Set A">
      <help>The number in the left column of My Query History</help>
      <recordClass ref="PopsetRecordClasses.PopsetRecordClass" />
    </answerParam>

    <answerParam name="isolateHistoryIdB" includeProjects="PlasmoDB,EuPathDB,UniDB"
                 prompt="Isolate History ID for Set B">
      <help>The number in the left column of My Query History</help>
      <recordClass ref="PopsetRecordClasses.PopsetRecordClass" />
    </answerParam>
-->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- History -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <enumParam name="chromosome_with_organelles"
               prompt="Genomic Sequence"
               multiPick="false"
               excludeProjects="EuPathDB,GiardiaDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,FungiDB,HostDB,SchistoDB,UniDB,VectorBase,InitDB,PiroplasmaDB,MicrobiomeDB">
      <help>
        Results will be sorted ascending or descending orde
      </help>
      <enumList includeProjects="PlasmoDB,UniDB">
        <enumValue>
          <term>chromosome 1</term>
          <internal>'Pf3D7_01_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 2</term>
          <internal>'Pf3D7_02_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 3</term>
          <internal>'Pf3D7_03_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 4</term>
          <internal>'Pf3D7_04_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 5</term>
          <internal>'Pf3D7_05_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 6</term>
          <internal>'Pf3D7_06_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 7</term>
          <internal>'Pf3D7_07_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 8</term>
          <internal>'Pf3D7_08_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 9</term>
          <internal>'Pf3D7_09_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 10</term>
          <internal>'Pf3D7_10_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 11</term>
          <internal>'Pf3D7_11_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 12</term>
          <internal>'Pf3D7_12_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 13</term>
          <internal>'Pf3D7_13_v3'</internal>
        </enumValue>
        <enumValue>
          <term>chromosome 14</term>
          <internal>'Pf3D7_14_v3'</internal>
        </enumValue>
        <enumValue>
          <term>mitochondrial genome</term>
          <internal>'AJ276844'</internal>
        </enumValue>
        <enumValue>
          <term>plastid IR-A</term>
          <internal>'X95275'</internal>
        </enumValue>
        <enumValue>
          <term>plastid IR-B</term>
          <internal>'X95276'</internal>
        </enumValue>
      </enumList>

      <enumList includeProjects="ToxoDB,UniDB">
        <enumValue>
          <term>T.g. Ia</term>
          <internal>Ia</internal>
        </enumValue>
        <enumValue>
          <term>T.g. Ib</term>
          <internal>Ib</internal>
        </enumValue>
        <enumValue>
          <term>T.g. II</term>
          <internal>II</internal>
        </enumValue>
        <enumValue>
          <term>T.g. III</term>
          <internal>III</internal>
        </enumValue>
        <enumValue>
          <term>T.g. IV</term>
          <internal>IV</internal>
        </enumValue>
        <enumValue>
          <term>V</term>
          <internal>V</internal>
        </enumValue>
        <enumValue>
          <term>VI</term>
          <internal>VI</internal>
        </enumValue>
        <enumValue>
          <term>VIIa</term>
          <internal>VIIa</internal>
        </enumValue>
        <enumValue>
          <term>VIIb</term>
          <internal>VIIb</internal>
        </enumValue>
        <enumValue>
          <term>VIII</term>
          <internal>VIII</internal>
        </enumValue>
        <enumValue>
          <term>T.g. IX</term>
          <internal>IX</internal>
        </enumValue>
        <enumValue>
          <term>T.g. X</term>
          <internal>X</internal>
        </enumValue>
        <enumValue>
          <term>T.g. XI</term>
          <internal>XI</internal>
        </enumValue>
        <enumValue>
          <term>T.g. XII</term>
          <internal>XII</internal>
        </enumValue>
      </enumList>

      <enumList includeProjects="CryptoDB,UniDB">
        <enumValue>
          <term>AAEE01000006 (Chromosome 1)</term>
          <internal>AAEE01000006</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000005 (Chromosome 2)</term>
          <internal>AAEE01000005</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000013 (Chromosome 2)</term>
          <internal>AAEE01000013</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000004 (Chromosome 3)</term>
          <internal>AAEE01000004</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000015 (Chromosome 3)</term>
          <internal>AAEE01000015</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000008 (Chromosome 4)</term>
          <internal>AAEE01000008</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000009 (Chromosome 4)</term>
          <internal>AAEE01000009</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000012 (Chromosome 4)</term>
          <internal>AAEE01000012</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000007 (Chromosome 5)</term>
          <internal>AAEE01000007</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000018 (Chromosome 5)</term>
          <internal>AAEE01000018</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000017 (Chromosome 5)</term>
          <internal>AAEE01000017</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000010 (Chromosome 5)</term>
          <internal>AAEE01000010</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000002 (Chromosome 6)</term>
          <internal>AAEE01000002</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000014 (Chromosome 6)</term>
          <internal>AAEE01000014</internal>
        </enumValue>
        <enumValue>
          <term>BX526834 (Chromosome 6)</term>
          <internal>BX526834</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000016 (Chromosome 6)</term>
          <internal>AAEE01000016</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000001 (Chromosome 7)</term>
          <internal>AAEE01000001</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000003 (Chromosome 8)</term>
          <internal>AAEE01000003</internal>
        </enumValue>
        <enumValue>
          <term>AAEE01000011 (Chromosome 8)</term>
          <internal>AAEE01000011</internal>
        </enumValue>
      </enumList>
    </enumParam>

    <stringParam name="wdk_record_type"
                 visible="false" number="false">
    </stringParam>

    <enumParam name="project_id"
               visible="false">
      <noTranslation value="true" includeProjects="EuPathDB" />
      <enumList>
        <enumValue>
          <term>CryptoDB</term>
          <internal>CryptoDB</internal>
        </enumValue>
        <enumValue>
          <term>PlasmoDB</term>
          <internal>PlasmoDB</internal>
        </enumValue>
        <enumValue>
          <term>ToxoDB</term>
          <internal>ToxoDB</internal>
        </enumValue>
        <enumValue>
          <term>GiardiaDB</term>
          <internal>GiardiaDB</internal>
        </enumValue>
        <enumValue>
          <term>TrichDB</term>
          <internal>TrichDB</internal>
        </enumValue>
        <enumValue>
          <term>TriTrypDB</term>
          <internal>TriTrypDB</internal>
        </enumValue>
      </enumList>
    </enumParam>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Timestamp Params -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- the timestampParam will automatically generate a new value every
         user reruns a query from the question page. -->

    <!-- cache the result for 1 minute. -->
    <timestampParam name="timestamp" interval="60"
                    prompt="Time Stamp">
      <help>A new value will be generated automatically every time when user runs/reruns a query from question page</help>
      <suggest allowEmpty="true" emptyValue="0"/>
    </timestampParam>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- wdk weight filter -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


    <stringParam name="min_weight"
                 prompt="Minimum weight"
                 number="true">
      <help>Enter the minimum weight of the result</help>
      <suggest default="0"/>
    </stringParam>

    <stringParam name="max_weight"
                 prompt="Maximum weight"
                 number="true">
      <help>Enter the maximum weight of the result</help>
      <suggest default="100"/>
    </stringParam>

    <flatVocabParam name="question_popularity"
                    queryRef="SharedVQ.QuestionPopularity" />

    <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Strain selection for genes by CNV and genomic segment by ploidy -->
    <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <filterParam name="CNV_strain" includeProjects="AmoebaDB,CryptoDB,PlasmoDB,ToxoDB,TriTrypDB,FungiDB,UniDB"
                 metadataQueryRef="SharedVQ.CnvSamplesMetadataByOrganism"
                 backgroundQueryRef="SharedVQ.CnvSamplesMetadataByOrganism"
                 ontologyQueryRef="SharedVQ.CnvMetadataSpecByOrganism"
                 prompt="Strain/Sample"
                 dependedParamRef="organismParams.organismSinglePickCnv">
      <help>Choose a resequenced strain or sample that has been mapped against the organism's reference genome. Genomic sequences returned by this search will be part of this strain's genome.</help>
    </filterParam>


    <flatVocabParam name="metadata_datasets"
                    queryRef="SharedVQ.MetadataDatasets"
                    prompt="Dataset"
                    quote="false"
                    multiPick="false">
      <help>Choose an Experiment</help>
    </flatVocabParam>

    <filterParam name="ref_samples_filter_metadata" includeProjects="PlasmoDB,EuPathDB,UniDB"
                 metadataQueryRef="SharedVQ.SamplesMetadata"
                 backgroundQueryRef="SharedVQ.SamplesMetadata"
                 ontologyQueryRef="SharedVQ.MetadataSpec"
                 prompt="Reference Samples"
                 dependedParamRef="sharedParams.metadata_datasets"
                 trimMetadataTerms="false">
      <help>
        Select reference samples.
      </help>
      <!-- <suggest selectMode="all" /> -->
    </filterParam>

    <filterParam name="comp_samples_filter_metadata" includeProjects="PlasmoDB,EuPathDB,UniDB"
                 metadataQueryRef="SharedVQ.SamplesMetadata"
                 backgroundQueryRef="SharedVQ.SamplesMetadata"
                 ontologyQueryRef="SharedVQ.MetadataSpec"
                 prompt="Comparison Samples"
                 dependedParamRef="sharedParams.metadata_datasets"
                 trimMetadataTerms="false">
      <help>
        Select comparison samples.
      </help>
      <!-- <suggest selectMode="all" /> -->
    </filterParam>

    <filterParam name="chipchip_samples" includeProjects="FungiDB,PlasmoDB,ToxoDB,TriTrypDB,EuPathDB,UniDB"
                 metadataQueryRef="SharedVQ.ChipchipSamplesMetadata"
                 backgroundQueryRef="SharedVQ.ChipchipSamplesMetadata"
                 ontologyQueryRef="SharedVQ.MetadataSpec"
                 prompt="Samples"
                 dependedParamRef="sharedParams.metadata_datasets"
                 trimMetadataTerms="false">
      <help>
        Select reference samples.
      </help>
    </filterParam>

    <flatVocabParam name="organism"
                    queryRef="SharedVQ.fromDataset"
                    prompt="Organism"
                    quote="false"
                    dependedParamRef="sharedParams.metadata_datasets"
                    suppressNode ="false">
    </flatVocabParam>

<!--
    <flatVocabParam name="snp_assay_type" includeProjects="PlasmoDB,EuPathDB,UniDB"
                    queryRef="snpChipVQ.type_from_organism"
                    prompt="Isolate assay type"
                    multiPick="false"
                    dependedParamRef="organismParams.organismSinglePick"
                    quote="true">
      <help>
        Choose the isolate type you want to query
      </help>
    </flatVocabParam>
-->
   <stringParam name="transcript_length"
        prompt="Minimum transcript length" number="true">
        <help> The minimum length for TALON predictions considered by this query</help>
        <suggest default="20"/>
   </stringParam>

    <stringParam name="supporting_read_count"
        prompt="Minimum number of supporting reads" number="true">
        <help>The minimum number of reads that must support a TALON prediction for it to be considered by this query</help>
        <suggest default="5"/>
    </stringParam>


  </paramSet>



  <!-- Parameters for the SRT Page -->
  <paramSet name="SrtParams">
    <!-- SrtParams.genes_ids -->
    <stringParam name="genes_ids"
                 id="genes_ids"
                 prompt="Gene IDs"
                 number="false">
      <help>Gene IDs (locus tags) are quite different for each species. We use the gene IDs provided
        by the sequence generator.</help>

      <suggest default="%%defaultGene%%"/>
    </stringParam>

    <!-- SrtParams.contigs_ids -->
    <stringParam name="contigs_ids"
                 id="contigs_ids"
                 prompt="Contig IDs" number="false">

      <suggest default="%%defaultGenome%%"
               allowEmpty="true"
               emptyValue="No Match"/>
    </stringParam>


    <!-- SrtParams.orfs_ids -->
    <stringParam name="orfs_ids"
                 id="orfs_ids"
                 prompt="ORFs IDs"
                 number="false">
      <suggest includeProjects="GiardiaDB"
               default="AACB02000007-6-227160-226945"/>
      <suggest includeProjects="TrichDB"
               default="DS113375-1-114214-114468"/>
      <suggest includeProjects="PlasmoDB"
               default="Pf3D7_01-1-10639-11520"/>
      <suggest includeProjects="ToxoDB"
               default="tgme49_asmbl.1868-6-273411-272713"/>
      <suggest includeProjects="CryptoDB"
               default="AAEL01000259-5-3339-3085"/>
      <suggest includeProjects="AmoebaDB"
               default="DS571186-1-24160-24672"/>
      <suggest includeProjects="MicrosporidiaDB"
               default="ECII_CH06-3-138630-138959"/>
      <suggest includeProjects="EuPathDB"
               default="AAEL01000259-5-3339-3085"/>
    </stringParam>

  </paramSet>

  <!-- End SRT Parameters -->


  <!--======================================================================-->
  <!-- General Vocab queries  -->
  <!--======================================================================-->

  <querySet name="SharedVQ" queryType="vocab" isCacheable="true">

    <processQuery name="SolrTextFieldsVocab"
                  processName="org.apidb.apicomplexa.wsfplugin.solrsearch.SiteSearchVocabularyPlugin">
      <wsColumn name="internal" width="255"/>
      <wsColumn name="term" width="255"/>
      <wsColumn name="display" width="255"/>
    </processQuery>

    <sqlQuery name="BlastOrganismFiles">
      <paramRef ref="sharedParams.BlastDatabaseType"/>
      <column name="internal" />
      <column name="term" />
      <column name="parentTerm" />
      <sql>
        <![CDATA[
          WITH orgs AS (
            SELECT distinct organism, project_id, type FROM apidbtuning.blasttypes
          )
          select distinct nvl(ot.term, files.term) as term,
            case when ot.organism is null then files.parentterm else ot.parentterm end as parentterm,
            case when (ot.organism is null or
                 ( ot.organism is not null and ot.term = files.term)) then files.abbreviation
                 else '-1'
            end as internal
          From (
              SELECT DISTINCT abbrev.organism as term,
                      abbrev.parent as parentTerm,
                     '@WEBSERVICEMIRROR@' || '/' || orgs.project_id || '/build-%%buildNumber%%/' || abbreviation || '/blast/' || abbreviation as abbreviation
              FROM orgs, apidbtuning.organismabbreviationblast abbrev
              WHERE orgs.organism = abbrev.organism
                AND orgs.type = '$$BlastDatabaseType$$'
                AND (orgs.project_id = '@PROJECT_ID@' OR 'EuPathDB' = '@PROJECT_ID@' OR 'UniDB' = '@PROJECT_ID@')
                -- need to hard-code this constraint till the org. name has a strain -- redmine #15623
                AND NOT (abbreviation like 'GniphandrodesUnknown' and orgs.type = 'ESTs')
            ) files
            LEFT JOIN apidbtuning.organismtree ot ON files.term = ot.organism
          ORDER BY term
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="MultiBlastOrganismFiles">
      <paramRef ref="sharedParams.MultiBlastDatabaseType"/>
      <column name="internal" />
      <column name="term" />
      <column name="parentTerm" />
      <sql>
        <![CDATA[
          WITH orgs AS (
            SELECT distinct organism, project_id, type
            FROM apidbtuning.blasttypes
          )
          SELECT DISTINCT
            coalesce(ot.term, files.term) as term,
            case when ot.organism is null then files.parentterm else ot.parentterm end as parentterm,
            case when (ot.organism is null or
                 ( ot.organism is not null and ot.term = files.term)) then files.abbreviation
                 else '-1'
            end as internal
          FROM (
              SELECT distinct abbrev.organism as term,
                      abbrev.parent as parentTerm,
                      abbreviation
              FROM orgs, apidbtuning.organismabbreviationblast abbrev
              WHERE orgs.organism = abbrev.organism
                AND orgs.type = '$$MultiBlastDatabaseType$$'
                AND (orgs.project_id = '@PROJECT_ID@' OR 'EuPathDB' = '@PROJECT_ID@' OR 'UniDB' = '@PROJECT_ID@')
                -- need to hard-code this constraint till the org. name has a strain -- redmine #15623
                AND NOT (abbreviation like 'GniphandrodesUnknown' and orgs.type = 'ESTs')
                AND NOT (abbreviation like 'AalbopictusC6-36' and orgs.type = 'ESTs')
                AND NOT (abbreviation like 'AfunestusidAnoFuneDA416_04' and orgs.type = 'ESTs')
            ) files
            LEFT JOIN apidbtuning.organismtree ot ON files.term = ot.organism
          ORDER BY term
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="WordSize">
      <paramRef ref="sharedParams.BlastAlgorithm"/>
      <column name="internal" />
      <column name="term" />
      <column name="display" />
      <sql>
        <![CDATA[
          SELECT display,term,internal FROM (
            SELECT display,term,internal,num FROM (
                 SELECT '11' AS display, '11' AS term, '11' AS internal, 'blastn' AS algorithm, 1 AS num
              UNION
                 SELECT '7' AS display, '7' AS term, '7' AS internal, 'blastn' AS algorithm, 2 AS num
              UNION
                 SELECT '15' AS display, '15' AS term, '15' AS internal, 'blastn' AS algorithm, 3 AS num
              UNION
                 SELECT '6' AS display, '6' AS term, '6' AS internal, 'blastp' AS algorithm, 1 AS num
              UNION
                 SELECT '2' AS display, '2' AS term, '2' AS internal, 'blastp' AS algorithm, 2 AS num
              UNION
                 SELECT '3' AS display, '3' AS term, '3' AS internal, 'blastp' AS algorithm, 3 AS num
              UNION
                 SELECT '6' AS display, '6' AS term, '6' AS internal, 'blastx' AS algorithm, 1 AS num
              UNION
                 SELECT '2' AS display, '2' AS term, '2' AS internal, 'blastx' AS algorithm, 2 AS num
              UNION
                 SELECT '3' AS display, '3' AS term, '3' AS internal, 'blastx' AS algorithm, 3 AS num
              UNION
                 SELECT '6' AS display, '6' AS term, '6' AS internal, 'tblastn' AS algorithm, 1 AS num
              UNION
                 SELECT '2' AS display, '2' AS term, '2' AS internal, 'tblastn' AS algorithm, 2 AS num
              UNION
                 SELECT '3' AS display, '3' AS term, '3' AS internal, 'tblastn' AS algorithm, 3 AS num
              UNION
                 SELECT '3' AS display, '3' AS term, '3' AS internal, 'tblastx' AS algorithm, 1 AS num
              UNION
                 SELECT '2' AS display, '2' AS term, '2' AS internal, 'tblastx' AS algorithm, 2 AS num
            ) t2
            WHERE algorithm = '$$BlastAlgorithm$$'
          ) t
          ORDER BY num ASC
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="ScoringMatrix">
      <paramRef ref="sharedParams.BlastAlgorithm"/>
      <column name="internal" />
      <column name="term" />
      <column name="display" />
      <sql>
        <![CDATA[
          SELECT display,term,internal
          FROM (
            SELECT display,term,internal,num FROM (
               SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-blastn-' AS algorithm, 1 AS num
            UNION
               SELECT 'BLOSUM62' AS display, 'BLOSUM62' AS term, 'BLOSUM62' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 1 AS num
            UNION
               SELECT 'PAM30' AS display, 'PAM30' AS term, 'PAM30' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 2 AS num
            UNION
               SELECT 'PAM70' AS display, 'PAM70' AS term, 'PAM70' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 3 AS num
            UNION
               SELECT 'PAM250' AS display, 'PAM250' AS term, 'PAM250' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 4 AS num
            UNION
               SELECT 'BLOSUM45' AS display, 'BLOSUM45' AS term, 'BLOSUM45' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 5 AS num
            UNION
               SELECT 'BLOSUM50' AS display, 'BLOSUM50' AS term, 'BLOSUM50' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 6 AS num
            UNION
               SELECT 'BLOSUM80' AS display, 'BLOSUM80' AS term, 'BLOSUM80' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 7 AS num
            UNION
               SELECT 'BLOSUM90' AS display, 'BLOSUM90' AS term, 'BLOSUM90' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 8 AS num
            ) t2
            WHERE algorithm LIKE '%-' || '$$BlastAlgorithm$$' || '-%'
          ) t
          ORDER BY num ASC
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="MatchMismatchScore">
      <paramRef ref="sharedParams.BlastAlgorithm"/>
      <column name="internal" />
      <column name="term" />
      <column name="display" />
      <sql>
        <![CDATA[
          SELECT display,term,internal FROM (
            SELECT display,term,internal,num FROM (
                SELECT '2,-3' AS display, '2,-3' AS term, '2,-3' AS internal, '-blastn-' AS algorithm, 1 AS num
              UNION
                SELECT '1,-2' AS display, '1,-2' AS term, '1,-2' AS internal, '-blastn-' AS algorithm, 2 AS num
              UNION
                SELECT '1,-3' AS display, '1,-3' AS term, '1,-3' AS internal, '-blastn-' AS algorithm, 3 AS num
              UNION
                SELECT '1,-4' AS display, '1,-4' AS term, '1,-4' AS internal, '-blastn-' AS algorithm, 4 AS num
              UNION
                SELECT '4,-5' AS display, '4,-5' AS term, '4,-5' AS internal, '-blastn-' AS algorithm, 5 AS num
              UNION
                SELECT '1,-1' AS display, '1,-1' AS term, '1,-1' AS internal, '-blastn-' AS algorithm, 6 AS num
              UNION
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 1 AS num
            ) t2
            WHERE algorithm LIKE '%-' || '$$BlastAlgorithm$$' || '-%'
          ) t
          ORDER BY num ASC
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="GapCosts">
      <paramRef ref="sharedParams.BlastAlgorithm"/>
      <paramRef ref="sharedParams.ScoringMatrix"/>
      <paramRef ref="sharedParams.MatchMismatchScore"/>
      <column name="internal" />
      <column name="term" />
      <column name="display" />
      <sql>
        <![CDATA[
          SELECT display,term,internal FROM (
            SELECT display,term,internal,num FROM (
                SELECT '5,2' AS display, '5,2' AS term, '5,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '2,-3' AS score, 1 AS num
              UNION
                SELECT '4,4' AS display, '4,4' AS term, '4,4' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '2,-3' AS score, 2 AS num
              UNION
                SELECT '2,4' AS display, '2,4' AS term, '2,4' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '2,-3' AS score, 3 AS num
              UNION
                SELECT '0,4' AS display, '0,4' AS term, '0,4' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '2,-3' AS score, 4 AS num
              UNION
                SELECT '3,3' AS display, '3,3' AS term, '3,3' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '2,-3' AS score, 5 AS num
              UNION
                SELECT '6,2' AS display, '6,2' AS term, '6,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '2,-3' AS score, 6 AS num
              UNION
                SELECT '4,2' AS display, '4,2' AS term, '4,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '2,-3' AS score, 7 AS num
              UNION
                SELECT '2,2' AS display, '2,2' AS term, '2,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '2,-3' AS score, 8 AS num
              UNION
                SELECT '5,2' AS display, '5,2' AS term, '5,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-2' AS score, 1 AS num
              UNION
                SELECT '2,2' AS display, '2,2' AS term, '2,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-2' AS score, 2 AS num
              UNION
                SELECT '1,2' AS display, '1,2' AS term, '1,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-2' AS score, 3 AS num
              UNION
                SELECT '0,2' AS display, '0,2' AS term, '0,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-2' AS score, 4 AS num
              UNION
                SELECT '3,1' AS display, '3,1' AS term, '3,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-2' AS score, 5 AS num
              UNION
                SELECT '2,1' AS display, '2,1' AS term, '2,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-2' AS score, 6 AS num
              UNION
                SELECT '1,1' AS display, '1,1' AS term, '1,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-2' AS score, 7 AS num
              UNION
                SELECT '5,2' AS display, '5,2' AS term, '5,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-3' AS score, 1 AS num
              UNION
                SELECT '2,2' AS display, '2,2' AS term, '2,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-3' AS score, 2 AS num
              UNION
                SELECT '1,2' AS display, '1,2' AS term, '1,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-3' AS score, 3 AS num
              UNION
                SELECT '0,2' AS display, '0,2' AS term, '0,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-3' AS score, 4 AS num
              UNION
                SELECT '3,1' AS display, '3,1' AS term, '3,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-3' AS score, 5 AS num
              UNION
                SELECT '2,1' AS display, '2,1' AS term, '2,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-3' AS score, 6 AS num
              UNION
                SELECT '1,1' AS display, '1,1' AS term, '1,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-3' AS score, 7 AS num
              UNION
                SELECT '5,2' AS display, '5,2' AS term, '5,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-4' AS score, 1 AS num
              UNION
                SELECT '1,2' AS display, '1,2' AS term, '1,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-4' AS score, 2 AS num
              UNION
                SELECT '0,2' AS display, '0,2' AS term, '0,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-4' AS score, 3 AS num
              UNION
                SELECT '2,1' AS display, '2,1' AS term, '2,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-4' AS score, 4 AS num
              UNION
                SELECT '1,1' AS display, '1,1' AS term, '1,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-4' AS score, 5 AS num
              UNION
                SELECT '12,8' AS display, '12,8' AS term, '12,8' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '4,-5' AS score, 1 AS num
              UNION
                SELECT '6,5' AS display, '6,5' AS term, '6,5' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '4,-5' AS score, 2 AS num
              UNION
                SELECT '5,5' AS display, '5,5' AS term, '5,5' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '4,-5' AS score, 3 AS num
              UNION
                SELECT '4,5' AS display, '4,5' AS term, '4,5' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '4,-5' AS score, 4 AS num
              UNION
                SELECT '3,5' AS display, '3,5' AS term, '3,5' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '4,-5' AS score, 5 AS num
              UNION
                SELECT '5,2' AS display, '5,2' AS term, '5,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-1' AS score, 1 AS num
              UNION
                SELECT '3,2' AS display, '3,2' AS term, '3,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-1' AS score, 2 AS num
              UNION
                SELECT '2,2' AS display, '2,2' AS term, '2,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-1' AS score, 3 AS num
              UNION
                SELECT '1,2' AS display, '1,2' AS term, '1,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-1' AS score, 4 AS num
              UNION
                SELECT '0,2' AS display, '0,2' AS term, '0,2' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-1' AS score, 5 AS num
              UNION
                SELECT '4,1' AS display, '4,1' AS term, '4,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-1' AS score, 6 AS num
              UNION
                SELECT '3,1' AS display, '3,1' AS term, '3,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-1' AS score, 7 AS num
              UNION
                SELECT '2,1' AS display, '2,1' AS term, '2,1' AS internal, '-blastn-' AS algorithm, 'none' AS matrix, '1,-1' AS score, 8 AS num
              UNION
                SELECT '11,1' AS display, '11,1' AS term, '11,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT '11,2' AS display, '11,2' AS term, '11,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 2 AS num
              UNION
                SELECT '10,2' AS display, '10,2' AS term, '10,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 3 AS num
              UNION
                SELECT '9,2' AS display, '9,2' AS term, '9,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 4 AS num
              UNION
                SELECT '8,2' AS display, '8,2' AS term, '8,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 5 AS num
              UNION
                SELECT '7,2' AS display, '7,2' AS term, '7,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 6 AS num
              UNION
                SELECT '6,2' AS display, '6,2' AS term, '6,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 7 AS num
              UNION
                SELECT '13,1' AS display, '13,1' AS term, '13,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 8 AS num
              UNION
                SELECT '12,1' AS display, '12,1' AS term, '12,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 9 AS num
              UNION
                SELECT '10,1' AS display, '10,1' AS term, '10,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 10 AS num
              UNION
                SELECT '9,1' AS display, '9,1' AS term, '9,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 11 AS num
              UNION
                SELECT '9,1' AS display, '9,1' AS term, '9,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT '7,2' AS display, '7,2' AS term, '7,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 2 AS num
              UNION
                SELECT '6,2' AS display, '6,2' AS term, '6,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 3 AS num
              UNION
                SELECT '5,2' AS display, '5,2' AS term, '5,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 4 AS num
              UNION
                SELECT '10,1' AS display, '10,1' AS term, '10,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 5 AS num
              UNION
                SELECT '8,1' AS display, '8,1' AS term, '8,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 6 AS num
              UNION
                SELECT '13,3' AS display, '13,3' AS term, '13,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 7 AS num
              UNION
                SELECT '15,3' AS display, '15,3' AS term, '15,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 8 AS num
              UNION
                SELECT '14,1' AS display, '14,1' AS term, '14,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 9 AS num
              UNION
                SELECT '14,2' AS display, '14,2' AS term, '14,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 10 AS num
              UNION
                SELECT '10,1' AS display, '10,1' AS term, '10,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM70' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT '8,2' AS display, '8,2' AS term, '8,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM70' AS matrix, 'none' AS score, 2 AS num
              UNION
                SELECT '7,2' AS display, '7,2' AS term, '7,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM70' AS matrix, 'none' AS score, 3 AS num
              UNION
                SELECT '6,2' AS display, '6,2' AS term, '6,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM70' AS matrix, 'none' AS score, 4 AS num
              UNION
                SELECT '11,1' AS display, '11,1' AS term, '11,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM70' AS matrix, 'none' AS score, 5 AS num
              UNION
                SELECT '9,1' AS display, '9,1' AS term, '9,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM70' AS matrix, 'none' AS score, 6 AS num
              UNION
                SELECT '12,3' AS display, '12,3' AS term, '12,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM70' AS matrix, 'none' AS score, 7 AS num
              UNION
                SELECT '11,2' AS display, '11,2' AS term, '11,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM70' AS matrix, 'none' AS score, 8 AS num
              UNION
                SELECT '14,2' AS display, '14,2' AS term, '14,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT '15,3' AS display, '15,3' AS term, '15,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 2 AS num
              UNION
                SELECT '14,3' AS display, '14,3' AS term, '14,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 3 AS num
              UNION
                SELECT '13,3' AS display, '13,3' AS term, '13,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 4 AS num
              UNION
                SELECT '12,3' AS display, '12,3' AS term, '12,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 5 AS num
              UNION
                SELECT '11,3' AS display, '11,3' AS term, '11,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 6 AS num
              UNION
                SELECT '17,2' AS display, '17,2' AS term, '17,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 7 AS num
              UNION
                SELECT '16,2' AS display, '16,2' AS term, '16,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 8 AS num
              UNION
                SELECT '15,2' AS display, '15,2' AS term, '15,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 9 AS num
              UNION
                SELECT '13,2' AS display, '13,2' AS term, '13,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 10 AS num
              UNION
                SELECT '21,1' AS display, '21,1' AS term, '21,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 11 AS num
              UNION
                SELECT '20,1' AS display, '20,1' AS term, '20,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 12 AS num
              UNION
                SELECT '19,1' AS display, '19,1' AS term, '19,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 13 AS num
              UNION
                SELECT '18,1' AS display, '18,1' AS term, '18,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 14 AS num
              UNION
                SELECT '17,1' AS display, '17,1' AS term, '17,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 15 AS num
              UNION
                SELECT '15,2' AS display, '15,2' AS term, '15,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT '13,3' AS display, '13,3' AS term, '13,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 2 AS num
              UNION
                SELECT '12,3' AS display, '12,3' AS term, '12,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 3 AS num
              UNION
                SELECT '11,3' AS display, '11,3' AS term, '11,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 4 AS num
              UNION
                SELECT '10,3' AS display, '10,3' AS term, '10,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 5 AS num
              UNION
                SELECT '14,2' AS display, '14,2' AS term, '14,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 6 AS num
              UNION
                SELECT '13,2' AS display, '13,2' AS term, '13,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 7 AS num
              UNION
                SELECT '12,2' AS display, '12,2' AS term, '12,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 8 AS num
              UNION
                SELECT '19,1' AS display, '19,1' AS term, '19,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 9 AS num
              UNION
                SELECT '18,1' AS display, '18,1' AS term, '18,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 10 AS num
              UNION
                SELECT '17,1' AS display, '17,1' AS term, '17,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 11 AS num
              UNION
                SELECT '16,1' AS display, '16,1' AS term, '16,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 12 AS num
              UNION
                SELECT '13,2' AS display, '13,2' AS term, '13,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT '13,3' AS display, '13,3' AS term, '13,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 2 AS num
              UNION
                SELECT '12,3' AS display, '12,3' AS term, '12,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 3 AS num
              UNION
                SELECT '11,3' AS display, '11,3' AS term, '11,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 4 AS num
              UNION
                SELECT '10,3' AS display, '10,3' AS term, '10,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 5 AS num
              UNION
                SELECT '9,3' AS display, '9,3' AS term, '9,3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 6 AS num
              UNION
                SELECT '16,2' AS display, '16,2' AS term, '16,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 7 AS num
              UNION
                SELECT '15,2' AS display, '15,2' AS term, '15,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 8 AS num
              UNION
                SELECT '14,2' AS display, '14,2' AS term, '14,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 9 AS num
              UNION
                SELECT '12,2' AS display, '12,2' AS term, '12,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 10 AS num
              UNION
                SELECT '19,1' AS display, '19,1' AS term, '19,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 11 AS num
              UNION
                SELECT '18,1' AS display, '18,1' AS term, '18,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 12 AS num
              UNION
                SELECT '17,1' AS display, '17,1' AS term, '17,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 13 AS num
              UNION
                SELECT '16,1' AS display, '16,1' AS term, '16,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 14 AS num
              UNION
                SELECT '15,1' AS display, '15,1' AS term, '15,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 15 AS num
              UNION
                SELECT '10,1' AS display, '10,1' AS term, '10,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM80' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT '8,2' AS display, '8,2' AS term, '8,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM80' AS matrix, 'none' AS score, 2 AS num
              UNION
                SELECT '7,2' AS display, '7,2' AS term, '7,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM80' AS matrix, 'none' AS score, 3 AS num
              UNION
                SELECT '6,2' AS display, '6,2' AS term, '6,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM80' AS matrix, 'none' AS score, 4 AS num
              UNION
                SELECT '11,1' AS display, '11,1' AS term, '11,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM80' AS matrix, 'none' AS score, 5 AS num
              UNION
                SELECT '9,1' AS display, '9,1' AS term, '9,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM80' AS matrix, 'none' AS score, 6 AS num
              UNION
                SELECT '10,1' AS display, '10,1' AS term, '10,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM90' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT '9,2' AS display, '9,2' AS term, '9,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM90' AS matrix, 'none' AS score, 2 AS num
              UNION
                SELECT '8,2' AS display, '8,2' AS term, '8,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM90' AS matrix, 'none' AS score, 3 AS num
              UNION
                SELECT '7,2' AS display, '7,2' AS term, '7,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM90' AS matrix, 'none' AS score, 4 AS num
              UNION
                SELECT '6,2' AS display, '6,2' AS term, '6,2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM90' AS matrix, 'none' AS score, 5 AS num
              UNION
                SELECT '11,1' AS display, '11,1' AS term, '11,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM90' AS matrix, 'none' AS score, 6 AS num
              UNION
                SELECT '9,1' AS display, '9,1' AS term, '9,1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 'BLOSUM90' AS matrix, 'none' AS score, 7 AS num
              UNION
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-tblastx-' AS algorithm, 'BLOSUM62' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-tblastx-' AS algorithm, 'PAM30' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-tblastx-' AS algorithm, 'PAM70' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-tblastx-' AS algorithm, 'PAM250' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-tblastx-' AS algorithm, 'BLOSUM45' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-tblastx-' AS algorithm, 'BLOSUM50' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-tblastx-' AS algorithm, 'BLOSUM80' AS matrix, 'none' AS score, 1 AS num
              UNION
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-tblastx-' AS algorithm, 'BLOSUM90' AS matrix, 'none' AS score, 1 AS num
            ) t2
          WHERE (algorithm LIKE '%-' || '$$BlastAlgorithm$$' || '-%') AND (matrix = $$ScoringMatrix$$) AND (score = $$MatchMismatchScore$$)
          ) t
          ORDER BY num ASC
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="CompAdjust">
      <paramRef ref="sharedParams.BlastAlgorithm"/>
      <column name="internal" />
      <column name="term" />
      <column name="display" />
      <sql>
        <![CDATA[
          SELECT display,term,internal FROM (
            SELECT display,term,internal,num FROM (
                SELECT 'none' AS display, 'none' AS term, 'none' AS internal, '-blastn-tblastx-' AS algorithm, 1 AS num
              UNION
                SELECT 'Conditional compositional score matrix adjustment' AS display, 'conditional-comp-based-score-adjustment' AS term, '2' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 1 AS num
              UNION
                SELECT 'No adjustment' AS display, 'none' AS term, '0' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 2 AS num
              UNION
                SELECT 'Composition-based statistics' AS display, 'comp-based-stats' AS term, '1' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 3 AS num
              UNION
                SELECT 'Universal compositional score matrix adjustment' AS display, 'unconditional-comp-based-score-adjustment' AS term, '3' AS internal, '-blastp-blastx-tblastn-' AS algorithm, 4 AS num
            ) t
            WHERE algorithm LIKE '%-' || '$$BlastAlgorithm$$' || '-%'
          ) t2
          ORDER BY num ASC
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="FilterLowComplex">
      <paramRef ref="sharedParams.BlastAlgorithm"/>
      <paramRef ref="sharedParams.CompAdjust"/>
      <column name="internal" />
      <column name="term" />
      <column name="display" />
      <sql>
        <![CDATA[
          SELECT display,term,internal FROM (
               SELECT display,term,internal,num FROM (
                   SELECT 'dust' AS display, 'dust' AS term, 'dust' AS internal, '-blastn-' AS algorithm, '-none-' AS compadjust, 1 AS num
                 UNION
                   SELECT 'no filter' AS display, 'no filter' AS term, 'no' AS internal, '-blastn-' AS algorithm, '-none-' AS compadjust, 2 AS num
                 UNION
                   SELECT 'no filter' AS display, 'no filter' AS term, 'no' AS internal, '-blastp-' AS algorithm, '-none-1-2-3-' AS compadjust, 1 AS num
                 UNION
                   SELECT 'seg' AS display, 'seg' AS term, 'seg' AS internal, '-blastp-' AS algorithm, '-none-1-2-3-' AS compadjust, 2 AS num
                 UNION
                   SELECT 'seg' AS display, 'seg' AS term, 'seg' AS internal, '-blastp-' AS algorithm, '-0-' AS compadjust, 1 AS num
                 UNION
                   SELECT 'no filter' AS display, 'no filter' AS term, 'no' AS internal, '-blastp-' AS algorithm, '-0-' AS compadjust, 2 AS num
                 UNION
                   SELECT 'seg' AS display, 'seg' AS term, 'seg' AS internal, '-blastx-tblastn-tblastx-' AS algorithm, '-none-0-1-2-3-' AS compadjust, 1 AS num
                 UNION
                   SELECT 'no filter' AS display, 'no filter' AS term, 'no' AS internal, '-blastx-tblastn-tblastx-' AS algorithm, '-none-0-1-2-3-' AS compadjust, 2 AS num
               ) t2
               WHERE ( algorithm LIKE '%-' || '$$BlastAlgorithm$$' || '-%' ) AND ( compadjust LIKE '%-' || $$CompAdjust$$ || '-%' )
          ) t
          ORDER BY num ASC
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="SoftMask">
      <paramRef ref="sharedParams.BlastAlgorithm"/>
      <column name="internal" />
      <column name="term" />
      <column name="display" />
      <sql>
        <![CDATA[
          SELECT display,term,internal FROM (
            SELECT display,term,internal,num FROM (
                SELECT 'true' AS display, 'true' AS term, 'true' AS internal, '-blastn-' AS algorithm, 1 AS num
              UNION
                SELECT 'false' AS display, 'false' AS term, 'false' AS internal, '-blastn-' AS algorithm, 2 AS num
              UNION
                SELECT 'false' AS display, 'false' AS term, 'false' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 1 AS num
              UNION
                SELECT 'true' AS display, 'true' AS term, 'true' AS internal, '-blastp-blastx-tblastn-tblastx-' AS algorithm, 2 AS num
            )  t2
            WHERE ( algorithm LIKE '%-' || '$$BlastAlgorithm$$' || '-%' )
          ) t
          ORDER BY num ASC
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="LowerCaseMask">
      <column name="internal" />
      <column name="term" />
      <column name="display" />
      <sql>
        <![CDATA[
          SELECT display,term,internal
          FROM (
            SELECT 'false' AS display, 'false' AS term, 'false' AS internal, 1 AS num
            UNION
            SELECT 'true' AS display, 'true' AS term, 'true' AS internal, 2 AS num
          ) t
          ORDER BY num ASC
        ]]>
      </sql>
    </sqlQuery>



    <processQuery name="chromosomeOptional"  processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="parentTerm,term ASC" includeProjects="EuPathDB">
      <paramRef ref="organismParams.organism" quote="false"/>
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
      <wsColumn name="parentTerm" width="32" wsName="parentTerm" />
    </processQuery>

    <sqlQuery name="ChromosomeOrderNum" excludeProjects="SchistoDB,EuPathDB" isCacheable="true" doNotTest="true">
      <paramRef ref="organismParams.organismSinglePick" quote="true" queryRef="organismVQ.withChromosomes"/>
      <column name="internal"/>
      <column name="term"/>
      <sql>
        SELECT * FROM (
            SELECT DISTINCT chromosome as term , chromosome as internal, chromosome_order_num
            FROM ApidbTuning.GenomicSeqAttributes
            WHERE organism in ($$organismSinglePick$$)
              AND chromosome is not null
          UNION
            SELECT
              'Choose chromosome' as term,
              'Choose chromosome' as internal,
              -1 as chromosome_order_num
        ) t
        ORDER BY chromosome_order_num asc
      </sql>
    </sqlQuery>

    <processQuery name="ChromosomeOrderNum"  processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="term ASC"  includeProjects="EuPathDB" doNotTest="true">
      <paramRef ref="organismParams.organismSinglePick" quote="false" queryRef="organismVQ.withChromosomes"/>
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="130" wsName="term"/>
    </processQuery>


    <sqlQuery name="ChromosomeForNgsSnps" includeProjects="PiroplasmaDB,UniDB,GiardiaDB,PlasmoDB,ToxoDB,TriTrypDB,CryptoDB,AmoebaDB,FungiDB,MicrosporidiaDB"  isCacheable="true" doNotTest="true">
      <paramRef ref="organismParams.organismSinglePick" quote="true" queryRef="organismVQ.withNgsSNPs"/>
      <column name="internal"/>
      <column name="term"/>
      <sql>
        SELECT * FROM (
            SELECT distinct chromosome AS term , source_id AS internal, chromosome_order_num AS chromosome_order_num
            FROM ApidbTuning.GenomicSeqAttributes
            WHERE organism  = '$$organismSinglePick$$'
            AND chromosome is not null
          UNION
            SELECT
              'Choose chromosome' as term,
              'choose' as internal,
              -1 as chromosome_order_num
        ) t
        ORDER BY chromosome_order_num
      </sql>
    </sqlQuery>

    <!-- ======================================================== -->
    <!-- ======================================================== -->
    <!-- ====== All SNP queries below here might be obsolete  === -->
    <!-- ======================================================== -->
    <!-- ======================================================== -->

    <sqlQuery name="ChromosomeOrderNumMultipickForSnps" includeProjects="PlasmoDB,UniDB" isCacheable="true" doNotTest="true">
      <paramRef ref="organismParams.organismSinglePick" quote="true" queryRef="organismVQ.withChromosomesSNPs"/>
      <column name="internal"/>
      <column name="term"/>
      <sql>
        SELECT * FROM (
            SELECT distinct chromosome AS term , source_id AS internal, chromosome_order_num AS chromosome_order_num
            FROM ApidbTuning.GenomicSeqAttributes
            WHERE organism  = $$organismSinglePick$$
              AND chromosome is not null
          UNION
            SELECT
              'Choose chromosome' as term,
              'choose' as internal,
              -1 as chromosome_order_num
        ) t
        ORDER BY chromosome_order_num
      </sql>
    </sqlQuery>

    <processQuery name="ChromosomeOrderNumMultipickForSnps"  processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="term ASC"  includeProjects="EuPathDB">
      <paramRef ref="organismParams.organismSinglePick" quote="false" queryRef="organismVQ.withChromosomesSNPs"/>
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


    <sqlQuery name="ChromosomeOrderNumMultipick" excludeProjects="EuPathDB,MicrosporidiaDB,SchistoDB,AmoebaDB,HostDB" isCacheable="true" doNotTest="true">

      <paramRef ref="organismParams.organismSinglePick" quote="true" queryRef="organismVQ.withChromosomesHtsSNPs"/>
      <column name="internal"/>
      <column name="term" width="55"/>
      <sql>
        SELECT * FROM (
            SELECT chromosome as term,
              chromosome as internal,
              chromosome_order_num as chromosome_order_num
            FROM ApidbTuning.GenomicSeqAttributes
            WHERE organism  = $$organismSinglePick$$
              AND chromosome is not null
          UNION
            SELECT
              CASE WHEN (SELECT count(*) FROM ApidbTuning.GenomicSeqAttributes
                         WHERE chromosome_order_num is not null
                          AND organism = $$organismSinglePick$$) = 0
              THEN 'Not Applicable. Please use the Sequence ID tab'
              ELSE 'Choose chromosome'
              END AS  term,
              '0' AS internal,
              -1 AS chromosome_order_num
            FROM ApidbTuning.GenomicSeqAttributes
        ) t
        ORDER BY chromosome_order_num
      </sql>
    </sqlQuery>

    <processQuery name="ChromosomeOrderNumMultipick"  processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="term ASC"  includeProjects="EuPathDB">
      <paramRef ref="organismParams.organism" quote="false" queryRef="organismVQ.withChromosomesHtsSNPs"/>
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="55" wsName="term"/>
    </processQuery>


    <sqlQuery name="CentromereChromosome" includeProjects="PlasmoDB,ToxoDB,TriTrypDB,UniDB">
      <paramRef ref="organismParams.org_with_centromere_genes" />
      <column name="internal"/>
      <column name="term"/>
      <column name="display"/>
      <sql>
        <![CDATA[
          SELECT DISTINCT sa.source_id as internal, sa.source_id as term,
                    ('chromsome ' || sa.chromosome) as display, sa.chromosome_order_num
          FROM ApidbTuning.TranscriptCenDistance tcd, ApidbTuning.GenomicSeqAttributes sa
          WHERE tcd.genomic_sequence = sa.source_id
            AND sa.organism = $$org_with_centromere_genes$$
          ORDER BY sa.chromosome_order_num
	    ]]>
      </sql>
    </sqlQuery>

    <processQuery name="CentromereChromosome" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="term ASC"  includeProjects="EuPathDB">
      <paramRef ref="organismParams.org_with_centromere_genes" quote="false" />
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="term" width="100" wsName="term"/>
    </processQuery>

    <sqlQuery name="TelomereChromosomes" doNotTest="true"
              includeProjects="CryptoDB,FungiDB,GiardiaDB,HostDB,MicrosporidiaDB,PiroplasmaDB,PlasmoDB,ToxoDB,TriTrypDB,VectorBase,UniDB">
      <paramRef ref="organismParams.organismSinglePick" quote="true" queryRef="organismVQ.withChromosomes"/>
      <column name="internal"/>
      <column name="term"/>
      <column name="display"/>
      <sql>
        <![CDATA[
          SELECT source_id as internal, source_id as term,
                  ('chromosome ' || chromosome) as display,  chromosome_order_num
          FROM ApidbTuning.GenomicSeqAttributes sa
          WHERE organism = $$organismSinglePick$$
            AND NOT (chromosome is null OR chromosome ='unk')
          ORDER BY chromosome_order_num
	    ]]>
      </sql>
    </sqlQuery>

    <processQuery name="TelomereChromosomes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="term ASC"   includeProjects="EuPathDB" doNotTest="true">
      <paramRef ref="organismParams.organismSinglePick" quote="false" queryRef="organismVQ.withChromosomes"/>
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="term" width="100" wsName="term"/>
    </processQuery>



    <sqlQuery name="PfSeqId" includeProjects="PlasmoDB,UniDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="display"/>
      <sql>
        <![CDATA[
          SELECT DISTINCT sa.source_id as internal, sa.source_id as term,
                    ('P.f. chromosome ' || sa.chromosome) as display, sa.chromosome_order_num
          FROM ApidbTuning.GenomicSeqAttributes sa
          WHERE sa.organism = 'Plasmodium falciparum 3D7'
            AND sa.chromosome_order_num IS NOT NULL
          ORDER BY sa.chromosome_order_num
	    ]]>
      </sql>
    </sqlQuery>

    <processQuery name="PfSeqId" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="display ASC"  includeProjects="EuPathDB">
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="term" width="100" wsName="term"/>
      <wsColumn name="display" width="100"/>
    </processQuery>
<!--
    <sqlQuery name="SnpChipStrainGene" isCacheable="true" includeProjects="PlasmoDB,UniDB">
      <paramRef ref="organismParams.organism" quote="true" queryRef="organismVQ.withSNPs"/>
      <column name="internal"/>
      <column name="term"/>
      <sql>
        SELECT DISTINCT strain as term, strain || '_' || replace(name,'Broad_%') as internal
        FROM apidbTuning.SnpChipStrains
        WHERE organism in ( $$organism$$ )
        ORDER BY strain
      </sql>
    </sqlQuery>

    <processQuery name="SnpChipStrainGene" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="term ASC"  includeProjects="EuPathDB">
      <paramRef ref="organismParams.organism" quote="true" queryRef="organismVQ.withSNPs"/>
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

-->

    <sqlQuery name="htsSnpStrainAA" excludeProjects="HostDB,EuPathDB,SchistoDB,MicrosporidiaDB,HostDB" doNotTest="true">
      <paramRef ref="organismParams.organism" quote="true" queryRef="organismVQ.withNgsSNPs" />
      <column name="internal"/>
      <column name="term"/>
      <sql>
        SELECT distinct st.strain as term, st.strain as internal
        FROM ApiDBTuning.SnpStrains st
        WHERE st.organism in ($$organism$$)
      </sql>
    </sqlQuery>

    <processQuery name="htsSnpStrainAA" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="term ASC"  includeProjects="EuPathDB" doNotTest="true">
      <paramRef ref="organismParams.organism" quote="true" queryRef="organismVQ.withNgsSNPs"/>
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


    <sqlQuery name="StrainsMetadata" doNotTest="true" isCacheable="true" includeProjects="PiroplasmaDB,GiardiaDB,TriTrypDB,AmoebaDB,PlasmoDB,CryptoDB,ToxoDB,FungiDB,UniDB">
      <paramRef ref="organismParams.organism" quote="true" queryRef="organismVQ.withNgsSNPs"/>
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
          SELECT *
          FROM (
              SELECT DISTINCT
                ss.strain as term
                , initcap (
                    CASE WHEN regexp_like (bmc.value,'^([0-9])+\s([^0-9])+$')
                         THEN (regexp_replace(bmc.value,'\s[^0-9]+',''))
                         ELSE bmc.value
                    END
                  ) as value
                , oe.value as property
              FROM
                Apidbtuning.SnpStrains ss,
                Study.Biomaterialcharacteristic Bmc,
                STUDY.biosample bs,
                Study.Ontologyentry oe,
                sres.externaldatabase ed,
                sres.externaldatabaserelease edr
              WHERE Bmc.Bio_Material_Id = bs.Bio_Material_Id
                AND Bmc.Ontology_Entry_Id = Oe.Ontology_Entry_Id
                AND edr.external_database_id = ed.external_database_id
                AND ss.biosample_db_name = ed.name
                AND bs.external_database_release_id = edr.external_database_release_id
                AND ss.organism = $$organism$$
                AND oe.value not in ( 'StrainOrLine', 'Organism')
            UNION
              SELECT DISTINCT ss.strain as term,
                     ss.strain as value,
                     'StrainOrLine' as property
              FROM Apidbtuning.SnpStrains ss
            UNION
              SELECT DISTINCT 'ME49' as term,
                     '2' as value,
                      'Haplogroup' as property
            UNION
              SELECT ss.strain as term,
                      REGEXP_REPLACE(dp.display_name,'<[^>]*>','') as value,
                      'Experiment' as property
              FROM apidbtuning.SnpStrains ss, apidbTuning.DatasetPresenter dp
              WHERE dp.name =  ss.study_db_name
                AND  ss.organism = $$organism$$
          ) t
          WHERE value is not null
            AND lower(value) != 'unknown'
            AND regexp_like(value, '.*[[:alnum:]]+.*')
          ORDER BY term,property
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="StrainsMetadata" doNotTest="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="internal,ontology_term_name ASC"  includeProjects="EuPathDB">
      <paramRef ref="organismParams.organism" quote="true" queryRef="organismVQ.withNgsSNPs"/>
      <wsColumn name="ontology_term_name" width="100" wsName="ontology_term_name"/>
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="number_value" width="100" wsName="number_value"/>
      <wsColumn name="date_value" width="100" wsName="date_value"/>
      <wsColumn name="string_value" width="100" wsName="string_value"/>
    </processQuery>


    <!--
            <sqlQuery name="StrainsMetadataSpec" doNotTest="1" isCacheable="true" includeProjects="PiroplasmaDB,GiardiaDB,TriTrypDB,AmoebaDB,PlasmoDB,CryptoDB,ToxoDB,FungiDB">
              <paramRef ref="organismParams.organism" quote="true" queryRef="organismVQ.withNgsSNPs"/>
                <column name="ontology_term_name"/>
                <column name="parent_ontology_term_name"/>
                <column name="display_name"/>
                <column name="description"/>
                <column name="type"/>
                <column name="units"/>
                <column name="precision"/>
                <column name="is_range"/>
                <sql>
               <![CDATA[
    With FullSpec as  (
    SELECT 'BioSampleID' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'BioSampleID' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'BioSampleID' as property, 'display' as spec_property, 'BioSampleID' as spec_value FROM dual
    UNION
    SELECT 'BioSourceType' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'BioSourceType' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'BioSourceType' as property, 'display' as spec_property, 'BioSourceType' as spec_value FROM dual
    UNION
    SELECT 'ClinicalPhenotype' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'ClinicalPhenotype' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'ClinicalPhenotype' as property, 'display' as spec_property, 'ClinicalPhenotype' as spec_value FROM dual
    UNION
    SELECT 'DateCollected' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'DateCollected' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'DateCollected' as property, 'display' as spec_property, 'DateCollected' as spec_value FROM dual
    UNION
    SELECT 'GeographicLocation' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'GeographicLocation' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'GeographicLocation' as property, 'display' as spec_property, 'GeographicLocation' as spec_value FROM dual
    UNION
    SELECT 'Host' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'Host' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'Host' as property, 'display' as spec_property, 'Host' as spec_value FROM dual
    UNION
    SELECT 'HostAge' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'HostAge' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'HostAge' as property, 'display' as spec_property, 'HostAge' as spec_value FROM dual
    UNION
    SELECT 'HostSex' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'HostSex' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'HostSex' as property, 'display' as spec_property, 'HostSex' as spec_value FROM dual
    UNION
    SELECT 'Organism' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'Organism' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'Organism' as property, 'display' as spec_property, 'Organism' as spec_value FROM dual
    UNION
    SELECT 'SquidProject' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'SquidProject' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'SquidProject' as property, 'display' as spec_property, 'SquidProject' as spec_value FROM dual
    UNION
    SELECT 'StrainOrLine' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'StrainOrLine' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'StrainOrLine' as property, 'display' as spec_property, 'StrainOrLine' as spec_value FROM dual
    UNION
    SELECT 'Year' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'Year' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'Year' as property, 'display' as spec_property, 'Year' as spec_value FROM dual
    UNION
    SELECT 'country' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'country' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'country' as property, 'display' as spec_property, 'Country' as spec_value FROM dual
    UNION
     SELECT 'Haplogroup' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'Haplogroup' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'Haplogroup' as property, 'display' as spec_property, 'Haplogroup' as spec_value FROM dual
    UNION
    SELECT 'ATCC#' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'ATCC#' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'ATCC#' as property, 'display' as spec_property, 'ATCC#' as spec_value FROM dual
    UNION
    SELECT 'Experiment' as property, 'type' as spec_property, 'string' as spec_value FROM dual
    UNION
    SELECT 'Experiment' as property, 'filter' as spec_property, 'membership' as spec_value FROM dual
    UNION
     SELECT 'Experiment' as property, 'display' as spec_property, 'Experiment' as spec_value FROM dual
    UNION
     SELECT 'Experiment' as property, 'parent' as spec_property, 'BioMaterialCharacteristics' as spec_value FROM dual
    ),
    main as ( select fs.*
                from fullspec fs,
                     (Select distinct oe.value as property
                        from Apidbtuning.SnpStrains ss,
                             Study.Biomaterialcharacteristic Bmc,
                             STUDY.biosample bs,
                             Study.Ontologyentry oe,
                             sres.externaldatabase ed,
                             sres.externaldatabaserelease edr
                       Where Bmc.Bio_Material_Id = bs.Bio_Material_Id
                         and Bmc.Ontology_Entry_Id = Oe.Ontology_Entry_Id
                         and edr.external_database_id = ed.external_database_id
                         and ss.biosample_db_name = ed.name
                         and bs.external_database_release_id = edr.external_database_release_id
                         and ss.organism = $$organism$$
                         and oe.value not in ( 'StrainOrLine', 'Organism')
                         and bmc.value is not null and regexp_like(bmc.value, '.*[[:alnum:]]+.*')
                         and lower(bmc.value) != 'unknown'
                       Union
                       Select 'StrainOrLine' as property
                         from dual
                       Union
                       Select 'Experiment' as property
                         from dual
                      ) categories
                where fs.property = categories.property
    ),
    Tree as (
    (SELECT distinct oe.value as property, 'parent' as spec_property, oe.category as spec_value
               FROM STUDY.ontologyentry oe, main
               START WITH oe.value = main.property
                     CONNECT BY (PRIOR oe.category = oe.value)

    intersect
    SELECT distinct oe.value as property, 'parent' as spec_property, oe.category as spec_value
               FROM STUDY.ontologyentry oe, main
               START WITH oe.category = 'BioMaterialCharacteristics'
                     CONNECT BY PRIOR oe.value = oe.category and PRIOR oe.category not in (select property from main)
    )
    union
    select 'BioMaterialCharacteristics', 'parent' as spec_property, '' as spec_value from dual
    ),
    TreeDisplay as ( SELECT property as property, 'display' as spec_property, initcap(replace(property,'_',' ')) as spec_value
               FROM Tree
               where property != 'BioMaterialCharacteristics'
               Union
               select 'BioMaterialCharacteristics' as property, 'display' as spec_property, 'Characteristics' as spec_value from dual
               minus
               SELECT property as property, 'display' as spec_property, initcap(replace(property,'_',' ')) as spec_value
               FROM main
    )
    Select * from main
    union
    select tree.* from tree

    union
    select treeDisplay.* from treeDisplay
    union
    SELECT oe.value as property, 'description' as spec_property, definition as spec_value FROM STUDY.ontologyentry oe, main
    where oe.value = main.property
          and oe.definition is not null
    union
    SELECT oe.value as property, 'leaf' as spec_property, 'true' as spec_value FROM STUDY.ontologyentry oe, main
    where oe.value = main.property
                ]]>
                </sql>
            </sqlQuery>
    -->

    <processQuery name="StrainsMetadataSpec" doNotTest="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="ontology_term_name" width="100" wsName="ontology_term_name"/>
      <wsColumn name="parent_ontology_term_name" width="100" wsName="parent_ontology_term_name"/>
      <wsColumn name="display_name" width="100" wsName="display_name"/>
      <wsColumn name="description" width="100" wsName="description"/>
      <wsColumn name="type" width="100" wsName="type"/>
      <wsColumn name="units" width="100" wsName="units"/>
      <wsColumn name="precision" width="100" wsName="precision"/>
      <wsColumn name="is_range" width="100" wsName="is_range"/>
    </processQuery>



    <sqlQuery name="profileOntologyTerm" includeProjects="PlasmoDB,UniDB" doNotTest="true">
      <paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.profileset_generic" quote="false" queryRef="GeneVQ.GenericProfiles"/>
      <column name="display"/>
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          SELECT *
          FROM (SELECT ontology_term_name as term, ontology_term_name as internal,
                       display_name as display, 1 as order_num
                FROM ApidbTuning.Ontology
                WHERE dataset_name = 'pfal3D7_microarrayAntibody_Crompton_Mali_RSRC'
               ) t
          ORDER by order_num, term
        ]]>
      </sql>
    </sqlQuery>

        <processQuery name="profileOntologyTerm" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="display ASC"  includeProjects="EuPathDB" doNotTest="true">
           <paramRef ref="geneParams.profileset_generic" quote="true" queryRef="GeneVQ.GenericProfiles"/>  
            <wsColumn name="internal" width="32" wsName="internal"/>
            <wsColumn name="term" width="32" wsName="term"/>
            <wsColumn name="display" width="32" wsName="display"/>
        </processQuery>


        <processQuery name="profileOntologyOptional" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="display ASC"  includeProjects="EuPathDB" doNotTest="true">
           <paramRef ref="geneParams.profileset_generic" quote="true" queryRef="GeneVQ.GenericProfiles"/>  
            <wsColumn name="internal" width="32" wsName="internal"/>
            <wsColumn name="term" width="32" wsName="term"/>
            <wsColumn name="display" width="32" wsName="display"/>
        </processQuery>

    <sqlQuery name="ChromosomeOrderNumSeq"
              isCacheable="true"
              doNotTest="true"
              includeProjects="TriTrypDB,MicrosporidiaDB,CryptoDB,PlasmoDB,ToxoDB,PiroplasmaDB,FungiDB,GiardiaDB,VectorBase,UniDB" >
      <paramRef ref="organismParams.organismSinglePick" quote="true" queryRef="organismVQ.withStrainsChromosome"/>
      <column name="display"/>
      <column name="internal"/>
      <column name="term"/>
      <sql>
        SELECT *
        FROM (
          SELECT chromosome as display,
            string_agg(source_id, ';') AS term,
            chromosome as internal, chromosome_order_num
          FROM (
            SELECT DISTINCT sa.chromosome, sa.source_id, sa.chromosome_order_num
            FROM ApidbTuning.GenomicSeqAttributes sa
            WHERE sa.organism in ($$organismSinglePick$$)
              AND sa.chromosome is not null
            UNION
            SELECT
              'Choose chromosome' as term,
              'Choose chromosome' as internal,
              -1 as chromosome_order_num
          ) t
          GROUP BY chromosome, chromosome_order_num
        ) t2
        order by chromosome_order_num asc
      </sql>
    </sqlQuery>

    <processQuery name="ChromosomeOrderNumSeq"  processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="display ASC"  includeProjects="EuPathDB">
      <paramRef ref="organismParams.organismSinglePick" quote="false" queryRef="organismVQ.withChromosomes"/>
      <wsColumn name="display" width="50"/>
      <wsColumn name="internal" width="50"/>
      <wsColumn name="term" width="500"/>
    </processQuery>


    <sqlQuery name="QuestionPopularity" isCacheable="true" doNotTest="true">
      <column name="internal"/>
      <column name="term"/>
      <column name="display"/>
      <sql>
        SELECT term, display, rownum AS internal
        FROM (
          SELECT a.question_name AS term, count(s.step_id) AS display
          FROM @WDK_ENGINE_SCHEMA@answers@USER_DBLINK@ a, @USER_SCHEMA@steps@USER_DBLINK@ s
          WHERE a.answer_id = s.step_id
          GROUP BY a.question_name
        ) t
      </sql>
    </sqlQuery>

    <sqlQuery name="MetadataSpec" doNotTest="1" excludeProjects="EuPathDB">
      <paramRef groupRef="paramGroups.dynamicParams" ref="sharedParams.metadata_datasets"/>
      <column name="ontology_term_name"/>
      <column name="parent_ontology_term_name"/>
      <column name="display_name"/>
      <column name="description"/>
      <column name="type"/>
      <column name="units"/>
      <column name="precision"/>
      <column name="is_range"/>
      <sql>
        <![CDATA[
          SELECT ontology_term_name, parent_ontology_term_name, display_name,
                 description, type, units, precision, is_range
          FROM apidbTuning.Ontology
          WHERE dataset_name = '$$metadata_datasets$$'
          ORDER BY display_order, ontology_term_name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="MetadataSpec" doNotTest="1" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <!-- not like sqlQuery version above:
                  <paramRef groupRef="paramGroups.dynamicParams" ref="geneParams.profileset_generic" quote="false"  queryRef="GeneVQ.GenericProfiles"/> -->
      <paramRef groupRef="paramGroups.dynamicParams" ref="sharedParams.metadata_datasets" quote="true"/>
      <wsColumn name="ontology_term_name" width="100" wsName="ontology_term_name"/>
      <wsColumn name="parent_ontology_term_name" width="100" wsName="parent_ontology_term_name"/>
      <wsColumn name="display_name" width="100" wsName="display_name"/>
      <wsColumn name="description" width="100" wsName="description"/>
      <wsColumn name="type" width="100" wsName="type"/>
      <wsColumn name="units" width="100" wsName="units"/>
      <wsColumn name="precision" width="100" wsName="precision"/>
      <wsColumn name="is_range" width="100" wsName="is_range"/>
    </processQuery>
<!--
    <sqlQuery name="MetadataSpecByOrganismAndArray" doNotTest="1" includeProjects="PlasmoDB,UniDB">
      <paramRef ref="organismParams.organismSinglePick" queryRef="snpChipVQ.withChipSNPs"/>
      <paramRef ref="sharedParams.snp_assay_type"/>
      <column name="ontology_term_name"/>
      <column name="parent_ontology_term_name"/>
      <column name="display_name"/>
      <column name="description"/>
      <column name="type"/>
      <column name="units"/>
      <column name="precision"/>
      <column name="is_range"/>
      <sql>
        <![CDATA[
          SELECT DISTINCT ontology_term_name, parent_ontology_term_name, display_name,
                          description, type, units, precision, is_range
          FROM apidbTuning.Ontology
          WHERE dataset_subtype = $$snp_assay_type$$
            AND organism = '$$organismSinglePick$$'
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="MetadataSpecByOrganismAndArray" doNotTest="1" includeProjects="EuPathDB"
                  processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <paramRef ref="organismParams.organismSinglePick" queryRef="snpChipVQ.withChipSNPs"/>
      <paramRef ref="sharedParams.snp_assay_type"/>
      <wsColumn name="ontology_term_name" width="100" wsName="ontology_term_name"/>
      <wsColumn name="parent_ontology_term_name" width="100" wsName="parent_ontology_term_name"/>
      <wsColumn name="display_name" width="100" wsName="display_name"/>
      <wsColumn name="description" width="100" wsName="description"/>
      <wsColumn name="type" width="100" wsName="type"/>
      <wsColumn name="units" width="100" wsName="units"/>
      <wsColumn name="precision" width="100" wsName="precision"/>
      <wsColumn name="is_range" width="100" wsName="is_range"/>
    </processQuery>
-->
    <sqlQuery name="SamplesMetadata" doNotTest="1" includeProjects="PlasmoDB,UniDB">
      <paramRef groupRef="paramGroups.dynamicParams" ref="sharedParams.metadata_datasets"/>
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
          SELECT pan_name as internal, property as ontology_term_name,
                 number_value, string_value, date_value
          FROM apidbTuning.Metadata
          WHERE dataset_name = '$$metadata_datasets$$'
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="SamplesMetadata" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <paramRef groupRef="paramGroups.dynamicParams" ref="sharedParams.metadata_datasets"/>
      <wsColumn name="ontology_term_name" width="100" wsName="ontology_term_name"/>
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="number_value" width="100" wsName="number_value"/>
      <wsColumn name="date_value" width="100" wsName="date_value"/>
      <wsColumn name="string_value" width="100" wsName="string_value"/>
    </processQuery>

    <sqlQuery name="ChipchipSamplesMetadata" doNotTest="1" includeProjects="FungiDB,PlasmoDB,ToxoDB,TriTrypDB,UniDB">
      <paramRef groupRef="paramGroups.dynamicParams" ref="sharedParams.metadata_datasets"/>
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
          SELECT md.pan_name as internal,
                 md.property as ontology_term_name,
                 md.number_value,
                 md.string_value,
                 md.date_value
          FROM apidbTuning.Metadata md
          WHERE dataset_name = '$$metadata_datasets$$'
            AND pan_name like '%peaks%'
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="ChipchipSamplesMetadata" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <paramRef groupRef="paramGroups.dynamicParams" ref="sharedParams.metadata_datasets"/>
      <wsColumn name="ontology_term_name" width="100" wsName="ontology_term_name"/>
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="number_value" width="100" wsName="number_value"/>
      <wsColumn name="date_value" width="100" wsName="date_value"/>
      <wsColumn name="string_value" width="100" wsName="string_value"/>
    </processQuery>

<!--
    <sqlQuery name="SamplesMetadataByOrganismArray" doNotTest="1" includeProjects="PlasmoDB,UniDB">
      <paramRef ref="organismParams.organismSinglePick" queryRef="snpChipVQ.withChipSNPs"/>
      <paramRef ref="sharedParams.snp_assay_type"/>
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
          SELECT
            case when replace(md.pan_name, ' (Sequence Variations)', '') = o.strain_abbrev then o.strain_abbrev
                 else replace(md.pan_name || '_' || md.dataset_subtype, ' (Sequence Variations)', '')
                 end as internal,
            md.property as ontology_term_name,
            md.number_value,
            md.string_value,
            md.date_value
          FROM apidbTuning.Metadata md,
               apidb.organism o,
               apidbtuning.taxonomy t
          WHERE md.organism = t.name
            AND t.taxon_id = o.taxon_id
            AND md.dataset_subtype = $$snp_assay_type$$
            AND md.organism = '$$organismSinglePick$$'
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="SamplesMetadataByOrganismArray" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <paramRef ref="organismParams.organismSinglePick" queryRef="snpChipVQ.withChipSNPs"/>
      <paramRef ref="sharedParams.snp_assay_type"/>
      <wsColumn name="ontology_term_name" width="100" wsName="ontology_term_name"/>
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="number_value" width="100" wsName="number_value"/>
      <wsColumn name="date_value" width="100" wsName="date_value"/>
      <wsColumn name="string_value" width="100" wsName="string_value"/>
    </processQuery>
-->
    <sqlQuery name="MetadataDatasets" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="display"/>
      <sql>
        SELECT distinct dataset_name AS internal, dataset_name as term,
          dataset_name AS display
        FROM apidbTuning.Ontology
      </sql>
    </sqlQuery>

    <processQuery name="MetadataDatasets" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="300" wsName="internal"/>
      <wsColumn name="term" width="300" wsName="term"/>
      <wsColumn name="display" width="300" wsName="display"/>
    </processQuery>

    <sqlQuery name="ChipchipDataset" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="display"/>
      <sql>
        <![CDATA[
           SELECT DISTINCT i.name AS term, i.name AS internal, dsp.display_name AS display
           FROM study.Study s
             , study.Study i
             , apidbTuning.ExternalDbDatasetPresenter edp
             , apidbTuning.DatasetPresenter dsp
             , study.StudyLink sl
             , study.ProtocolAppNode pan
           WHERE s.name LIKE '%peaks%'
             AND s.external_database_release_id = edp.external_database_release_id
             AND edp.dataset_presenter_id = dsp.dataset_presenter_id
             AND dsp.subtype = 'chip_chip'
             AND s.study_id = sl.study_id
             AND s.investigation_id = i.study_id
             AND sl.protocol_app_node_id = pan.protocol_app_node_id
           ORDER BY i.name
	    ]]>
      </sql>
    </sqlQuery>

    <processQuery name="ChipchipDataset" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="300" wsName="internal"/>
      <wsColumn name="term" width="300" wsName="term"/>
      <wsColumn name="display" width="300" wsName="display"/>
    </processQuery>

    <sqlQuery name="fromDataset" excludeProjects="EuPathDB">
      <paramRef ref="sharedParams.metadata_datasets"/>
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          SELECT DISTINCT organism AS term, organism AS internal
          FROM apidbTuning.Ontology
              WHERE dataset_name = '$$metadata_datasets$$'
	    ]]>
      </sql>
    </sqlQuery>

    <processQuery name="fromDataset" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="term ASC" includeProjects="EuPathDB">
      <paramRef ref="sharedParams.metadata_datasets"/>
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="term" width="100" wsName="term"/>
    </processQuery>
<!--
    <sqlQuery name="SnpChipMetadataDatasetsByOrganism" doNotTest="1" includeProjects="PlasmoDB,UniDB">
      <paramRef ref="organismParams.organismSinglePick"/>
      <column name="term" />
      <column name="display" />
      <column name="internal"/>
      <sql>
        <![CDATA[
          SELECT dsnt.name AS term
            , dsnt.name as internal
            , dsp.display_name AS display
          FROM
            apidbtuning.datasetpresenter dsp
            , apidbtuning.datasetnametaxon dsnt
          WHERE
            dsp.dataset_presenter_id = dsnt.dataset_presenter_id
            AND dsp.subtype in ('Broad_3k_array', 'Broad_75K_array', 'Broad_barcode', 'NIH_10k')
            AND dsnt.name in (SELECT dataset_name
                              FROM apidbTuning.Ontology
                              WHERE organism = '$$organismSinglePick$$')
          ORDER BY dsnt.name DESC
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="SnpChipMetadataDatasetsByOrganism" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" sorting="term ASC" includeProjects="EuPathDB">
      <paramRef ref="organismParams.organism"/>
      <wsColumn name="internal" width="100" wsName="internal"/>
      <wsColumn name="term" width="100" wsName="term"/>
    </processQuery>
-->
    <sqlQuery name="CnvSamplesMetadataByOrganism" doNotTest="1" includeProjects="AmoebaDB,CryptoDB,PlasmoDB,ToxoDB,TriTrypDB,FungiDB,UniDB">
      <paramRef ref="organismParams.organismSinglePickCnv"/> <!--  noTranslation="true"/ -->
      <column name="ontology_term_name"/>
      <column name="internal"/>
      <column name="number_value"/>
      <column name="date_value"/>
      <column name="string_value"/>
      <sql>
        <![CDATA[
          SELECT md.pan_name as term,
                 md.pan_id as internal,
                 md.property as ontology_term_name,
                 md.number_value,
                 md.string_value,
                 md.date_value
          FROM apidbTuning.Metadata md
          WHERE dataset_subtype = 'copyNumberVariation'
            AND organism = '$$organismSinglePickCnv$$'
            AND md.pan_name like '%_ploidy%'
        ]]>
      </sql>
    </sqlQuery>

    <sqlQuery name="CnvMetadataSpecByOrganism" doNotTest="1" includeProjects="AmoebaDB,CryptoDB,PlasmoDB,ToxoDB,TriTrypDB,FungiDB,UniDB">
      <paramRef ref="organismParams.organismSinglePickCnv"/> <!-- noTranslation="true"/  -->
      <column name="ontology_term_name"/>
      <column name="parent_ontology_term_name"/>
      <column name="display_name"/>
      <column name="description"/>
      <column name="type"/>
      <column name="units"/>
      <column name="precision"/>
      <column name="is_range"/>
      <sql>
        <![CDATA[
          SELECT distinct ontology_term_name, parent_ontology_term_name, display_name,
                 description, type, units, precision, is_range
          FROM apidbTuning.Ontology
          WHERE dataset_subtype = 'copyNumberVariation'
            AND organism = '$$organismSinglePickCnv$$'
        ]]>
      </sql>
    </sqlQuery>

  </querySet>


  <groupSet name="paramGroups">
    <group name="advancedParams" displayName="Advanced Parameters" displayType="ShowHide">
      <description>
        <![CDATA[
                ]]>
      </description>
    </group>
    <group name="dynamicParams" displayName="Dynamic Parameters Group" displayType="dynamic" visible="true">
      <description>
        <![CDATA[
                ]]>
      </description>
    </group>
  </groupSet>

</wdkModel>
