<wdkModel>
    <querySet name="GeneAttributes" queryType="attribute" isCacheable="false">

     <!-- notes
          TODO
       - all projects need a gene alias query (or, we have to break that out of the
         <recordClass> element

     -->


            <defaultTestParamValues includeProjects="PlasmoDB,EuPathDB,UniDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">PlasmoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_221330</paramValue>
               <paramValue name="project_id">ToxoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd3_1400</paramValue>
               <paramValue name="project_id">CryptoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">GiardiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="TrichDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">TrichDB</paramValue>
            </defaultTestParamValues>

            <!--TODO revisit the source_id, its correct but is a random source_id-->
            <defaultTestParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">TriTrypDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">AmoebaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">ECU07_1760</paramValue>
               <paramValue name="project_id">MicrosporidiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="PiroplasmaDB">
               <paramValue name="source_id">BBOV_IV003850</paramValue>
               <paramValue name="project_id">PiroplasmaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="HostDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">HostDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="FungiDB,SchistoDB,VectorBase,InitDB">
               <paramValue name="source_id"></paramValue>
               <paramValue name="project_id"></paramValue>
            </defaultTestParamValues>

            <testRowCountSql includeProjects="EuPathDB">
               SELECT count(*) FROM ApidbTuning.GeneAttributes
            </testRowCountSql>
            <testRowCountSql excludeProjects="EuPathDB">
               select count(na_feature_id)
               from dots.GeneFeature
               where external_database_release_id in (
                 select distinct(dbr.external_database_release_id)
                 from ApidbTuning.GeneAttributes ga, sres.ExternalDatabase db,
                      sres.ExternalDatabaseRelease dbr
                 where db.name = ga.external_db_name
                   and dbr.version = ga.external_db_version
                   and dbr.external_database_id = db.external_database_id
                 )
            </testRowCountSql>



       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Gene GFF -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneGffAttrs">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="gff_seqid"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <sql>
          <![CDATA[
            select ga.source_id, ga.project_id,
                   ga.sequence_id as gff_seqid,
                   least(ga.start_min, ga.end_max) as gff_fstart,
                   greatest(ga.start_min, ga.end_max) as gff_fend
            from ApidbTuning.GeneAttributes ga
          ]]>
        </sql>
      </sqlQuery>




       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Gene GFF -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="AssayCounts">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="microarray_dataset_count"/>
        <column name="rnaseq_dataset_count"/>
        <sql>
          <![CDATA[
SELECT ga.source_id
   , ga.project_id
   , microarray.dataset_count AS microarray_dataset_count
   , rnaseq.dataset_count AS rnaseq_dataset_count
FROM (
SELECT source_id, count(DISTINCT dataset_name) AS dataset_count
FROM apidbtuning.profile p 
WHERE dataset_type = 'transcript_expression'
AND dataset_subtype = 'rnaseq'
GROUP BY source_id
) rnaseq,
(
SELECT source_id, count(DISTINCT dataset_name) AS dataset_count
FROM apidbtuning.profile p 
WHERE dataset_type = 'transcript_expression'
AND dataset_subtype = 'array'
GROUP BY source_id
) microarray,
apidbtuning.geneattributes ga
WHERE ga.source_id = RNASEQ.SOURCE_ID (+)
AND ga.source_id = microarray.source_id (+)
          ]]>
        </sql>
      </sqlQuery>





       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Gene alias -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="GeneAlias" doNotTest="true">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="old_source_id"/>
            <column name="old_project_id"/>
            <sql>
              <![CDATA[
                SELECT a.gene AS source_id, 
                       ga.project_id,
                       a.ID as old_source_id, ga.project_id AS old_project_id
                FROM ApidbTuning.GeneId a, apidbtuning.geneattributes ga
                WHERE a.unique_mapping = 1   
                and a.gene = ga.source_id
              ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="Bfmv">
            <column name="project_id" ignoreCase="true"/>
            <column name="lc_project_id" ignoreCase="false"/>
            <column name="project"  ignoreCase="true"/>
            <column name="source_id" ignoreCase="true"/>

            <!-- GENE specific -->

            <column name="start_min"/>
            <column name="end_max"/>
            <column name="start_min_text" sortingColumn="start_min"/>
            <column name="end_max_text" sortingColumn="end_max"/>
            <column name="strand_plus_minus"/>
            <column name="location_text"/>
            <column name="strain" ignoreCase="true"/>
            <column name="product" ignoreCase="true"/>
            <column name="name" ignoreCase="true"/>
            <column name="gene_type" ignoreCase="true"/>
            <column name="gene_ebi_biotype" ignoreCase="true"/>
            <column name="exon_count"/>
<!-- TODO            <column name="representative_transcript" includeProjects="ToxoDB,EuPathDB"/> -->
            <column name="is_deprecated"/>
            <column name="context_start"/>
            <column name="context_end"/>
            <column name="zoom_context_start"/>
            <column name="zoom_context_end"/>
            <column name="tight_zoom_context_start"/>
            <column name="tight_zoom_context_end"/>
            <column name="orthomcl_name"/>
            <column name="ortholog_number"/>
            <column name="paralog_number"/>
            <column name="transcript_count"/>
            <column name="representative_transcript"/>
            <column name="orthomcl_link"/>
            <column name="cyc_gene_id" sortingColumn="source_id"/>
            <column name="cyc_db" sortingColumn="organism_full"
                    excludeProjects="AmoebaDB,MicrosporidiaDB,FungiDB,HostDB,UniDB,VectorBase,InitDB,PiroplasmaDB"/>
            <column name="total_hts_snps"/>
            <column name="hts_nonsynonymous_snps"/>
            <column name="hts_synonymous_snps"/>
            <column name="hts_stop_codon_snps"/>
            <column name="hts_noncoding_snps"/>
            <column name="hts_nonsyn_syn_ratio"/>
            <column name="uniprot_id"/>
            <column name="uniprot_id_internal"/>
            <column name="entrez_id"/>
            <column name="is_pseudo"/>
            <column name="pseudo_string"/>
            <column name="sequence_id" ignoreCase="true"/>
            <column name="organism_full"  sortingColumn="organism_full"/>
            <column name="organism_text"  sortingColumn="organism_full"/><!-- CHECK-->
            <column name="genus_species"  sortingColumn="organism_full"/>
            <column name="ncbi_tax_id"/>
            <column name="so_id"/>
            <column name="so_term_name"/>
            <column name="so_term_definition"/>
            <column name="so_version"/>
            <column name="anticodon"/>
            <column name="external_db_name"/>
            <column name="external_db_version"/>
            <column name="chromosome" sortingColumn="chromosome_order_num"/>
            <column name="chromosome_order_num"/>
            <column name="previous_ids" excludeProjects="EuPathDB"/>
            <column name="user_comment_link_url" ignoreCase="false"/>
            <column name="show_strains"/>

            <!-- TODO UniDB Problem -->
            <sqlParamValue name="cyc_db" includeProjects="PlasmoDB,EuPathDB">
                <![CDATA[
                   DECODE(bfmv.organism,
                          'Plasmodium falciparum 3D7', 'PLASMO', null)
                ]]>
            </sqlParamValue>
            <sqlParamValue name="cyc_db" includeProjects="ToxoDB">
                <![CDATA[
                   'TOXO'
                ]]>
            </sqlParamValue>
 <!-- TODO : check this -->
            <sqlParamValue name="cyc_db" includeProjects="CryptoDB,GiardiaDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,FungiDB,HostDB,SchistoDB,UniDB,VectorBase,InitDB,PiroplasmaDB">
                <![CDATA[
                   DECODE(
                   substr(
                     bfmv.organism,
                     instr(ltrim(bfmv.organism), ' ', 1, 1)+1,
                     instr(ltrim(bfmv.organism)||' ', ' ', 1, 2) - instr(bfmv.organism, ' ', 1, 1) -1
                   ),
                  'parvum', 'cparvum', 'hominis')
                ]]>
            </sqlParamValue>

            <sql>
              <![CDATA[
            SELECT bfmv.project_id
                   , lower(bfmv.project_id) as lc_project_id
                   , bfmv.project_id as project
                   , bfmv.source_id
                   , start_min
                   , end_max
                   , trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text
                   , trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text
                   , bfmv.strand_plus_minus
                   , bfmv.locations as location_text
                   , bfmv.product
                   , bfmv.name
                   , gene_type
                   , gene_ebi_biotype
                   , bfmv.exon_count
                   , bfmv.transcript_count
                   , bfmv.representative_transcript
                   --TODO  , representative_transcript
                   , DECODE(bfmv.is_deprecated, 0, 'No', 1, 'Yes') AS is_deprecated
                   , bfmv.context_start
                   , bfmv.context_end
                   , bfmv.zoom_context_start
                   , bfmv.zoom_context_end
                   , bfmv.start_min - greatest(200, round((end_max - start_min) / 2)) as tight_zoom_context_start
                   , bfmv.end_max + greatest(200, round((end_max - start_min) / 2)) as tight_zoom_context_end
                   , ortholog_number
                   , paralog_number
                   , CASE WHEN (bfmv.gene_type LIKE 'pseudogen%' OR bfmv.so_term_name LIKE 'pseudogen%')
		          THEN 'N/A (orthology not determined for pseudogenes)'
		          WHEN bfmv.orthomcl_name LIKE 'OG6%'
			  THEN bfmv.orthomcl_name
			  WHEN bfmv.gene_type LIKE 'protein%'
			  THEN 'N/A (orthology not determined because protein is too short or has too many stop codons)'
			  ELSE 'N/A (orthology not determined for transcripts that are not protein-coding)'
			  END AS orthomcl_name
                   , CASE WHEN (bfmv.gene_type LIKE 'pseudogen%' OR  bfmv.so_term_name LIKE 'pseudogen%')
		          THEN 'N/A (orthology not determined for pseudogenes)'
		          WHEN bfmv.orthomcl_name LIKE 'OG6%'
                          THEN '<a href="https://orthomcl.org/orthomcl/app/record/group/'
				    || orthomcl_name || '" target="_blank">' || orthomcl_name || '</a>'
			  WHEN bfmv.gene_type LIKE 'protein%'
			  THEN 'N/A (orthology not determined because protein is too short or has too many stop codons)'
			  ELSE 'N/A (orthology not determined for transcripts that are not protein-coding)'
			  END AS orthomcl_link
                   , UPPER(bfmv.source_id) AS cyc_gene_id
                   , &&cyc_db&& AS cyc_db
                   , bfmv.total_hts_snps
                   , bfmv.hts_nonsynonymous_snps
                   , bfmv.hts_synonymous_snps
                   , bfmv.hts_noncoding_snps
                   , bfmv.hts_stop_codon_snps
                   , bfmv.hts_nonsyn_syn_ratio
                   , uniprot_id
                   , uniprot_id_internal
                   , entrez_id
                   , decode(is_pseudo,0,'No',1,'Yes') as is_pseudo
                   , decode(is_pseudo,0,'gene',1,'pseudogene') as pseudo_string
                   , CASE WHEN bfmv.previous_ids is not null THEN 'Previous IDs: '||bfmv.previous_ids||'<br>' ELSE '' END as previous_ids
                   , bfmv.sequence_id
                   , bfmv.organism as organism_full
                   , genus_species
                   , strain
                   , bfmv.ncbi_tax_id
                   , bfmv.so_id
                   , bfmv.so_term_name
                   , bfmv.so_term_definition
                   , bfmv.so_version
                   , bfmv.anticodon
                   , bfmv.external_db_name
                   , bfmv.external_db_version
                   , SUBSTR(bfmv.organism, 1, 1) || '. ' ||
                        SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) as organism_text
                   , CASE WHEN chromosome_order_num is not null THEN to_char(chromosome)
                        WHEN sequence_type in ('apicoplast_chromosome','mitochondrial_chromosome') THEN sequence_type
                        ELSE 'Not Assigned'
                   END as chromosome
                   , chromosome_order_num
                   , '@WEBAPP_BASE_URL@/user-comments/add?stableId='||bfmv.source_id
                   ||'&commentTargetId=gene'
                   ||'&externalDbName='||bfmv.external_db_name
                   ||'&externalDbVersion='||bfmv.external_db_version
                   ||'&organism='||genus_species
                   ||'&locations='||bfmv.start_min||'-'||bfmv.end_max
                   ||'&contig='||bfmv.sequence_id
                   ||'&strand='||bfmv.strand_plus_minus
                   as user_comment_link_url
                   , CASE WHEN (bfmv.strain_count > 1) THEN 'Yes' ELSE 'No' END AS show_strains
            from ApidbTuning.GeneAttributes bfmv
              ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="GeneOverview">
            <column name="project_id" ignoreCase="true"/>
            <column name="source_id" ignoreCase="true"/>
            <column name="genome_status" ignoreCase="true"/>
            <column name="data_release_policy" ignoreCase="false"/>
            <column name="type_with_pseudo" ignoreCase="false"/>
            <column name="user_comment_link_text" ignoreCase="false"/>
            <column name="num_user_comments" ignoreCase="false"/>
            <column name="apollo_ident" ignoreCase="false"/>
            <column name="show_apollo" ignoreCase="false"/>
            <sql>
              <![CDATA[
              SELECT ga.project_id, ga.source_id, gsum.release_policy AS data_release_policy,
                     CASE WHEN (ga.gene_type LIKE '%pseudogen%' OR ga.so_term_name LIKE '%pseudogen%')
                          THEN 'pseudogene' ELSE ga.gene_type END AS type_with_pseudo,
                     CASE WHEN gsum.is_reference_strain = 1
                            THEN decode(to_char(gsum.is_curated_genome), 'true', '<span class="eupathdb-GeneOverviewHighlighted">Curated</span>',
                                                                'false', '') || ' Reference Strain'
                          ELSE decode(to_char(gsum.is_curated_genome), 'true', '<span class="eupathdb-GeneOverviewHighlighted">Curated</span>',
                                                              'false', '') || ' Non-Reference Strain'
                     END AS genome_status,
                     CASE WHEN comm.num_user_comments >= 1
                            THEN '<a href="#UserComments">View <span class="eupathdb-GeneOverviewHighlighted">'
                                 || comm.num_user_comments || '</span> user comment'
                                 || CASE WHEN comm.num_user_comments = 1
                                           THEN '</a>'
                                         ELSE 's</a>'
                                    END
                          ELSE 'Add the first User Comment'
                     END AS user_comment_link_text,
                     NVL(comm.num_user_comments, 0) AS num_user_comments,
                     CASE WHEN (ga.project_id NOT IN ('HostDB')
                        AND aid.apolloid IS NOT NULL
                        AND ga.organism NOT IN ('Candida dubliniensis CD36')
                        AND ga.organism NOT IN ('Candida albicans SC5314')
                        AND ga.organism NOT IN ('Candida glabrata CBS 138')
                        AND ga.organism NOT IN ('Drosophila melanogaster iso-1'))
                        THEN 1
                        ELSE 0 END AS show_apollo,
                     CASE WHEN (ga.organism like 'Candida dubliniensis CD36'
                        OR ga.organism like 'Candida albicans SC5314'
                        OR ga.organism like 'Candida glabrata CBS 138')
                        THEN ''
                        ELSE aid.apolloid
                        END AS apollo_ident
              FROM apidbtuning.ApolloID aid, apidbtuning.geneattributes ga, apidbtuning.annotatedgenomesummary gsum,
                   (SELECT stable_id AS gene_id, project_name, count(distinct comment_id) AS num_user_comments
                    FROM @COMMENT_SCHEMA@MappedComment@COMMENT_DBLINK@
                    WHERE is_visible = 1
                    GROUP BY stable_id, project_name) comm
              WHERE gsum.taxon_id = ga.taxon_id
                AND ga.source_id = comm.gene_id(+)
                AND ga.project_id = comm.project_name(+)
                AND ga.organism = aid.organism(+)
              ]]>
            </sql>
        </sqlQuery>


        <!--
        <sqlQuery name="DnaGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="dna_gtracks" />
            <sql>
              <![CDATA[
            with has_proteomic_data as (
                    select source_id
                    from
                      (select
                         ga.gene_source_id as source_id
                         from APIDB.massspecsummary mss, APIDBTUNING.transcriptattributes ga
                        where ga.aa_sequence_id =mss.aa_sequence_id
                       ))
            select ga.source_id as source_id, ga.project_id,
                   gto.gtracks||'%1EUnifiedMassSpecPeptides' as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga,has_proteomic_data
            where ga.organism = gto.organism
              and ga.source_id = has_proteomic_data.source_id
              and gto.type = 'dna'
            union
            select ga.source_id as source_id, ga.project_id,
                   gto.gtracks as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and ga.source_id not in (select source_id from has_proteomic_data)
              and gto.type = 'dna'
            union
            select ga.source_id as source_id, ga.project_id,
                   '' as dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism(+)
            and ga.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto where gto.type = 'dna')
              ]]>
            </sql>
        </sqlQuery>
        -->

        <sqlQuery name="SyntenyGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="synteny_gtracks" />
            <sql>
              <![CDATA[
            select ga.source_id as source_id, ga.project_id,
                   gto.gtracks as  synteny_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and gto.type = 'synteny'
            union
            select ga.source_id as source_id, ga.project_id,
                   '' as synteny_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism(+)
            and ga.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto where gto.type = 'synteny')
              ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="GeneModelGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="gene_model_gtracks" />
            <column name="highlight"/>
            <sql>
              <![CDATA[
            select ga.source_id as source_id, ga.project_id,
                   gto.gtracks as gene_model_gtracks, '' as highlight
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and gto.type = 'gene_model'
            union
            select ta.gene_source_id as source_id, ta.project_id,
               'Gene%1EGSNAPUnifiedIntronJunctionRefined%1EGSNAPUnifiedIntronJunctionInclusive' as gene_model_gtracks,
               apidb.tab_to_string(set(cast(collect( ';h_feat=' || replace(ta.source_id,':','%3A') || '@yellow' ) as apidb.varchartab)),'') as highlight
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.transcriptattributes ta
            where ta.organism = gto.organism(+)
            and ta.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto where gto.type = 'gene_model')
            group by ta.gene_source_id, ta.project_id
              ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="ProteinExpressionPtracks" isCacheable="false" excludeProjects="EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="protein_expression_gtracks"/>
            <sql>
              <![CDATA[
SELECT
  ta.source_id
, ta.project_id
,(apidb.tab_to_string( SET(CAST(collect(track_names ORDER BY order_num, track_names) AS apidb.varchartab)), '%1E')) AS protein_expression_gtracks
FROM
  (SELECT
    'MassSpecPeptides_'
    ||dsp.name AS track_names
  , ga.gene_source_id
  , '1' AS order_num
  FROM
    apidb.datasource ds
  , apidbtuning.datasetpresenter dsp
  , APIDB.massspecsummary mss
  , SRES.externaldatabase ed
  , sres.externaldatabaserelease edr
  , APIDBTUNING.transcriptattributes ga
  WHERE
    (
      ds.name LIKE dsp.dataset_name_pattern
      OR ds.name = dsp.name
    )
    AND ds.name LIKE '%_massSpec_%'
    AND ds.type = 'protein_expression'
    AND mss.external_database_release_id = edr.external_database_release_id
    AND edr.external_database_id = ed.external_database_id
    AND ed.name = ds.name
    AND ga.aa_sequence_id = mss.aa_sequence_id
  UNION
  SELECT
    'UnifiedPostTraslationalMod' AS track_names
  , gene_source_id
  , '2' AS order_num
  FROM
    APIDBTUNING.MSModifiedPeptideSummary
  ) tracks
, apidbtuning.geneattributes ta
WHERE
  ta.source_id = tracks.gene_source_id (+)
GROUP BY
  ta.source_id
, ta.project_id
              ]]>
            </sql>
        </sqlQuery>



        <sqlQuery name="OrganismAbbrev">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="organism_filename"/>
            <column name="organismAbbrev"/>
            <column name="j_sequence_id"/>
            <column name="j_context_start"/>
            <column name="j_context_end"/>
            <column name="apollo_identifier"/> 
            <sql>
              <![CDATA[
                       select aid.apolloid AS apollo_identifier, ga.source_id, ga.project_id, o.name_for_filenames as organism_filename, o.PUBLIC_ABBREV as organismAbbrev, ga.sequence_id as j_sequence_id, ga.context_start as j_context_start, ga.context_end as j_context_end
                       from apidbtuning.ApolloID aid, apidbtuning.geneattributes ga, apidb.organism o
                       where ga.taxon_id = o.taxon_id
                       AND ga.organism = aid.organism(+)              
              ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="PbrowseOrganismAbbrev">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="orgAbbrev"/>
            <column name="prot_loc"/>
            <sql>
              <![CDATA[
                    SELECT ga.source_id, ga.project_id
                           , o.public_abbrev AS orgAbbrev
                           , ta.protein_source_id || '%3A1..' || ta.protein_length AS prot_loc
                    FROM apidbtuning.geneattributes ga, apidbtuning.transcriptattributes ta, apidb.organism o
                    WHERE ga.taxon_id = o.taxon_id
                    AND ga.representative_transcript = ta.source_id
              ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="GenomeSequencingAndAnnotation">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="attribution_partial"/>
            <column name="dataset_id"/>
            <column name="ds_annotation_version"/>
            <sql>
              <![CDATA[
select ga.source_id, ga.project_id, v.annotation_version as ds_annotation_version, v.dataset_presenter_id as dataset_id, v.description as attribution_partial
from apidbtuning.geneattributes ga left join
(select ga.source_id, ga.project_id,dsh.annotation_version,dsh.annotation_source, dnt.dataset_presenter_id, dsp.description
from (select max(dsh.build_number) bld, dsh.dataset_presenter_id 
      from apidbtuning.datasethistory dsh 
      where dsh.annotation_version is not null
      group by dsh.dataset_presenter_id
      ) dpb, apidbtuning.datasethistory dsh, apidbtuning.datasetnametaxon dnt, apidbtuning.geneattributes ga, apidbtuning.datasetpresenter dsp 
where dpb.bld = dsh.BUILD_NUMBER 
and dpb.dataset_presenter_id = dsh.DATASET_PRESENTER_ID
and dnt.dataset_presenter_id = dsp.dataset_presenter_id
and dsh.dataset_presenter_id = dnt.dataset_presenter_id 
and dnt.taxon_id = ga.taxon_id) v
on ga.source_id = v.source_id
and ga.project_id = v.project_id
              ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="AlphaFoldViz">
            <column name="project_id"/>
            <column name="source_id"/>
            <column name="has_alphafold"/>
            <column name="alphafold_id"/>
            <column name="alphafold_version"/>
            <sql>
                <![CDATA[
                    SELECT DISTINCT ga.project_id
                    , ga.source_id
                    , CASE WHEN afg.alphafold_id IS NULL THEN 0
                        ELSE 1 END as has_alphafold
                    , afg.alphafold_id
                    , afg.alphafold_version
                    FROM apidbtuning.alphafoldgenes afg
                    , apidbtuning.geneattributes ga
                    WHERE ga.source_id = afg.gene_source_id (+)
                ]]>
            </sql>
        </sqlQuery>
      </querySet>
    </wdkModel>
