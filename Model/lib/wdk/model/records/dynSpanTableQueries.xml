<wdkModel>
  <querySet name="DynSpanTables" queryType="table" isCacheable="false">


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- genes -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="Genes" doNotTest="true" excludeProjects="UniDB"
              isCacheable="false">

      <column name="source_id"/>
      <column name="project_id"/>
      <column name="gene_source_id"/>
      <column name="transcript_source_id"/>
      <column name="start_min"/>
      <column name="end_max"/>
      <column name="strand"/>
      <column name="product"/>

      <sql>
        <![CDATA[
          SELECT ids.source_id,ids.project_id,ga.gene_source_id as gene_source_id,min(ga.source_id) as transcript_source_id,
                 ga.gene_start_min as start_min,ga.gene_end_max as end_max,ga.strand,ga.gene_product as product
          FROM
            (SELECT source_id, project_id,
                   regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                   regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                   regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                   case when regexp_substr(source_id, '[^:]+', 1, 3) = 'f' then '+'
                     when regexp_substr(source_id, '[^:]+', 1, 3) = 'r' then '-'
                     else 'Unknown' end as strand
               FROM (##WDK_ID_SQL##) t
             ) ids,
             ApidbTuning.TranscriptAttributes ga
          WHERE ga.sequence_id = ids.seq_source_id AND
                ga.gene_start_min <= ids.end_max AND
                ga.gene_end_max >= ids.start_min
          GROUP BY ids.source_id,ids.project_id,ga.gene_source_id,
             ga.gene_start_min,ga.gene_end_max,ga.strand,ga.gene_product
          ORDER BY start_min
        ]]>
      </sql>
    </sqlQuery>


    <sqlQuery name="Genes" doNotTest="true" includeProjects="UniDB"
              isCacheable="false">

      <column name="source_id"/>
      <column name="gene_source_id"/>
      <column name="transcript_source_id"/>
      <column name="start_min"/>
      <column name="end_max"/>
      <column name="strand"/>
      <column name="product"/>

      <sql>
        <![CDATA[
          SELECT ids.source_id,ga.gene_source_id as gene_source_id,min(ga.source_id) as transcript_source_id,
                 ga.gene_start_min as start_min,ga.gene_end_max as end_max,ga.strand,ga.gene_product as product
          FROM
            (SELECT source_id,
                   regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                   regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                   regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                   case when regexp_substr(source_id, '[^:]+', 1, 3) = 'f' then '+'
                     when regexp_substr(source_id, '[^:]+', 1, 3) = 'r' then '-'
                     else 'Unknown' end as strand
             FROM (##WDK_ID_SQL##) t
            ) ids,
            ApidbTuning.TranscriptAttributes ga
          WHERE   ga.sequence_id = ids.seq_source_id AND
                  ga.gene_start_min <= ids.end_max AND
                  ga.gene_end_max >= ids.start_min
          GROUP by ids.source_id,ga.gene_source_id,
                 ga.gene_start_min,ga.gene_end_max,ga.strand,ga.gene_product
          ORDER BY start_min
        ]]>
      </sql>
    </sqlQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- ORFs -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ORFs" doNotTest="true"
              isCacheable="false">

      <column name="source_id"/>
      <column name="project_id"/>
      <column name="orf_source_id"/>
      <column name="start_min"/>
      <column name="end_max"/>
      <column name="length"/>
      <column name="strand"/>

      <sql>
        <![CDATA[
          SELECT ids.source_id,ids.project_id,oa.source_id as orf_source_id
              , oa.start_min,oa.end_max,oa.end_max - oa.start_min + 1 as length
              , CASE oa.is_reversed WHEN 0 THEN '+' WHEN 1 THEN '-' ELSE '.' END as strand,
          FROM
            (SELECT source_id, project_id,
                   regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                   regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                   regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                   case when regexp_substr(source_id, '[^:]+', 1, 3) = 'f' then '+'
                     when regexp_substr(source_id, '[^:]+', 1, 3) = 'r' then '-'
                     else 'Unknown' end as strand
             FROM (##WDK_ID_SQL##) t
            ) ids,
            ApidbTuning.OrfAttributes oa
          WHERE oa.nas_id = ids.seq_source_id
            AND oa.start_min <= ids.end_max
            AND oa.end_max >= ids.start_min
          ORDER BY start_min
        ]]>
      </sql>
    </sqlQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- SNPs -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="SNPs" doNotTest="true"
              isCacheable="false">
      <column name="source_id"/>
      <column name="project_id"/>
      <column name="snp_source_id"/>
      <column name="start_min"/>
      <column name="reference_strain"/>
      <column name="reference_na"/>
      <column name="gene_source_id"/>
      <column name="gene_strand"/>
      <column name="is_coding"/>

      <sql>
        <![CDATA[
          SELECT ids.source_id,ids.project_id,sa.source_id as snp_source_id,sa.location as start_min,sa.reference_strain,sa.reference_na,sa.gene_source_id,sa.gene_strand,sa.is_coding
          FROM
                  (SELECT source_id, project_id,
                         regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                         regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                         regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                         case when regexp_substr(source_id, '[^:]+', 1, 3) = 'f' then '+'
                   when regexp_substr(source_id, '[^:]+', 1, 3) = 'r' then '-'
                   else 'Unknown' end as strand
                     FROM (##WDK_ID_SQL##) t
                   ) ids,
                   ApidbTuning.SnpAttributes sa
          WHERE   sa.seq_source_id = ids.seq_source_id AND
                  sa.location >= ids.start_min   AND
                  sa.location <= ids.end_max AND
                  sa.dataset != 'WinzelerGeneticVariationArray_RSRC'
          ORDER BY sa.location
        ]]>
      </sql>
    </sqlQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- ESTs  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ESTs" doNotTest="true"
              isCacheable="false">

      <column name="source_id"/>
      <column name="project_id"/>
      <column name="est_source_id"/>
      <column name="target_start"/>
      <column name="target_end"/>
      <column name="length"/>
      <column name="strand"/>
      <column name="is_best_alignment"/>
      <column name="is_consistent"/>
      <column name="percent_identity"/>
      <column name="gene"/>

      <sql>
        <![CDATA[
          SELECT ids.source_id,ids.project_id,ea.source_id as est_source_id
            , ests.target_start,ests.target_end,ea.length,ests.strand
            , ests.is_best_alignment,ests.is_consistent,ests.percent_identity,ests.gene
          FROM
                (SELECT source_id, project_id,
                       regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                       regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                       regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                       case when regexp_substr(source_id, '[^:]+', 1, 3) = 'f' then '+'
                 when regexp_substr(source_id, '[^:]+', 1, 3) = 'r' then '-'
                 else 'Unknown' end as strand
                   FROM (##WDK_ID_SQL##) t
                 ) ids,
                ( SELECT distinct (enas.source_id) as sequence_id,
                                   e.accession,
                                   enas.project_id,
                                   blat.target_start,
                                   blat.target_end,
                                   CASE blat.is_best_alignment WHEN 0 THEN 'No' WHEN 1 THEN 'Yes' ELSE blat.is_best_alignment END as is_best_alignment,
                                   CASE blat.is_consistent WHEN 0 THEN 'No' WHEN 1 THEN 'Yes' ELSE blat.is_consistent END as is_consistent,
                                   CASE blat.is_reversed WHEN 0 THEN '+' WHEN 1 THEN '-' ELSE '.' END as strand,
                                   blat.percent_identity,
                                   eags.gene
                   FROM   dots.BlatAlignment blat,
                          dots.est e,
                          ApidbTuning.GenomicSeqAttributes enas,
                          ApidbTuning.EstAlignmentGenesummary eags
                   WHERE  blat.query_na_sequence_id = e.na_sequence_id
                     AND  blat.target_na_sequence_id = enas.na_sequence_id
                     AND eags.blat_alignment_id = blat.blat_alignment_id
                     AND  enas.is_top_level = 1
                   ) ests,
                 ApidbTuning.EstAttributes ea
          WHERE   ests.accession = ea.source_id AND
                ests.sequence_id = ids.seq_source_id AND
                ests.target_start <= ids.end_max AND
                ests.target_end >= ids.start_min
          ORDER BY target_start
        ]]>
      </sql>
    </sqlQuery>
  </querySet>
</wdkModel>