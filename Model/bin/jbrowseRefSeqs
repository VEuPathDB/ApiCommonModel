#!/usr/bin/perl

use strict;

use lib $ENV{GUS_HOME} . "/lib/perl";
use JSON;
use ApiCommonModel::Model::JBrowseUtil;

use Data::Dumper;

# TODO: remove gusHome from command line arg
my ($gusHome, $projectName, $organismAbbrev, $type) = @ARGV;

my $jbrowseUtil = ApiCommonModel::Model::JBrowseUtil->new({projectName => $projectName, organismAbbrev => $organismAbbrev, fileName => "_refSeqsCache.json", type => $type });

# we're done if we can get from cache file
if($jbrowseUtil->printFromCache()) {
  exit 0;
}
open(CACHE, "> " . $jbrowseUtil->getCacheFile()) or die "Cannot open file " . $jbrowseUtil->getCacheFile() . " for writing: $!";

my $dbh = $jbrowseUtil->getDbh();   

my $sql;

if($type eq 'genomic') {
  $sql = "select s.source_id, s.length
from webready.GenomicSeqAttributes_p s, apidb.organism o
where s.TAXON_ID = o.taxon_id
and s.is_top_level = 1
and o.ABBREV = '$organismAbbrev'
order by s.chromosome asc, s.length desc
";
}
elsif($type eq 'protein') {
  $sql = "select p.source_id, p.protein_length
from webready.ProteinAttributes_p p, webready.GenomicSeqAttributes_p s, apidb.organism o
where p.na_sequence_id = s.na_sequence_id
and s.TAXON_ID = o.taxon_id
and s.is_top_level = 1
and o.ABBREV = '$organismAbbrev'
";
}
else {
  die "only genomic or protein are valid types";
}



my $sh = $dbh->prepare($sql);
$sh->execute();

my $result = [];
while(my ($sourceId, $length) = $sh->fetchrow_array()) {

  my $hash =  {
    "name" => $sourceId,
    "start" => 0 + 0,
    "end" => $length + 0,
    "length" => $length + 0
  };

  push @$result, $hash;
}

$dbh->disconnect();

print encode_json($result);
print CACHE encode_json($result);
close CACHE;

