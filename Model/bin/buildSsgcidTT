#!/usr/bin/perl

use strict;

use lib "$ENV{GUS_HOME}/lib/perl";
use FgpUtil::Util::CommandHelper;
use Getopt::Long qw(GetOptions);
use EbrcModelCommon::Model::tmUtils;

my $GUS_HOME = $ENV{GUS_HOME};
my $CLASSPATH = &FgpUtil::Util::CommandHelper::getJavaClasspath($GUS_HOME);
my $sysProps = &FgpUtil::Util::CommandHelper::getSystemProps($GUS_HOME, 'Ssgcid');

my ($propfile, $instance, $schema, $suffix, $prefix, $filterValue, $debug, $username, $password);

Getopt::Long::Configure("pass_through");
GetOptions("propfile=s" => \$propfile,
           "instance=s" => \$instance,
           "schema=s" => \$schema,
           "suffix=s" => \$suffix,
           "prefix=s" => \$prefix,
           "filterValue=s" => \$filterValue,
           "debug!" => \$debug,
	  );
die "required parameter missing" unless ($propfile && $instance && $suffix);

($instance, $schema, $username, $password) = EbrcModelCommon::Model::tmUtils::getDbLoginInfo($instance, $schema, $propfile);

# fetch JSON from SSGCID
my $filename = "/tmp/ssgcid" . $suffix . ".json";
system("wget http://www.ssgcid.org/eupath/list_all?format=json --no-check-certificate --output-document " . $filename);

# run Java program
open(PROGRAM, "|java $sysProps -classpath $CLASSPATH org.apidb.apicommon.model.ssgcid.Ssgcid $suffix");

print PROGRAM "$instance\n$schema\n$username\n$password";

close(PROGRAM) or die "error in called program";

system("rm " . $filename);
